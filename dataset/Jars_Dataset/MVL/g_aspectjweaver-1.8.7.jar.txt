org/aspectj/lang/Aspects/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/Method/isAccessible()
org/aspectj/lang/Aspects/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/NoSuchMethodException/NoSuchMethodException(java.lang.String)
org/aspectj/lang/Aspects/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/lang/Aspects/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/Method/getModifiers()
org/aspectj/lang/Aspects/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
org/aspectj/lang/Aspects/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/Class/getName()
org/aspectj/lang/Aspects/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/Modifier/isPublic(int)
org/aspectj/lang/Aspects/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/StringBuilder/toString()
org/aspectj/lang/Aspects/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/aspectj/lang/Aspects/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/Method/setAccessible(boolean)
org/aspectj/lang/Aspects/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/Method/isAccessible()
org/aspectj/lang/Aspects/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/NoSuchMethodException/NoSuchMethodException(java.lang.String)
org/aspectj/lang/Aspects/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/lang/Aspects/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/Method/getModifiers()
org/aspectj/lang/Aspects/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
org/aspectj/lang/Aspects/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/Class/getName()
org/aspectj/lang/Aspects/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/Modifier/isPublic(int)
org/aspectj/lang/Aspects/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/StringBuilder/toString()
org/aspectj/lang/Aspects/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/StringBuilder/StringBuilder()
org/aspectj/lang/Aspects/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/Method/setAccessible(boolean)
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/List/size()
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/weaver/bcel/AtAjAttributes$1/1()
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/apache/bcel/classfile/Method/getName()
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/StringTokenizer/hasMoreTokens()
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/weaver/bcel/AtAjAttributes$MethodArgument/MethodArgument(java.lang.String,int)
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/Iterator/next()
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/List/toArray(java.lang.Object[])
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/lang/StringBuffer/toString()
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/StringTokenizer/nextToken()
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/apache/bcel/classfile/Method/isStatic()
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/List/iterator()
org/aspectj/weaver/bcel/AtAjAttributes/getMethodArgumentNames(org.aspectj.apache.bcel.classfile.Method,java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/bcel/AtAjAttributes/handlePointcutAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/apache/bcel/classfile/Method/isStatic()
org/aspectj/weaver/bcel/AtAjAttributes/handlePointcutAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/weaver/bcel/AtAjAttributes$LazyResolvedPointcutDefinition/LazyResolvedPointcutDefinition(org.aspectj.weaver.UnresolvedType,int,java.lang.String,org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.UnresolvedType,org.aspectj.weaver.patterns.Pointcut,org.aspectj.weaver.patterns.IScope)
org/aspectj/weaver/bcel/AtAjAttributes/handlePointcutAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/apache/bcel/classfile/Method/getModifiers()
org/aspectj/weaver/bcel/AtAjAttributes/handlePointcutAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/apache/bcel/classfile/Method/isAbstract()
org/aspectj/weaver/bcel/AtAjAttributes/handlePointcutAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/apache/bcel/classfile/Method/isPublic()
org/aspectj/weaver/bcel/AtAjAttributes/handlePointcutAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/weaver/patterns/Pointcut/setLocation(org.aspectj.weaver.ISourceContext,int,int)
org/aspectj/weaver/bcel/AtAjAttributes/handlePointcutAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/apache/bcel/classfile/Method/getName()
org/aspectj/weaver/bcel/AtAjAttributes/handlePointcutAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/weaver/AjAttribute$PointcutDeclarationAttribute/PointcutDeclarationAttribute(org.aspectj.weaver.ResolvedPointcutDefinition)
org/aspectj/weaver/bcel/AtAjAttributes/handlePointcutAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/AtAjAttributes/parsePerClausePointcut(java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeStruct)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/aspectj/weaver/bcel/AtAjAttributes/parsePerClausePointcut(java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeStruct)#java/lang/Object/equals(java.lang.Object)
org/aspectj/weaver/bcel/AtAjAttributes/parsePerClausePointcut(java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeStruct)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/AtAjAttributes/parsePerClausePointcut(java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeStruct)#org/aspectj/weaver/patterns/PerClause$Kind/getName()
org/aspectj/weaver/bcel/AtAjAttributes/parsePerClausePointcut(java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeStruct)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/AtAjAttributes/parsePerClausePointcut(java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeStruct)#org/aspectj/weaver/patterns/PerClause$KindAnnotationPrefix/extractPointcut(java.lang.String)
org/aspectj/weaver/bcel/AtAjAttributes/parsePerClausePointcut(java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeStruct)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/AtAjAttributes/parsePerClausePointcut(java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeStruct)#org/aspectj/weaver/patterns/PerClause$KindAnnotationPrefix/getName()
org/aspectj/weaver/bcel/AtAjAttributes/parsePerClausePointcut(java.lang.String,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeStruct)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/weaver/MethodDelegateTypeMunger/setSourceLocation(org.aspectj.bridge.ISourceLocation)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/List/size()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/ArrayList/ArrayList(int)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/apache/bcel/classfile/Method/getSignature()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/weaver/patterns/DeclareParents/setLocation(org.aspectj.weaver.ISourceContext,int,int)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/weaver/ResolvedType/isPrimitiveType()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/Iterator/next()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/weaver/ResolvedType/isParameterizedOrRawType()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/List/toArray(java.lang.Object[])
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/weaver/MethodDelegateTypeMunger$FieldHostTypeMunger/FieldHostTypeMunger(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.UnresolvedType,org.aspectj.weaver.patterns.TypePattern)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/weaver/AjAttribute$TypeMunger/TypeMunger(org.aspectj.weaver.ResolvedTypeMunger)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/weaver/AjAttribute$DeclareAttribute/DeclareAttribute(org.aspectj.weaver.patterns.Declare)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/apache/bcel/classfile/Method/getName()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/util/List/iterator()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareMixinAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeMethodStruct)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#java/io/IOException/printStackTrace()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#org/aspectj/apache/bcel/classfile/Field/getAttributes()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#org/aspectj/weaver/bcel/AtAjAttributes$AjAttributeFieldStruct/AjAttributeFieldStruct(org.aspectj.apache.bcel.classfile.Field,org.aspectj.weaver.bcel.BcelField,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#org/aspectj/weaver/bcel/AtAjAttributes$AjAttributeMethodStruct/AjAttributeMethodStruct(org.aspectj.apache.bcel.classfile.Method,org.aspectj.weaver.bcel.BcelMethod,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#org/aspectj/apache/bcel/classfile/Method/getAttributes()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#java/lang/String/charAt(int)
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#org/aspectj/apache/bcel/classfile/JavaClass/isInterface()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#org/aspectj/weaver/bcel/AtAjAttributes$AjAttributeStruct/AjAttributeStruct(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#java/lang/String/length()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#org/aspectj/weaver/AjAttribute$WeaverVersionInfo/getMajorVersion()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#java/util/List/addAll(java.util.Collection)
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#org/aspectj/weaver/AjAttribute$WeaverVersionInfo/read(org.aspectj.weaver.VersionedDataInputStream)
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#org/aspectj/weaver/AjAttribute$WeaverVersionInfo/WeaverVersionInfo()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#org/aspectj/apache/bcel/classfile/Method/getName()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#java/util/List/add(int,java.lang.Object)
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#org/aspectj/weaver/ReferenceType/getName()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5ClassAttributes(org.aspectj.asm.AsmManager,org.aspectj.apache.bcel.classfile.JavaClass,org.aspectj.weaver.ReferenceType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler,boolean)#org/aspectj/apache/bcel/classfile/Field/getName()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#org/aspectj/weaver/patterns/DeclareParents/setLocation(org.aspectj.weaver.ISourceContext,int,int)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#org/aspectj/weaver/MethodDelegateTypeMunger/setSourceLocation(org.aspectj.bridge.ISourceLocation)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#java/lang/reflect/Modifier/isProtected(int)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#org/aspectj/weaver/AjAttribute$DeclareAttribute/DeclareAttribute(org.aspectj.weaver.patterns.Declare)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#java/util/ArrayList/ArrayList(int)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#org/aspectj/weaver/ResolvedType/toString()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#java/util/Iterator/next()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#org/aspectj/weaver/ResolvedType/isParameterizedOrRawType()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#org/aspectj/weaver/MethodDelegateTypeMunger$FieldHostTypeMunger/FieldHostTypeMunger(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.UnresolvedType,org.aspectj.weaver.patterns.TypePattern)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#org/aspectj/weaver/AjAttribute$TypeMunger/TypeMunger(org.aspectj.weaver.ResolvedTypeMunger)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#java/lang/reflect/Modifier/isPublic(int)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#java/lang/reflect/Modifier/isPrivate(int)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#org/aspectj/apache/bcel/classfile/Field/getSignature()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/bcel/AtAjAttributes/handleDeclareParentsAnnotation(org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnos,org.aspectj.weaver.bcel.AtAjAttributes$AjAttributeFieldStruct)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5MethodAttributes(org.aspectj.apache.bcel.classfile.Method,org.aspectj.weaver.bcel.BcelMethod,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedPointcutDefinition,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)#org/aspectj/weaver/bcel/AtAjAttributes$ThrownFormalNotDeclaredInAdviceSignatureException/getFormalName()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5MethodAttributes(org.aspectj.apache.bcel.classfile.Method,org.aspectj.weaver.bcel.BcelMethod,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedPointcutDefinition,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/AtAjAttributes/readAj5MethodAttributes(org.aspectj.apache.bcel.classfile.Method,org.aspectj.weaver.bcel.BcelMethod,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedPointcutDefinition,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)#java/util/Collections/emptyList()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5MethodAttributes(org.aspectj.apache.bcel.classfile.Method,org.aspectj.weaver.bcel.BcelMethod,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedPointcutDefinition,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)#org/aspectj/apache/bcel/classfile/Method/getName()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5MethodAttributes(org.aspectj.apache.bcel.classfile.Method,org.aspectj.weaver.bcel.BcelMethod,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedPointcutDefinition,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/bcel/AtAjAttributes/readAj5MethodAttributes(org.aspectj.apache.bcel.classfile.Method,org.aspectj.weaver.bcel.BcelMethod,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedPointcutDefinition,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)#org/aspectj/apache/bcel/classfile/Method/isStatic()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5MethodAttributes(org.aspectj.apache.bcel.classfile.Method,org.aspectj.weaver.bcel.BcelMethod,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedPointcutDefinition,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)#org/aspectj/weaver/bcel/AtAjAttributes$AjAttributeMethodStruct/AjAttributeMethodStruct(org.aspectj.apache.bcel.classfile.Method,org.aspectj.weaver.bcel.BcelMethod,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)
org/aspectj/weaver/bcel/AtAjAttributes/readAj5MethodAttributes(org.aspectj.apache.bcel.classfile.Method,org.aspectj.weaver.bcel.BcelMethod,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedPointcutDefinition,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)#org/aspectj/apache/bcel/classfile/Method/getAttributes()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5MethodAttributes(org.aspectj.apache.bcel.classfile.Method,org.aspectj.weaver.bcel.BcelMethod,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedPointcutDefinition,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)#org/aspectj/apache/bcel/classfile/Method/isPublic()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5MethodAttributes(org.aspectj.apache.bcel.classfile.Method,org.aspectj.weaver.bcel.BcelMethod,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedPointcutDefinition,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5MethodAttributes(org.aspectj.apache.bcel.classfile.Method,org.aspectj.weaver.bcel.BcelMethod,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedPointcutDefinition,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5MethodAttributes(org.aspectj.apache.bcel.classfile.Method,org.aspectj.weaver.bcel.BcelMethod,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedPointcutDefinition,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)#org/aspectj/weaver/bcel/AtAjAttributes$ReturningFormalNotDeclaredInAdviceSignatureException/getFormalName()
org/aspectj/weaver/bcel/AtAjAttributes/readAj5MethodAttributes(org.aspectj.apache.bcel.classfile.Method,org.aspectj.weaver.bcel.BcelMethod,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedPointcutDefinition,org.aspectj.weaver.ISourceContext,org.aspectj.bridge.IMessageHandler)#java/lang/StringBuilder/toString()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/String/toLowerCase()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/StringBuilder/append(int)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/String/length()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/get(int)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/String/indexOf(int,int)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#org/aspectj/weaver/ResolvedType/getSignature()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/String/charAt(int)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/String/trim()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/size()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#org/aspectj/weaver/loadtime/definition/Definition$AdviceKind/toString()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/toArray(java.lang.Object[])
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/String/substring(int,int)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/String/indexOf(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/String/substring(int)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/String/replace(char,char)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/StringBuilder/toString()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/generateAdviceMethod(org.aspectj.weaver.loadtime.definition.Definition$PointcutAndAdvice,int,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/String/endsWith(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/lang/Object/toString()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/util/List/size()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/lang/String/substring(int)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#org/aspectj/weaver/ResolvedMember/getSignature()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/util/ArrayList/ArrayList()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/lang/String/String(char[])
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/util/Iterator/hasNext()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/util/List/isEmpty()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/util/Iterator/next()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#org/aspectj/weaver/ResolvedType/getTypeParameters()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/lang/String/substring(int,int)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/lang/String/indexOf(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/lang/String/lastIndexOf(int)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/util/List/add(java.lang.Object)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/lang/String/toCharArray()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/util/List/contains(java.lang.Object)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/util/List/iterator()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/util/Collection/iterator()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#java/lang/StringBuilder/toString()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/validate()#org/aspectj/weaver/ResolvedType/isParameterizedType()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/String/length()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/Double/parseDouble(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/util/List/iterator()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/Long/parseLong(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/Boolean/parseBoolean(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/Short/parseShort(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/Float/parseFloat(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/util/Iterator/hasNext()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/String/charAt(int)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/String/trim()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/util/Iterator/next()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/String/substring(int,int)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/String/substring(int)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/Byte/parseByte(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/buildAnnotationFromString(org.aspectj.apache.bcel.classfile.ConstantPool,org.aspectj.weaver.World,java.lang.String)#java/lang/String/indexOf(int)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#java/util/ArrayList/ArrayList()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#org/aspectj/weaver/ResolvedType/forName(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#java/util/Iterator/hasNext()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#java/lang/StringBuilder/append(int)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#org/aspectj/weaver/ReferenceType/getName()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#java/util/Collections/emptyList()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#java/util/List/size()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#org/aspectj/apache/bcel/generic/FieldGen/addAnnotation(org.aspectj.apache.bcel.classfile.annotation.AnnotationGen)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#java/util/Iterator/next()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#java/lang/String/replace(char,char)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#java/util/List/add(java.lang.Object)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#java/util/List/iterator()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#java/lang/StringBuilder/toString()
org/aspectj/weaver/loadtime/ConcreteAspectCodeGen/getBytes()#org/aspectj/weaver/ResolvedType/isParameterizedType()
org/aspectj/weaver/UnresolvedType/signatureToName(java.lang.String)#java/lang/StringBuffer/append(char)
org/aspectj/weaver/UnresolvedType/signatureToName(java.lang.String)#java/lang/String/length()
org/aspectj/weaver/UnresolvedType/signatureToName(java.lang.String)#java/lang/String/substring(int,int)
org/aspectj/weaver/UnresolvedType/signatureToName(java.lang.String)#java/lang/String/replace(char,char)
org/aspectj/weaver/UnresolvedType/signatureToName(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/UnresolvedType/signatureToName(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/UnresolvedType/signatureToName(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/weaver/UnresolvedType/signatureToName(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/UnresolvedType/signatureToName(java.lang.String)#java/lang/String/charAt(int)
org/aspectj/weaver/UnresolvedType/signatureToName(java.lang.String)#java/lang/StringBuffer/toString()
org/aspectj/weaver/UnresolvedType/signatureToName(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/UnresolvedType/signatureToName(java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/aspectj/weaver/UnresolvedType/nameToSignature(java.lang.String)#java/lang/StringBuffer/append(char)
org/aspectj/weaver/UnresolvedType/nameToSignature(java.lang.String)#java/lang/String/length()
org/aspectj/weaver/UnresolvedType/nameToSignature(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/weaver/UnresolvedType/nameToSignature(java.lang.String)#java/lang/String/substring(int,int)
org/aspectj/weaver/UnresolvedType/nameToSignature(java.lang.String)#java/lang/String/replace(char,char)
org/aspectj/weaver/UnresolvedType/nameToSignature(java.lang.String)#java/lang/StringBuilder/append(char)
org/aspectj/weaver/UnresolvedType/nameToSignature(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/UnresolvedType/nameToSignature(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/UnresolvedType/nameToSignature(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/UnresolvedType/nameToSignature(java.lang.String)#java/lang/String/charAt(int)
org/aspectj/weaver/UnresolvedType/nameToSignature(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/UnresolvedType/nameToSignature(java.lang.String)#java/lang/StringBuffer/toString()
org/aspectj/weaver/UnresolvedType/nameToSignature(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/UnresolvedType/nameToSignature(java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/aspectj/weaver/UnresolvedType/nameToSignature(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/weaver/UnresolvedType/nameToSignature(java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/aspectj/weaver/patterns/IfPointcut/findResidueInternal(org.aspectj.weaver.Shadow,org.aspectj.weaver.patterns.ExposedState)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/patterns/IfPointcut/findResidueInternal(org.aspectj.weaver.Shadow,org.aspectj.weaver.patterns.ExposedState)#java/util/List/size()
org/aspectj/weaver/patterns/IfPointcut/findResidueInternal(org.aspectj.weaver.Shadow,org.aspectj.weaver.patterns.ExposedState)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/patterns/IfPointcut/findResidueInternal(org.aspectj.weaver.Shadow,org.aspectj.weaver.patterns.ExposedState)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/patterns/IfPointcut/findResidueInternal(org.aspectj.weaver.Shadow,org.aspectj.weaver.patterns.ExposedState)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/patterns/IfPointcut/findResidueInternal(org.aspectj.weaver.Shadow,org.aspectj.weaver.patterns.ExposedState)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/patterns/IfPointcut/findResidueInternal(org.aspectj.weaver.Shadow,org.aspectj.weaver.patterns.ExposedState)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/patterns/IfPointcut/findResidueInternal(org.aspectj.weaver.Shadow,org.aspectj.weaver.patterns.ExposedState)#java/lang/StringBuilder/append(int)
org/aspectj/weaver/patterns/IfPointcut/findResidueInternal(org.aspectj.weaver.Shadow,org.aspectj.weaver.patterns.ExposedState)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/patterns/IfPointcut/findResidueInternal(org.aspectj.weaver.Shadow,org.aspectj.weaver.patterns.ExposedState)#java/util/List/toArray(java.lang.Object[])
org/aspectj/weaver/patterns/IfPointcut/findResidueInternal(org.aspectj.weaver.Shadow,org.aspectj.weaver.patterns.ExposedState)#java/lang/StringBuffer/toString()
org/aspectj/weaver/patterns/IfPointcut/findResidueInternal(org.aspectj.weaver.Shadow,org.aspectj.weaver.patterns.ExposedState)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/patterns/IfPointcut/findResidueInternal(org.aspectj.weaver.Shadow,org.aspectj.weaver.patterns.ExposedState)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/patterns/IfPointcut/findResidueInternal(org.aspectj.weaver.Shadow,org.aspectj.weaver.patterns.ExposedState)#java/lang/StringBuilder/toString()
org/aspectj/weaver/patterns/IfPointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#org/aspectj/weaver/ResolvedPointcutDefinition/getParameterTypes()
org/aspectj/weaver/patterns/IfPointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#org/aspectj/weaver/patterns/IfPointcut/copyLocationFrom(org.aspectj.weaver.patterns.PatternNode)
org/aspectj/weaver/patterns/IfPointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#java/util/Iterator/next()
org/aspectj/weaver/patterns/IfPointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/patterns/IfPointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/patterns/IfPointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/patterns/IfPointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#java/lang/StringBuilder/toString()
org/aspectj/weaver/patterns/IfPointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#org/aspectj/weaver/ResolvedPointcutDefinition/getDeclaringType()
org/aspectj/weaver/patterns/IfPointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#org/aspectj/weaver/ResolvedPointcutDefinition/getName()
org/aspectj/weaver/patterns/IfPointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#java/util/Iterator/hasNext()
org/aspectj/weaver/patterns/IfPointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/patterns/IfPointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#org/aspectj/weaver/patterns/IfPointcut/isDeclare(org.aspectj.weaver.ShadowMunger)
org/aspectj/weaver/patterns/IfPointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#org/aspectj/weaver/patterns/IfPointcut/getSourceLocation()
org/aspectj/weaver/patterns/IfPointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/util/UtilClassLoader/readClass(java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
org/aspectj/util/UtilClassLoader/readClass(java.lang.String)#java/util/Iterator/hasNext()
org/aspectj/util/UtilClassLoader/readClass(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/UtilClassLoader/readClass(java.lang.String)#java/io/File/canRead()
org/aspectj/util/UtilClassLoader/readClass(java.lang.String)#java/util/Iterator/next()
org/aspectj/util/UtilClassLoader/readClass(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/UtilClassLoader/readClass(java.lang.String)#java/lang/String/replace(char,char)
org/aspectj/util/UtilClassLoader/readClass(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/util/UtilClassLoader/readClass(java.lang.String)#java/util/List/iterator()
org/aspectj/bridge/context/CompilationAndWeavingContext/getCurrentContext()#java/util/Stack/push(java.lang.Object)
org/aspectj/bridge/context/CompilationAndWeavingContext/getCurrentContext()#java/util/Stack/iterator()
org/aspectj/bridge/context/CompilationAndWeavingContext/getCurrentContext()#java/util/Iterator/next()
org/aspectj/bridge/context/CompilationAndWeavingContext/getCurrentContext()#java/util/Stack/isEmpty()
org/aspectj/bridge/context/CompilationAndWeavingContext/getCurrentContext()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/bridge/context/CompilationAndWeavingContext/getCurrentContext()#org/aspectj/bridge/context/CompilationAndWeavingContext$ContextStackEntry/getData()
org/aspectj/bridge/context/CompilationAndWeavingContext/getCurrentContext()#java/util/Stack/Stack()
org/aspectj/bridge/context/CompilationAndWeavingContext/getCurrentContext()#java/util/Iterator/hasNext()
org/aspectj/bridge/context/CompilationAndWeavingContext/getCurrentContext()#java/util/Stack/pop()
org/aspectj/bridge/context/CompilationAndWeavingContext/getCurrentContext()#java/lang/String/toString()
org/aspectj/bridge/context/CompilationAndWeavingContext/getCurrentContext()#java/lang/StringBuffer/toString()
org/aspectj/bridge/context/CompilationAndWeavingContext/getCurrentContext()#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/bcel/BcelField/unpackGenericSignature()#org/aspectj/weaver/bcel/BcelObjectType/getGenericClassTypeSignature()
org/aspectj/weaver/bcel/BcelField/unpackGenericSignature()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/weaver/bcel/BcelField/unpackGenericSignature()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelField/unpackGenericSignature()#org/aspectj/weaver/bcel/BcelField/getReturnType()
org/aspectj/weaver/bcel/BcelField/unpackGenericSignature()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelField/unpackGenericSignature()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/aspectj/weaver/bcel/BcelField/unpackGenericSignature()#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelField/unpackGenericSignature()#org/aspectj/weaver/bcel/BcelGenericSignatureToTypeXConverter$GenericSignatureFormatException/getMessage()
org/aspectj/weaver/bcel/BcelField/unpackGenericSignature()#org/aspectj/weaver/bcel/BcelField/toString()
org/aspectj/weaver/bcel/BcelField/unpackGenericSignature()#org/aspectj/apache/bcel/classfile/Field/getGenericSignature()
org/aspectj/apache/bcel/classfile/Utility/signatureToStringInternal(java.lang.String,boolean)#org/aspectj/apache/bcel/classfile/Utility$ResultHolder/getConsumedChars()
org/aspectj/apache/bcel/classfile/Utility/signatureToStringInternal(java.lang.String,boolean)#org/aspectj/apache/bcel/classfile/Utility$ResultHolder/ResultHolder(java.lang.String,int)
org/aspectj/apache/bcel/classfile/Utility/signatureToStringInternal(java.lang.String,boolean)#java/lang/String/length()
org/aspectj/apache/bcel/classfile/Utility/signatureToStringInternal(java.lang.String,boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/signatureToStringInternal(java.lang.String,boolean)#java/lang/StringBuffer/toString()
org/aspectj/apache/bcel/classfile/Utility/signatureToStringInternal(java.lang.String,boolean)#java/lang/String/substring(int,int)
org/aspectj/apache/bcel/classfile/Utility/signatureToStringInternal(java.lang.String,boolean)#java/lang/String/substring(int)
org/aspectj/apache/bcel/classfile/Utility/signatureToStringInternal(java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/apache/bcel/classfile/Utility/signatureToStringInternal(java.lang.String,boolean)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/signatureToStringInternal(java.lang.String,boolean)#java/lang/StringBuffer/insert(int,java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/signatureToStringInternal(java.lang.String,boolean)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/classfile/Utility/signatureToStringInternal(java.lang.String,boolean)#org/aspectj/apache/bcel/classfile/Utility$ResultHolder/getResult()
org/aspectj/apache/bcel/classfile/Utility/signatureToStringInternal(java.lang.String,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/signatureToStringInternal(java.lang.String,boolean)#java/lang/String/charAt(int)
org/aspectj/apache/bcel/classfile/Utility/signatureToStringInternal(java.lang.String,boolean)#java/lang/String/indexOf(int)
org/aspectj/apache/bcel/classfile/Utility/signatureToStringInternal(java.lang.String,boolean)#java/lang/StringBuffer/StringBuffer()
org/aspectj/apache/bcel/classfile/Utility/codeToString(org.aspectj.apache.bcel.util.ByteSequence,org.aspectj.apache.bcel.classfile.ConstantPool,boolean)#org/aspectj/apache/bcel/util/ByteSequence/readUnsignedShort()
org/aspectj/apache/bcel/classfile/Utility/codeToString(org.aspectj.apache.bcel.util.ByteSequence,org.aspectj.apache.bcel.classfile.ConstantPool,boolean)#java/lang/StringBuilder/append(int)
org/aspectj/apache/bcel/classfile/Utility/codeToString(org.aspectj.apache.bcel.util.ByteSequence,org.aspectj.apache.bcel.classfile.ConstantPool,boolean)#org/aspectj/apache/bcel/util/ByteSequence/readInt()
org/aspectj/apache/bcel/classfile/Utility/codeToString(org.aspectj.apache.bcel.util.ByteSequence,org.aspectj.apache.bcel.classfile.ConstantPool,boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/codeToString(org.aspectj.apache.bcel.util.ByteSequence,org.aspectj.apache.bcel.classfile.ConstantPool,boolean)#java/lang/System/exit(int)
org/aspectj/apache/bcel/classfile/Utility/codeToString(org.aspectj.apache.bcel.util.ByteSequence,org.aspectj.apache.bcel.classfile.ConstantPool,boolean)#java/lang/StringBuffer/toString()
org/aspectj/apache/bcel/classfile/Utility/codeToString(org.aspectj.apache.bcel.util.ByteSequence,org.aspectj.apache.bcel.classfile.ConstantPool,boolean)#org/aspectj/apache/bcel/util/ByteSequence/readUnsignedByte()
org/aspectj/apache/bcel/classfile/Utility/codeToString(org.aspectj.apache.bcel.util.ByteSequence,org.aspectj.apache.bcel.classfile.ConstantPool,boolean)#java/lang/StringBuffer/append(int)
org/aspectj/apache/bcel/classfile/Utility/codeToString(org.aspectj.apache.bcel.util.ByteSequence,org.aspectj.apache.bcel.classfile.ConstantPool,boolean)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/codeToString(org.aspectj.apache.bcel.util.ByteSequence,org.aspectj.apache.bcel.classfile.ConstantPool,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/codeToString(org.aspectj.apache.bcel.util.ByteSequence,org.aspectj.apache.bcel.classfile.ConstantPool,boolean)#java/io/PrintStream/println(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/codeToString(org.aspectj.apache.bcel.util.ByteSequence,org.aspectj.apache.bcel.classfile.ConstantPool,boolean)#org/aspectj/apache/bcel/util/ByteSequence/readShort()
org/aspectj/apache/bcel/classfile/Utility/codeToString(org.aspectj.apache.bcel.util.ByteSequence,org.aspectj.apache.bcel.classfile.ConstantPool,boolean)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/codeToString(org.aspectj.apache.bcel.util.ByteSequence,org.aspectj.apache.bcel.classfile.ConstantPool,boolean)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/classfile/Utility/codeToString(org.aspectj.apache.bcel.util.ByteSequence,org.aspectj.apache.bcel.classfile.ConstantPool,boolean)#org/aspectj/apache/bcel/util/ByteSequence/readByte()
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#org/aspectj/apache/bcel/classfile/Utility$ResultHolder/getConsumedChars()
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#java/lang/String/valueOf(java.lang.Object)
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#java/lang/StringBuilder/append(int)
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#java/lang/String/indexOf(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#java/lang/String/substring(int)
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#org/aspectj/apache/bcel/classfile/Utility$ResultHolder/getResult()
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#java/lang/String/charAt(int)
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#java/lang/String/length()
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#java/lang/StringBuffer/length()
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#java/lang/String/equals(java.lang.Object)
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#java/lang/StringBuffer/toString()
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/classfile/Utility/methodSignatureToString(java.lang.String,java.lang.String,java.lang.String,boolean,org.aspectj.apache.bcel.classfile.LocalVariableTable)#java/lang/StringBuffer/setLength(int)
org/aspectj/apache/bcel/classfile/Utility/codeToString(byte[],org.aspectj.apache.bcel.classfile.ConstantPool,int,int,boolean)#java/lang/String/valueOf(java.lang.Object)
org/aspectj/apache/bcel/classfile/Utility/codeToString(byte[],org.aspectj.apache.bcel.classfile.ConstantPool,int,int,boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/codeToString(byte[],org.aspectj.apache.bcel.classfile.ConstantPool,int,int,boolean)#java/lang/StringBuffer/toString()
org/aspectj/apache/bcel/classfile/Utility/codeToString(byte[],org.aspectj.apache.bcel.classfile.ConstantPool,int,int,boolean)#java/lang/StringBuilder/append(char)
org/aspectj/apache/bcel/classfile/Utility/codeToString(byte[],org.aspectj.apache.bcel.classfile.ConstantPool,int,int,boolean)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/codeToString(byte[],org.aspectj.apache.bcel.classfile.ConstantPool,int,int,boolean)#org/aspectj/apache/bcel/util/ByteSequence/available()
org/aspectj/apache/bcel/classfile/Utility/codeToString(byte[],org.aspectj.apache.bcel.classfile.ConstantPool,int,int,boolean)#java/io/IOException/printStackTrace()
org/aspectj/apache/bcel/classfile/Utility/codeToString(byte[],org.aspectj.apache.bcel.classfile.ConstantPool,int,int,boolean)#java/lang/StringBuffer/StringBuffer(int)
org/aspectj/apache/bcel/classfile/Utility/codeToString(byte[],org.aspectj.apache.bcel.classfile.ConstantPool,int,int,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/codeToString(byte[],org.aspectj.apache.bcel.classfile.ConstantPool,int,int,boolean)#java/io/PrintStream/println(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/codeToString(byte[],org.aspectj.apache.bcel.classfile.ConstantPool,int,int,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/apache/bcel/classfile/Utility/codeToString(byte[],org.aspectj.apache.bcel.classfile.ConstantPool,int,int,boolean)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/classfile/Utility/codeToString(byte[],org.aspectj.apache.bcel.classfile.ConstantPool,int,int,boolean)#java/lang/String/valueOf(int)
org/aspectj/apache/bcel/classfile/Utility/getParameterAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List[])#java/util/ArrayList/ArrayList()
org/aspectj/apache/bcel/classfile/Utility/getParameterAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List[])#java/io/IOException/printStackTrace()
org/aspectj/apache/bcel/classfile/Utility/getParameterAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List[])#java/util/Iterator/hasNext()
org/aspectj/apache/bcel/classfile/Utility/getParameterAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List[])#java/io/PrintStream/println(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/getParameterAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List[])#java/io/DataOutputStream/close()
org/aspectj/apache/bcel/classfile/Utility/getParameterAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List[])#java/util/Iterator/next()
org/aspectj/apache/bcel/classfile/Utility/getParameterAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List[])#java/util/List/toArray(java.lang.Object[])
org/aspectj/apache/bcel/classfile/Utility/getParameterAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List[])#java/io/DataOutputStream/writeShort(int)
org/aspectj/apache/bcel/classfile/Utility/getParameterAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List[])#java/util/List/add(java.lang.Object)
org/aspectj/apache/bcel/classfile/Utility/getParameterAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List[])#java/util/List/iterator()
org/aspectj/apache/bcel/classfile/Utility/getParameterAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List[])#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/aspectj/apache/bcel/classfile/Utility/getParameterAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List[])#java/io/DataOutputStream/writeByte(int)
org/aspectj/apache/bcel/classfile/Utility/getParameterAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List[])#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
org/aspectj/apache/bcel/classfile/Utility/getParameterAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List[])#java/io/ByteArrayOutputStream/toByteArray()
org/aspectj/apache/bcel/classfile/Utility/getAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List)#java/util/ArrayList/ArrayList()
org/aspectj/apache/bcel/classfile/Utility/getAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List)#java/io/IOException/printStackTrace()
org/aspectj/apache/bcel/classfile/Utility/getAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List)#java/util/Iterator/hasNext()
org/aspectj/apache/bcel/classfile/Utility/getAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List)#java/io/PrintStream/println(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/getAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List)#java/io/DataOutputStream/close()
org/aspectj/apache/bcel/classfile/Utility/getAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List)#java/util/Iterator/next()
org/aspectj/apache/bcel/classfile/Utility/getAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List)#java/io/DataOutputStream/writeShort(int)
org/aspectj/apache/bcel/classfile/Utility/getAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List)#java/util/List/add(java.lang.Object)
org/aspectj/apache/bcel/classfile/Utility/getAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List)#java/util/List/iterator()
org/aspectj/apache/bcel/classfile/Utility/getAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/aspectj/apache/bcel/classfile/Utility/getAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List)#java/util/List/size()
org/aspectj/apache/bcel/classfile/Utility/getAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List)#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
org/aspectj/apache/bcel/classfile/Utility/getAnnotationAttributes(org.aspectj.apache.bcel.classfile.ConstantPool,java.util.List)#java/io/ByteArrayOutputStream/toByteArray()
org/aspectj/apache/bcel/classfile/Utility/replace(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/length()
org/aspectj/apache/bcel/classfile/Utility/replace(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/indexOf(java.lang.String,int)
org/aspectj/apache/bcel/classfile/Utility/replace(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuffer/toString()
org/aspectj/apache/bcel/classfile/Utility/replace(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/substring(int,int)
org/aspectj/apache/bcel/classfile/Utility/replace(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/replace(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/substring(int)
org/aspectj/apache/bcel/classfile/Utility/replace(java.lang.String,java.lang.String,java.lang.String)#java/io/PrintStream/println(java.lang.Object)
org/aspectj/apache/bcel/classfile/Utility/replace(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/classfile/Utility/replace(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/StandardAnnotation/toString()#java/util/Iterator/hasNext()
org/aspectj/weaver/StandardAnnotation/toString()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/StandardAnnotation/toString()#org/aspectj/weaver/StandardAnnotation/getTypeSignature()
org/aspectj/weaver/StandardAnnotation/toString()#java/util/Iterator/next()
org/aspectj/weaver/StandardAnnotation/toString()#java/lang/StringBuffer/toString()
org/aspectj/weaver/StandardAnnotation/toString()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/StandardAnnotation/toString()#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/StandardAnnotation/toString()#java/lang/StringBuilder/toString()
org/aspectj/weaver/StandardAnnotation/toString()#java/util/List/iterator()
org/aspectj/weaver/StandardAnnotation/toString()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/lang/Aspects14/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/AccessibleObject/setAccessible(boolean)
org/aspectj/lang/Aspects14/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/NoSuchMethodException/NoSuchMethodException(java.lang.String)
org/aspectj/lang/Aspects14/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/Method/getModifiers()
org/aspectj/lang/Aspects14/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/AccessibleObject/isAccessible()
org/aspectj/lang/Aspects14/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
org/aspectj/lang/Aspects14/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/Modifier/isPublic(int)
org/aspectj/lang/Aspects14/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/lang/Aspects14/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/StringBuffer/StringBuffer()
org/aspectj/lang/Aspects14/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/Class/getName()
org/aspectj/lang/Aspects14/checkAspectOf(java.lang.reflect.Method,java.lang.Class)#java/lang/StringBuffer/toString()
org/aspectj/lang/Aspects14/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/AccessibleObject/setAccessible(boolean)
org/aspectj/lang/Aspects14/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/NoSuchMethodException/NoSuchMethodException(java.lang.String)
org/aspectj/lang/Aspects14/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/Method/getModifiers()
org/aspectj/lang/Aspects14/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/AccessibleObject/isAccessible()
org/aspectj/lang/Aspects14/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/Modifier/isStatic(int)
org/aspectj/lang/Aspects14/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/reflect/Modifier/isPublic(int)
org/aspectj/lang/Aspects14/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/lang/Aspects14/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/StringBuffer/StringBuffer()
org/aspectj/lang/Aspects14/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/Class/getName()
org/aspectj/lang/Aspects14/checkHasAspect(java.lang.reflect.Method,java.lang.Class)#java/lang/StringBuffer/toString()
org/aspectj/util/FileUtil/lineSeek(java.lang.String,java.lang.String,boolean,java.util.ArrayList)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/FileUtil/lineSeek(java.lang.String,java.lang.String,boolean,java.util.ArrayList)#java/io/File/canRead()
org/aspectj/util/FileUtil/lineSeek(java.lang.String,java.lang.String,boolean,java.util.ArrayList)#java/lang/StringBuilder/append(int)
org/aspectj/util/FileUtil/lineSeek(java.lang.String,java.lang.String,boolean,java.util.ArrayList)#java/io/File/File(java.lang.String)
org/aspectj/util/FileUtil/lineSeek(java.lang.String,java.lang.String,boolean,java.util.ArrayList)#java/util/ArrayList/add(java.lang.Object)
org/aspectj/util/FileUtil/lineSeek(java.lang.String,java.lang.String,boolean,java.util.ArrayList)#java/io/File/isFile()
org/aspectj/util/FileUtil/lineSeek(java.lang.String,java.lang.String,boolean,java.util.ArrayList)#java/lang/StringBuilder/toString()
org/aspectj/util/FileUtil/lineSeek(java.lang.String,java.lang.String,boolean,java.util.ArrayList)#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/FileUtil/lineSeek(java.lang.String,java.lang.String,boolean,java.util.ArrayList)#java/lang/String/indexOf(java.lang.String)
org/aspectj/util/FileUtil/lineSeek(java.lang.String,java.lang.String,boolean,java.util.ArrayList)#java/io/BufferedReader/BufferedReader(java.io.Reader)
org/aspectj/util/FileUtil/lineSeek(java.lang.String,java.lang.String,boolean,java.util.ArrayList)#java/io/BufferedReader/readLine()
org/aspectj/util/FileUtil/lineSeek(java.lang.String,java.lang.String,boolean,java.util.ArrayList)#java/io/FileReader/FileReader(java.io.File)
org/aspectj/util/FileUtil/lineSeek(java.lang.String,java.lang.String,boolean,java.util.ArrayList)#java/io/FileReader/close()
org/aspectj/util/FileUtil/copyFile(java.io.File,java.io.File)#java/io/File/isDirectory()
org/aspectj/util/FileUtil/copyFile(java.io.File,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/FileUtil/copyFile(java.io.File,java.io.File)#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/FileUtil/copyFile(java.io.File,java.io.File)#java/io/File/mkdirs()
org/aspectj/util/FileUtil/copyFile(java.io.File,java.io.File)#java/io/File/isFile()
org/aspectj/util/FileUtil/copyFile(java.io.File,java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/util/FileUtil/copyFile(java.io.File,java.io.File)#java/io/File/getName()
org/aspectj/util/FileUtil/copyFile(java.io.File,java.io.File)#java/io/File/File(java.io.File,java.lang.String)
org/aspectj/util/FileUtil/copyFile(java.io.File,java.io.File)#java/lang/StringBuilder/toString()
org/aspectj/util/FileUtil/copyFile(java.io.File,java.io.File)#java/io/File/equals(java.lang.Object)
org/aspectj/util/FileUtil/getFileURL(java.io.File)#java/net/MalformedURLException/getMessage()
org/aspectj/util/FileUtil/getFileURL(java.io.File)#java/io/File/isDirectory()
org/aspectj/util/FileUtil/getFileURL(java.io.File)#java/net/URL/URL(java.lang.String)
org/aspectj/util/FileUtil/getFileURL(java.io.File)#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/FileUtil/getFileURL(java.io.File)#java/io/File/getAbsolutePath()
org/aspectj/util/FileUtil/getFileURL(java.io.File)#java/io/File/toURL()
org/aspectj/util/FileUtil/getFileURL(java.io.File)#java/io/File/getPath()
org/aspectj/util/FileUtil/getFileURL(java.io.File)#java/lang/StringBuilder/toString()
org/aspectj/util/FileUtil/getFileURL(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/FileUtil/getFileURL(java.io.File)#java/io/PrintStream/println(java.lang.String)
org/aspectj/util/FileUtil/getFileURL(java.io.File)#java/lang/String/replace(char,char)
org/aspectj/util/FileUtil/<clinit>()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/FileUtil/<clinit>()#java/util/Arrays/asList(java.lang.Object[])
org/aspectj/util/FileUtil/<clinit>()#java/lang/Class/getName()
org/aspectj/util/FileUtil/<clinit>()#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/FileUtil/<clinit>()#org/aspectj/util/FileUtil$1/1()
org/aspectj/util/FileUtil/<clinit>()#org/aspectj/util/FileUtil$2/2()
org/aspectj/util/FileUtil/<clinit>()#org/aspectj/util/FileUtil$3/3()
org/aspectj/util/FileUtil/<clinit>()#org/aspectj/util/FileUtil$5/5()
org/aspectj/util/FileUtil/<clinit>()#java/lang/StringBuilder/toString()
org/aspectj/util/FileUtil/<clinit>()#java/io/File/File(java.lang.String)
org/aspectj/util/FileUtil/<clinit>()#java/util/Collections/unmodifiableList(java.util.List)
org/aspectj/util/FileUtil/copyDir(java.io.File,java.io.File,java.lang.String,java.lang.String,java.io.FileFilter)#java/io/File/File(java.io.File,java.lang.String)
org/aspectj/util/FileUtil/copyDir(java.io.File,java.io.File,java.lang.String,java.lang.String,java.io.FileFilter)#java/io/File/isDirectory()
org/aspectj/util/FileUtil/copyDir(java.io.File,java.io.File,java.lang.String,java.lang.String,java.io.FileFilter)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/FileUtil/copyDir(java.io.File,java.io.File,java.lang.String,java.lang.String,java.io.FileFilter)#java/io/File/canRead()
org/aspectj/util/FileUtil/copyDir(java.io.File,java.io.File,java.lang.String,java.lang.String,java.io.FileFilter)#java/io/FileFilter/accept(java.io.File)
org/aspectj/util/FileUtil/copyDir(java.io.File,java.io.File,java.lang.String,java.lang.String,java.io.FileFilter)#java/lang/String/length()
org/aspectj/util/FileUtil/copyDir(java.io.File,java.io.File,java.lang.String,java.lang.String,java.io.FileFilter)#java/io/File/exists()
org/aspectj/util/FileUtil/copyDir(java.io.File,java.io.File,java.lang.String,java.lang.String,java.io.FileFilter)#java/io/File/list()
org/aspectj/util/FileUtil/copyDir(java.io.File,java.io.File,java.lang.String,java.lang.String,java.io.FileFilter)#java/lang/String/substring(int,int)
org/aspectj/util/FileUtil/copyDir(java.io.File,java.io.File,java.lang.String,java.lang.String,java.io.FileFilter)#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/FileUtil/copyDir(java.io.File,java.io.File,java.lang.String,java.lang.String,java.io.FileFilter)#java/io/File/mkdirs()
org/aspectj/util/FileUtil/copyDir(java.io.File,java.io.File,java.lang.String,java.lang.String,java.io.FileFilter)#java/io/File/isFile()
org/aspectj/util/FileUtil/copyDir(java.io.File,java.io.File,java.lang.String,java.lang.String,java.io.FileFilter)#java/lang/StringBuilder/toString()
org/aspectj/util/FileUtil/copyDir(java.io.File,java.io.File,java.lang.String,java.lang.String,java.io.FileFilter)#java/io/File/list(java.io.FilenameFilter)
org/aspectj/util/FileUtil/copyDir(java.io.File,java.io.File,java.lang.String,java.lang.String,java.io.FileFilter)#org/aspectj/util/FileUtil$4/4(java.lang.String)
org/aspectj/util/FileUtil/listFiles(java.io.File,java.lang.String,java.util.ArrayList)#java/io/File/File(java.io.File,java.lang.String)
org/aspectj/util/FileUtil/listFiles(java.io.File,java.lang.String,java.util.ArrayList)#java/io/File/isDirectory()
org/aspectj/util/FileUtil/listFiles(java.io.File,java.lang.String,java.util.ArrayList)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/FileUtil/listFiles(java.io.File,java.lang.String,java.util.ArrayList)#java/util/ArrayList/add(java.lang.Object)
org/aspectj/util/FileUtil/listFiles(java.io.File,java.lang.String,java.util.ArrayList)#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/FileUtil/listFiles(java.io.File,java.lang.String,java.util.ArrayList)#java/io/File/getPath()
org/aspectj/util/FileUtil/listFiles(java.io.File,java.lang.String,java.util.ArrayList)#java/lang/StringBuilder/toString()
org/aspectj/util/FileUtil/listFiles(java.io.File,java.lang.String,java.util.ArrayList)#java/io/File/list()
org/aspectj/util/FileUtil/listFiles(java.io.File,java.lang.String,java.util.ArrayList)#java/io/File/File(java.lang.String)
org/aspectj/util/FileUtil/makeNewChildDir(java.io.File,java.lang.String)#java/io/File/canWrite()
org/aspectj/util/FileUtil/makeNewChildDir(java.io.File,java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
org/aspectj/util/FileUtil/makeNewChildDir(java.io.File,java.lang.String)#java/io/File/isDirectory()
org/aspectj/util/FileUtil/makeNewChildDir(java.io.File,java.lang.String)#java/io/File/exists()
org/aspectj/util/FileUtil/makeNewChildDir(java.io.File,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/FileUtil/makeNewChildDir(java.io.File,java.lang.String)#java/io/File/mkdirs()
org/aspectj/util/FileUtil/makeNewChildDir(java.io.File,java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/aspectj/util/FileUtil/makeNewChildDir(java.io.File,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/util/FileUtil/makeNewChildDir(java.io.File,java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/util/FileUtil/makeNewChildDir(java.io.File,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/FileUtil/makeNewChildDir(java.io.File,java.lang.String)#java/io/PrintStream/println(java.lang.String)
org/aspectj/util/FileUtil/writeAsString(java.io.File,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/FileUtil/writeAsString(java.io.File,java.lang.String)#java/io/IOException/getMessage()
org/aspectj/util/FileUtil/writeAsString(java.io.File,java.lang.String)#java/io/StringReader/StringReader(java.lang.String)
org/aspectj/util/FileUtil/writeAsString(java.io.File,java.lang.String)#java/io/Writer/close()
org/aspectj/util/FileUtil/writeAsString(java.io.File,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/FileUtil/writeAsString(java.io.File,java.lang.String)#java/io/File/mkdirs()
org/aspectj/util/FileUtil/writeAsString(java.io.File,java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/util/FileUtil/writeAsString(java.io.File,java.lang.String)#java/io/FileWriter/FileWriter(java.io.File)
org/aspectj/util/FileUtil/writeAsString(java.io.File,java.lang.String)#java/io/File/exists()
org/aspectj/util/FileUtil/writeAsString(java.io.File,java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/util/FileUtil/writeAsString(java.io.File,java.lang.String)#java/io/File/getParentFile()
org/aspectj/util/FileUtil/fileToClassName(java.io.File,java.io.File)#java/lang/String/length()
org/aspectj/util/FileUtil/fileToClassName(java.io.File,java.io.File)#java/lang/String/substring(int,int)
org/aspectj/util/FileUtil/fileToClassName(java.io.File,java.io.File)#java/lang/String/startsWith(java.lang.String)
org/aspectj/util/FileUtil/fileToClassName(java.io.File,java.io.File)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/aspectj/util/FileUtil/fileToClassName(java.io.File,java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/util/FileUtil/fileToClassName(java.io.File,java.io.File)#java/lang/String/lastIndexOf(java.lang.String)
org/aspectj/util/FileUtil/fileToClassName(java.io.File,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/FileUtil/fileToClassName(java.io.File,java.io.File)#java/lang/String/charAt(int)
org/aspectj/util/FileUtil/fileToClassName(java.io.File,java.io.File)#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/FileUtil/fileToClassName(java.io.File,java.io.File)#java/lang/String/indexOf(java.lang.String)
org/aspectj/util/FileUtil/fileToClassName(java.io.File,java.io.File)#java/lang/String/substring(int)
org/aspectj/util/FileUtil/fileToClassName(java.io.File,java.io.File)#java/lang/String/replace(char,char)
org/aspectj/util/FileUtil/fileToClassName(java.io.File,java.io.File)#java/lang/StringBuilder/toString()
org/aspectj/util/FileUtil/fileToClassName(java.io.File,java.io.File)#java/lang/String/endsWith(java.lang.String)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/IndexEntry/clone()#org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking$IndexEntry/clone()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/IndexEntry/clone()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/IndexEntry/clone()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/IndexEntry/clone()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/IndexEntry/clone()#java/lang/Object/getClass()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/IndexEntry/clone()#java/lang/Object/clone()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/IndexEntry/clone()#org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking$IndexEntry/toString()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/IndexEntry/clone()#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/IndexEntry/clone()#java/lang/CloneNotSupportedException/getMessage()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/IndexEntry/clone()#java/lang/Class/cast(java.lang.Object)
org/aspectj/weaver/bcel/ClassPathManager/ZipFileEntry/ensureOpen()#java/io/File/getName()
org/aspectj/weaver/bcel/ClassPathManager/ZipFileEntry/ensureOpen()#java/util/List/size()
org/aspectj/weaver/bcel/ClassPathManager/ZipFileEntry/ensureOpen()#org/aspectj/weaver/bcel/ClassPathManager$ZipFileEntry/isReallyOpen()
org/aspectj/weaver/bcel/ClassPathManager/ZipFileEntry/ensureOpen()#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/ClassPathManager/ZipFileEntry/ensureOpen()#java/util/List/contains(java.lang.Object)
org/aspectj/weaver/bcel/ClassPathManager/ZipFileEntry/ensureOpen()#java/io/FileNotFoundException/FileNotFoundException(java.lang.String)
org/aspectj/weaver/bcel/ClassPathManager/ZipFileEntry/ensureOpen()#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/ClassPathManager/ZipFileEntry/ensureOpen()#java/util/zip/ZipFile/ZipFile(java.io.File)
org/aspectj/weaver/bcel/ClassPathManager/ZipFileEntry/ensureOpen()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/ClassPathManager/ZipFileEntry/ensureOpen()#org/aspectj/weaver/bcel/ClassPathManager$ZipFileEntry/closeSomeArchives(int)
org/aspectj/weaver/bcel/ClassPathManager/ZipFileEntry/ensureOpen()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/ShadowMunger/match(org.aspectj.weaver.Shadow,org.aspectj.weaver.World)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/ShadowMunger/match(org.aspectj.weaver.Shadow,org.aspectj.weaver.World)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/ShadowMunger/match(org.aspectj.weaver.Shadow,org.aspectj.weaver.World)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/ShadowMunger/match(org.aspectj.weaver.Shadow,org.aspectj.weaver.World)#java/util/HashSet/HashSet()
org/aspectj/weaver/ShadowMunger/match(org.aspectj.weaver.Shadow,org.aspectj.weaver.World)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/ShadowMunger/match(org.aspectj.weaver.Shadow,org.aspectj.weaver.World)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/ShadowMunger/match(org.aspectj.weaver.Shadow,org.aspectj.weaver.World)#java/lang/System/nanoTime()
org/aspectj/weaver/ShadowMunger/match(org.aspectj.weaver.Shadow,org.aspectj.weaver.World)#java/util/Set/contains(java.lang.Object)
org/aspectj/weaver/ShadowMunger/match(org.aspectj.weaver.Shadow,org.aspectj.weaver.World)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/ShadowMunger/match(org.aspectj.weaver.Shadow,org.aspectj.weaver.World)#java/lang/StringBuilder/toString()
org/aspectj/weaver/model/AsmRelationshipProvider/findOrFakeUpNode(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType)#java/lang/StringBuffer/append(char)
org/aspectj/weaver/model/AsmRelationshipProvider/findOrFakeUpNode(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getClassName()
org/aspectj/weaver/model/AsmRelationshipProvider/findOrFakeUpNode(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType)#java/lang/String/charAt(int)
org/aspectj/weaver/model/AsmRelationshipProvider/findOrFakeUpNode(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType)#java/lang/StringBuffer/toString()
org/aspectj/weaver/model/AsmRelationshipProvider/findOrFakeUpNode(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType)#java/lang/String/substring(int,int)
org/aspectj/weaver/model/AsmRelationshipProvider/findOrFakeUpNode(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getPackageName()
org/aspectj/weaver/model/AsmRelationshipProvider/findOrFakeUpNode(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/model/AsmRelationshipProvider/findOrFakeUpNode(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType)#java/lang/String/lastIndexOf(java.lang.String)
org/aspectj/weaver/model/AsmRelationshipProvider/findOrFakeUpNode(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType)#java/lang/String/indexOf(int)
org/aspectj/weaver/model/AsmRelationshipProvider/findOrFakeUpNode(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/model/AsmRelationshipProvider/findOrCreateCodeNode(org.aspectj.asm.AsmManager,org.aspectj.asm.IProgramElement,org.aspectj.weaver.Member,org.aspectj.weaver.Shadow)#java/util/Iterator/hasNext()
org/aspectj/weaver/model/AsmRelationshipProvider/findOrCreateCodeNode(org.aspectj.asm.AsmManager,org.aspectj.asm.IProgramElement,org.aspectj.weaver.Member,org.aspectj.weaver.Shadow)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/model/AsmRelationshipProvider/findOrCreateCodeNode(org.aspectj.asm.AsmManager,org.aspectj.asm.IProgramElement,org.aspectj.weaver.Member,org.aspectj.weaver.Shadow)#java/util/List/iterator()
org/aspectj/weaver/model/AsmRelationshipProvider/findOrCreateCodeNode(org.aspectj.asm.AsmManager,org.aspectj.asm.IProgramElement,org.aspectj.weaver.Member,org.aspectj.weaver.Shadow)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/model/AsmRelationshipProvider/findOrCreateCodeNode(org.aspectj.asm.AsmManager,org.aspectj.asm.IProgramElement,org.aspectj.weaver.Member,org.aspectj.weaver.Shadow)#java/util/Iterator/next()
org/aspectj/weaver/model/AsmRelationshipProvider/findOrCreateCodeNode(org.aspectj.asm.AsmManager,org.aspectj.asm.IProgramElement,org.aspectj.weaver.Member,org.aspectj.weaver.Shadow)#java/lang/String/substring(int,int)
org/aspectj/weaver/model/AsmRelationshipProvider/findOrCreateCodeNode(org.aspectj.asm.AsmManager,org.aspectj.asm.IProgramElement,org.aspectj.weaver.Member,org.aspectj.weaver.Shadow)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/model/AsmRelationshipProvider/findOrCreateCodeNode(org.aspectj.asm.AsmManager,org.aspectj.asm.IProgramElement,org.aspectj.weaver.Member,org.aspectj.weaver.Shadow)#java/lang/String/lastIndexOf(int)
org/aspectj/weaver/model/AsmRelationshipProvider/findOrCreateCodeNode(org.aspectj.asm.AsmManager,org.aspectj.asm.IProgramElement,org.aspectj.weaver.Member,org.aspectj.weaver.Shadow)#java/lang/StringBuilder/toString()
org/aspectj/weaver/model/AsmRelationshipProvider/findOrCreateCodeNode(org.aspectj.asm.AsmManager,org.aspectj.asm.IProgramElement,org.aspectj.weaver.Member,org.aspectj.weaver.Shadow)#java/lang/String/valueOf(int)
org/aspectj/weaver/model/AsmRelationshipProvider/addDeclareAnnotationMethodRelationship(org.aspectj.bridge.ISourceLocation,java.lang.String,org.aspectj.weaver.ResolvedMember,org.aspectj.asm.AsmManager)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/model/AsmRelationshipProvider/addDeclareAnnotationMethodRelationship(org.aspectj.bridge.ISourceLocation,java.lang.String,org.aspectj.weaver.ResolvedMember,org.aspectj.asm.AsmManager)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/weaver/model/AsmRelationshipProvider/addDeclareAnnotationMethodRelationship(org.aspectj.bridge.ISourceLocation,java.lang.String,org.aspectj.weaver.ResolvedMember,org.aspectj.asm.AsmManager)#java/lang/String/substring(int,int)
org/aspectj/weaver/model/AsmRelationshipProvider/addDeclareAnnotationMethodRelationship(org.aspectj.bridge.ISourceLocation,java.lang.String,org.aspectj.weaver.ResolvedMember,org.aspectj.asm.AsmManager)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/model/AsmRelationshipProvider/addDeclareAnnotationMethodRelationship(org.aspectj.bridge.ISourceLocation,java.lang.String,org.aspectj.weaver.ResolvedMember,org.aspectj.asm.AsmManager)#java/lang/String/substring(int)
org/aspectj/weaver/model/AsmRelationshipProvider/addDeclareAnnotationMethodRelationship(org.aspectj.bridge.ISourceLocation,java.lang.String,org.aspectj.weaver.ResolvedMember,org.aspectj.asm.AsmManager)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/model/AsmRelationshipProvider/addDeclareAnnotationMethodRelationship(org.aspectj.bridge.ISourceLocation,java.lang.String,org.aspectj.weaver.ResolvedMember,org.aspectj.asm.AsmManager)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/model/AsmRelationshipProvider/addDeclareAnnotationMethodRelationship(org.aspectj.bridge.ISourceLocation,java.lang.String,org.aspectj.weaver.ResolvedMember,org.aspectj.asm.AsmManager)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/weaver/model/AsmRelationshipProvider/addDeclareAnnotationMethodRelationship(org.aspectj.bridge.ISourceLocation,java.lang.String,org.aspectj.weaver.ResolvedMember,org.aspectj.asm.AsmManager)#java/lang/Throwable/printStackTrace()
org/aspectj/weaver/model/AsmRelationshipProvider/addDeclareAnnotationMethodRelationship(org.aspectj.bridge.ISourceLocation,java.lang.String,org.aspectj.weaver.ResolvedMember,org.aspectj.asm.AsmManager)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/model/AsmRelationshipProvider/addDeclareAnnotationMethodRelationship(org.aspectj.bridge.ISourceLocation,java.lang.String,org.aspectj.weaver.ResolvedMember,org.aspectj.asm.AsmManager)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/model/AsmRelationshipProvider/addDeclareAnnotationMethodRelationship(org.aspectj.bridge.ISourceLocation,java.lang.String,org.aspectj.weaver.ResolvedMember,org.aspectj.asm.AsmManager)#org/aspectj/asm/IProgramElement$Kind/isType()
org/aspectj/weaver/model/AsmRelationshipProvider/addDeclareAnnotationMethodRelationship(org.aspectj.bridge.ISourceLocation,java.lang.String,org.aspectj.weaver.ResolvedMember,org.aspectj.asm.AsmManager)#java/lang/String/lastIndexOf(java.lang.String)
org/aspectj/weaver/model/AsmRelationshipProvider/addDeclareAnnotationMethodRelationship(org.aspectj.bridge.ISourceLocation,java.lang.String,org.aspectj.weaver.ResolvedMember,org.aspectj.asm.AsmManager)#java/lang/StringBuilder/toString()
org/aspectj/weaver/model/AsmRelationshipProvider/createHierarchy(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedTypeMunger,org.aspectj.weaver.ResolvedType)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/model/AsmRelationshipProvider/createHierarchy(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedTypeMunger,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getSimpleName()
org/aspectj/weaver/model/AsmRelationshipProvider/createHierarchy(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedTypeMunger,org.aspectj.weaver.ResolvedType)#java/util/Iterator/next()
org/aspectj/weaver/model/AsmRelationshipProvider/createHierarchy(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedTypeMunger,org.aspectj.weaver.ResolvedType)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/model/AsmRelationshipProvider/createHierarchy(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedTypeMunger,org.aspectj.weaver.ResolvedType)#java/lang/Object/equals(java.lang.Object)
org/aspectj/weaver/model/AsmRelationshipProvider/createHierarchy(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedTypeMunger,org.aspectj.weaver.ResolvedType)#java/io/File/getName()
org/aspectj/weaver/model/AsmRelationshipProvider/createHierarchy(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedTypeMunger,org.aspectj.weaver.ResolvedType)#java/util/Iterator/hasNext()
org/aspectj/weaver/model/AsmRelationshipProvider/createHierarchy(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedTypeMunger,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getPackageName()
org/aspectj/weaver/model/AsmRelationshipProvider/createHierarchy(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedTypeMunger,org.aspectj.weaver.ResolvedType)#java/util/List/iterator()
org/aspectj/weaver/model/AsmRelationshipProvider/createIntertypeDeclaredChild(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.BcelTypeMunger)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/model/AsmRelationshipProvider/createIntertypeDeclaredChild(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.BcelTypeMunger)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/model/AsmRelationshipProvider/createIntertypeDeclaredChild(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.BcelTypeMunger)#java/util/Collections/emptyList()
org/aspectj/weaver/model/AsmRelationshipProvider/createIntertypeDeclaredChild(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.BcelTypeMunger)#org/aspectj/weaver/bcel/BcelTypeMunger/getMunger()
org/aspectj/weaver/model/AsmRelationshipProvider/createIntertypeDeclaredChild(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.BcelTypeMunger)#org/aspectj/weaver/bcel/BcelTypeMunger/getSourceLocation()
org/aspectj/weaver/model/AsmRelationshipProvider/createIntertypeDeclaredChild(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.BcelTypeMunger)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/model/AsmRelationshipProvider/createIntertypeDeclaredChild(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.BcelTypeMunger)#java/lang/StringBuilder/toString()
org/aspectj/weaver/model/AsmRelationshipProvider/createIntertypeDeclaredChild(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.BcelTypeMunger)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/model/AsmRelationshipProvider/createIntertypeDeclaredChild(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.BcelTypeMunger)#java/lang/String/indexOf(java.lang.String)
org/aspectj/weaver/model/AsmRelationshipProvider/createIntertypeDeclaredChild(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.BcelTypeMunger)#java/lang/String/substring(int)
org/aspectj/weaver/model/AsmRelationshipProvider/createIntertypeDeclaredChild(org.aspectj.asm.AsmManager,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.BcelTypeMunger)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/bcel/BcelAnnotation/toString()#java/lang/Object/toString()
org/aspectj/weaver/bcel/BcelAnnotation/toString()#java/lang/StringBuffer/append(char)
org/aspectj/weaver/bcel/BcelAnnotation/toString()#org/aspectj/weaver/bcel/BcelAnnotation/getTypeSignature()
org/aspectj/weaver/bcel/BcelAnnotation/toString()#java/util/List/size()
org/aspectj/weaver/bcel/BcelAnnotation/toString()#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelAnnotation/toString()#java/lang/StringBuffer/toString()
org/aspectj/weaver/bcel/BcelAnnotation/toString()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelAnnotation/toString()#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/bcel/BcelAnnotation/toString()#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelAnnotation/toString()#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelAnnotation/toString()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelAnnotation/toString()#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelAnnotation/toString()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/util/GenericSignatureParser/tokenize(java.lang.String)#java/util/ArrayList/ArrayList()
org/aspectj/util/GenericSignatureParser/tokenize(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/GenericSignatureParser/tokenize(java.lang.String)#java/lang/StringBuffer/append(char)
org/aspectj/util/GenericSignatureParser/tokenize(java.lang.String)#java/lang/StringBuffer/length()
org/aspectj/util/GenericSignatureParser/tokenize(java.lang.String)#java/util/List/size()
org/aspectj/util/GenericSignatureParser/tokenize(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/GenericSignatureParser/tokenize(java.lang.String)#java/lang/String/toCharArray()
org/aspectj/util/GenericSignatureParser/tokenize(java.lang.String)#java/lang/String/String(java.lang.String)
org/aspectj/util/GenericSignatureParser/tokenize(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/aspectj/util/GenericSignatureParser/tokenize(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/util/GenericSignatureParser/tokenize(java.lang.String)#java/util/List/toArray(java.lang.Object[])
org/aspectj/util/GenericSignatureParser/tokenize(java.lang.String)#java/lang/StringBuffer/toString()
org/aspectj/util/GenericSignatureParser/tokenize(java.lang.String)#java/util/List/add(java.lang.Object)
org/aspectj/util/GenericSignatureParser/tokenize(java.lang.String)#java/lang/StringBuilder/append(char)
org/aspectj/util/GenericSignatureParser/parseClassTypeSignature()#org/aspectj/util/GenericSignature$TypeArgument/toString()
org/aspectj/util/GenericSignatureParser/parseClassTypeSignature()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/GenericSignatureParser/parseClassTypeSignature()#org/aspectj/util/GenericSignature$ClassTypeSignature/ClassTypeSignature(java.lang.String,org.aspectj.util.GenericSignature$SimpleClassTypeSignature,org.aspectj.util.GenericSignature$SimpleClassTypeSignature[])
org/aspectj/util/GenericSignatureParser/parseClassTypeSignature()#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/GenericSignatureParser/parseClassTypeSignature()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/util/GenericSignatureParser/parseClassTypeSignature()#java/lang/StringBuffer/StringBuffer()
org/aspectj/util/GenericSignatureParser/parseClassTypeSignature()#java/lang/StringBuilder/toString()
org/aspectj/util/GenericSignatureParser/parseClassTypeSignature()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/util/GenericSignatureParser/parseClassTypeSignature()#org/aspectj/util/GenericSignature$SimpleClassTypeSignature/SimpleClassTypeSignature(java.lang.String,org.aspectj.util.GenericSignature$TypeArgument[])
org/aspectj/util/GenericSignatureParser/parseClassTypeSignature()#org/aspectj/util/GenericSignature$SimpleClassTypeSignature/SimpleClassTypeSignature(java.lang.String)
org/aspectj/util/GenericSignatureParser/parseClassTypeSignature()#java/lang/String/equals(java.lang.Object)
org/aspectj/util/GenericSignatureParser/parseClassTypeSignature()#java/lang/StringBuffer/toString()
org/aspectj/util/GenericSignatureParser/parseNestedTypesHelper(java.lang.StringBuffer)#org/aspectj/util/GenericSignature$SimpleClassTypeSignature/toString()
org/aspectj/util/GenericSignatureParser/parseNestedTypesHelper(java.lang.StringBuffer)#java/util/ArrayList/ArrayList()
org/aspectj/util/GenericSignatureParser/parseNestedTypesHelper(java.lang.StringBuffer)#java/util/List/size()
org/aspectj/util/GenericSignatureParser/parseNestedTypesHelper(java.lang.StringBuffer)#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/GenericSignatureParser/parseNestedTypesHelper(java.lang.StringBuffer)#java/util/List/add(java.lang.Object)
org/aspectj/util/GenericSignatureParser/parseNestedTypesHelper(java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/util/GenericSignatureParser/parseNestedTypesHelper(java.lang.StringBuffer)#java/lang/StringBuilder/toString()
org/aspectj/util/GenericSignatureParser/parseNestedTypesHelper(java.lang.StringBuffer)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/GenericSignatureParser/parseNestedTypesHelper(java.lang.StringBuffer)#java/io/PrintStream/println(java.lang.String)
org/aspectj/util/GenericSignatureParser/parseNestedTypesHelper(java.lang.StringBuffer)#java/lang/String/equals(java.lang.Object)
org/aspectj/util/GenericSignatureParser/parseNestedTypesHelper(java.lang.StringBuffer)#java/util/List/toArray(java.lang.Object[])
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/util/ArrayList/ArrayList()
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/lang/String/valueOf(java.lang.Object)
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/util/ArrayList/isEmpty()
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/util/ArrayList/toArray(java.lang.Object[])
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/util/Iterator/next()
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/util/ArrayList/size()
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/util/Set/iterator()
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/util/Iterator/hasNext()
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/util/ArrayList/add(java.lang.Object)
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/lang/Class/getName()
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/lang/StringBuffer/toString()
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/lang/Object/getClass()
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/io/PrintStream/println(java.lang.Object)
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/generic/InstructionList/remove(org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InstructionHandle,boolean)#java/lang/String/endsWith(java.lang.String)
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#java/io/IOException/getMessage()
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#java/io/File/getAbsolutePath()
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#java/io/File/isFile()
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#org/aspectj/weaver/tools/cache/FlatFileCacheBacking/crc(byte[])
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#java/util/Map/remove(java.lang.Object)
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#java/lang/String/equalsIgnoreCase(java.lang.String)
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#java/lang/Class/getSimpleName()
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#java/io/File/getName()
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#java/util/TreeMap/TreeMap()
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#java/io/StreamCorruptedException/StreamCorruptedException(java.lang.String)
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#java/lang/StringBuilder/append(long)
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/readClassBytes(java.util.Map,java.io.File[])#java/lang/Object/getClass()
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/removeClassBytes(java.lang.String)#java/io/File/File(java.io.File,java.lang.String)
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/removeClassBytes(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/removeClassBytes(java.lang.String)#java/io/File/exists()
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/removeClassBytes(java.lang.String)#java/io/StreamCorruptedException/StreamCorruptedException(java.lang.String)
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/removeClassBytes(java.lang.String)#java/io/File/getAbsolutePath()
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/removeClassBytes(java.lang.String)#java/io/File/delete()
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/removeClassBytes(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/removeClassBytes(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/FlatFileCacheBacking/removeClassBytes(java.lang.String)#org/aspectj/weaver/tools/cache/FlatFileCacheBacking/getCacheDirectory()
org/aspectj/weaver/bcel/BcelWeaver/fastMatch(java.util.List,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/bcel/BcelWorld/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)
org/aspectj/weaver/bcel/BcelWeaver/fastMatch(java.util.List,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/bcel/BcelWorld/isOverWeaving()
org/aspectj/weaver/bcel/BcelWeaver/fastMatch(java.util.List,org.aspectj.weaver.ResolvedType)#java/lang/System/nanoTime()
org/aspectj/weaver/bcel/BcelWeaver/fastMatch(java.util.List,org.aspectj.weaver.ResolvedType)#java/util/Collections/emptyList()
org/aspectj/weaver/bcel/BcelWeaver/fastMatch(java.util.List,org.aspectj.weaver.ResolvedType)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelWeaver/fastMatch(java.util.List,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/bcel/BcelWorld/isTimingEnabled()
org/aspectj/weaver/bcel/BcelWeaver/fastMatch(java.util.List,org.aspectj.weaver.ResolvedType)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelWeaver/fastMatch(java.util.List,org.aspectj.weaver.ResolvedType)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelWeaver/fastMatch(java.util.List,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/bcel/BcelWorld/areInfoMessagesEnabled()
org/aspectj/weaver/bcel/BcelWeaver/fastMatch(java.util.List,org.aspectj.weaver.ResolvedType)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelWeaver/fastMatch(java.util.List,org.aspectj.weaver.ResolvedType)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/io/File/File(java.io.File,java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/io/IOException/getMessage()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/util/List/addAll(java.util.Collection)
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/lang/StringBuffer/toString()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/io/InputStream/close()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/util/jar/JarFile/JarFile(java.io.File)
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/util/Enumeration/hasMoreElements()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/util/Enumeration/nextElement()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/util/jar/JarFile/entries()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#org/aspectj/weaver/bcel/BcelWorld/getMessageHandler()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/io/File/isDirectory()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/util/jar/JarFile/close()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/util/jar/JarFile/getManifest()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/io/File/getAbsolutePath()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/util/jar/JarEntry/getName()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#org/aspectj/weaver/ReferenceType/setBinaryPath(java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/util/jar/JarFile/getInputStream(java.util.zip.ZipEntry)
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/io/File/getPath()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelWeaver/addJarFile(java.io.File,java.io.File,boolean)#java/lang/String/endsWith(java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/isAspect(byte[],java.lang.String,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/isAspect(byte[],java.lang.String,java.io.File)#org/aspectj/weaver/bcel/BcelObjectType/getResolvedTypeX()
org/aspectj/weaver/bcel/BcelWeaver/isAspect(byte[],java.lang.String,java.io.File)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/aspectj/weaver/bcel/BcelWeaver/isAspect(byte[],java.lang.String,java.io.File)#java/lang/String/substring(int,int)
org/aspectj/weaver/bcel/BcelWeaver/isAspect(byte[],java.lang.String,java.io.File)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelWeaver/isAspect(byte[],java.lang.String,java.io.File)#java/io/File/getAbsolutePath()
org/aspectj/weaver/bcel/BcelWeaver/isAspect(byte[],java.lang.String,java.io.File)#java/lang/String/replace(char,char)
org/aspectj/weaver/bcel/BcelWeaver/isAspect(byte[],java.lang.String,java.io.File)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/BcelWeaver/isAspect(byte[],java.lang.String,java.io.File)#java/lang/String/lastIndexOf(java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/isAspect(byte[],java.lang.String,java.io.File)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelWeaver/addAspectsFromJarFile(java.io.File)#java/util/zip/ZipEntry/getSize()
org/aspectj/weaver/bcel/BcelWeaver/addAspectsFromJarFile(java.io.File)#org/aspectj/weaver/bcel/BcelObjectType/getResolvedTypeX()
org/aspectj/weaver/bcel/BcelWeaver/addAspectsFromJarFile(java.io.File)#java/util/zip/ZipEntry/getName()
org/aspectj/weaver/bcel/BcelWeaver/addAspectsFromJarFile(java.io.File)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/aspectj/weaver/bcel/BcelWeaver/addAspectsFromJarFile(java.io.File)#java/util/zip/ZipEntry/isDirectory()
org/aspectj/weaver/bcel/BcelWeaver/addAspectsFromJarFile(java.io.File)#java/io/File/getAbsolutePath()
org/aspectj/weaver/bcel/BcelWeaver/addAspectsFromJarFile(java.io.File)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelWeaver/addAspectsFromJarFile(java.io.File)#java/util/zip/ZipInputStream/close()
org/aspectj/weaver/bcel/BcelWeaver/addAspectsFromJarFile(java.io.File)#java/io/FileInputStream/FileInputStream(java.io.File)
org/aspectj/weaver/bcel/BcelWeaver/addAspectsFromJarFile(java.io.File)#java/util/zip/ZipInputStream/getNextEntry()
org/aspectj/weaver/bcel/BcelWeaver/addAspectsFromJarFile(java.io.File)#java/util/zip/ZipInputStream/ZipInputStream(java.io.InputStream)
org/aspectj/weaver/bcel/BcelWeaver/addAspectsFromJarFile(java.io.File)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelWeaver/addAspectsFromJarFile(java.io.File)#java/util/zip/ZipInputStream/closeEntry()
org/aspectj/weaver/bcel/BcelWeaver/addAspectsFromJarFile(java.io.File)#java/lang/String/endsWith(java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#org/aspectj/weaver/bcel/BcelWorld/isMinimalModel()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#org/aspectj/weaver/bcel/BcelWorld$WeavingXmlConfig/excludesType(org.aspectj.weaver.ResolvedType)
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#java/util/List/isEmpty()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#org/aspectj/weaver/ReferenceType/getPackageName()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#org/aspectj/weaver/bcel/BcelWorld/getMessageHandler()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#java/lang/RuntimeException/printStackTrace()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#org/aspectj/weaver/bcel/BcelWorld/demote()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#org/aspectj/weaver/bcel/BcelObjectType/getResolvedTypeX()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#java/lang/Error/printStackTrace(java.io.PrintStream)
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#org/aspectj/weaver/bcel/BcelWorld/getDeclareAnnotationOnFields()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#java/util/List/size()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#org/aspectj/weaver/bcel/BcelWorld/isInJava5Mode()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#org/aspectj/weaver/ReferenceType/checkInterTypeMungers()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#org/aspectj/weaver/ReferenceType/getInterTypeMungersIncludingSupers()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#org/aspectj/weaver/bcel/BcelWorld/getDeclareAnnotationOnMethods()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#org/aspectj/asm/IProgramElement$Kind/isSourceFile()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#org/aspectj/weaver/ReferenceType/getName()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#org/aspectj/weaver/ReferenceType/getSimpleBaseName()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#org/aspectj/weaver/ReferenceType/getInterTypeMungers()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.bcel.UnwovenClassFile,org.aspectj.weaver.bcel.BcelObjectType,boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelWeaver/addLibraryAspect(java.lang.String)#java/lang/String/String(char[])
org/aspectj/weaver/bcel/BcelWeaver/addLibraryAspect(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/addLibraryAspect(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/addLibraryAspect(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelWeaver/addLibraryAspect(java.lang.String)#org/aspectj/weaver/bcel/BcelWorld/resolve(org.aspectj.weaver.UnresolvedType,boolean)
org/aspectj/weaver/bcel/BcelWeaver/addLibraryAspect(java.lang.String)#java/lang/String/lastIndexOf(int)
org/aspectj/weaver/bcel/BcelWeaver/addLibraryAspect(java.lang.String)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/BcelWeaver/addLibraryAspect(java.lang.String)#java/lang/String/toCharArray()
org/aspectj/weaver/bcel/BcelWeaver/addLibraryAspect(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelWeaver/processReweavableStateIfPresent(java.lang.String,org.aspectj.weaver.bcel.BcelObjectType)#org/aspectj/weaver/bcel/BcelObjectType/getSourceLocation()
org/aspectj/weaver/bcel/BcelWeaver/processReweavableStateIfPresent(java.lang.String,org.aspectj.weaver.bcel.BcelObjectType)#org/aspectj/weaver/bcel/BcelObjectType/getResolvedTypeX()
org/aspectj/weaver/bcel/BcelWeaver/processReweavableStateIfPresent(java.lang.String,org.aspectj.weaver.bcel.BcelObjectType)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelWeaver/processReweavableStateIfPresent(java.lang.String,org.aspectj.weaver.bcel.BcelObjectType)#org/aspectj/weaver/bcel/BcelWorld/resolve(org.aspectj.weaver.UnresolvedType,boolean)
org/aspectj/weaver/bcel/BcelWeaver/processReweavableStateIfPresent(java.lang.String,org.aspectj.weaver.bcel.BcelObjectType)#java/util/Set/iterator()
org/aspectj/weaver/bcel/BcelWeaver/processReweavableStateIfPresent(java.lang.String,org.aspectj.weaver.bcel.BcelObjectType)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelWeaver/processReweavableStateIfPresent(java.lang.String,org.aspectj.weaver.bcel.BcelObjectType)#org/aspectj/weaver/bcel/BcelWorld/getMessageHandler()
org/aspectj/weaver/bcel/BcelWeaver/processReweavableStateIfPresent(java.lang.String,org.aspectj.weaver.bcel.BcelObjectType)#org/aspectj/weaver/bcel/BcelWorld/getLint()
org/aspectj/weaver/bcel/BcelWeaver/processReweavableStateIfPresent(java.lang.String,org.aspectj.weaver.bcel.BcelObjectType)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelWeaver/processReweavableStateIfPresent(java.lang.String,org.aspectj.weaver.bcel.BcelObjectType)#org/aspectj/weaver/bcel/BcelWorld/isOverWeaving()
org/aspectj/weaver/bcel/BcelWeaver/processReweavableStateIfPresent(java.lang.String,org.aspectj.weaver.bcel.BcelObjectType)#org/aspectj/weaver/Lint$Kind/signal(java.lang.String[],org.aspectj.bridge.ISourceLocation,org.aspectj.bridge.ISourceLocation[])
org/aspectj/weaver/bcel/BcelWeaver/processReweavableStateIfPresent(java.lang.String,org.aspectj.weaver.bcel.BcelObjectType)#java/util/Set/contains(java.lang.Object)
org/aspectj/weaver/bcel/BcelWeaver/processReweavableStateIfPresent(java.lang.String,org.aspectj.weaver.bcel.BcelObjectType)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/BcelWeaver/processReweavableStateIfPresent(java.lang.String,org.aspectj.weaver.bcel.BcelObjectType)#java/util/HashSet/HashSet()
org/aspectj/weaver/bcel/BcelWeaver/processReweavableStateIfPresent(java.lang.String,org.aspectj.weaver.bcel.BcelObjectType)#org/aspectj/weaver/bcel/BcelWorld/showMessage(org.aspectj.bridge.IMessage$Kind,java.lang.String,org.aspectj.bridge.ISourceLocation,org.aspectj.bridge.ISourceLocation)
org/aspectj/weaver/bcel/BcelWeaver/warnOnUnmatchedAdvice()#org/aspectj/weaver/bcel/BcelAdvice/getDeclaringAspect()
org/aspectj/weaver/bcel/BcelWeaver/warnOnUnmatchedAdvice()#org/aspectj/weaver/bcel/BcelAdvice/getKind()
org/aspectj/weaver/bcel/BcelWeaver/warnOnUnmatchedAdvice()#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelWeaver/warnOnUnmatchedAdvice()#org/aspectj/weaver/bcel/BcelAdvice/hasMatchedSomething()
org/aspectj/weaver/bcel/BcelWeaver/warnOnUnmatchedAdvice()#org/aspectj/weaver/bcel/BcelWorld/getCrosscuttingMembersSet()
org/aspectj/weaver/bcel/BcelWeaver/warnOnUnmatchedAdvice()#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelWeaver/warnOnUnmatchedAdvice()#java/util/HashSet/HashSet()
org/aspectj/weaver/bcel/BcelWeaver/warnOnUnmatchedAdvice()#org/aspectj/weaver/Lint$Kind/isEnabled()
org/aspectj/weaver/bcel/BcelWeaver/warnOnUnmatchedAdvice()#org/aspectj/weaver/bcel/BcelWorld/getLint()
org/aspectj/weaver/bcel/BcelWeaver/warnOnUnmatchedAdvice()#org/aspectj/weaver/bcel/BcelWorld/isInJava5Mode()
org/aspectj/weaver/bcel/BcelWeaver/warnOnUnmatchedAdvice()#org/aspectj/weaver/bcel/BcelWeaver$1AdviceLocation/1AdviceLocation(org.aspectj.weaver.bcel.BcelWeaver,org.aspectj.weaver.bcel.BcelAdvice)
org/aspectj/weaver/bcel/BcelWeaver/warnOnUnmatchedAdvice()#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelWeaver/warnOnUnmatchedAdvice()#org/aspectj/weaver/Lint$Kind/signal(java.lang.String,org.aspectj.bridge.ISourceLocation)
org/aspectj/weaver/bcel/BcelWeaver/warnOnUnmatchedAdvice()#java/util/Set/contains(java.lang.Object)
org/aspectj/weaver/bcel/BcelWeaver/warnOnUnmatchedAdvice()#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelWeaver/warnOnUnmatchedAdvice()#org/aspectj/weaver/bcel/BcelAdvice/getSignature()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#org/aspectj/weaver/bcel/BcelWorld/isMinimalModel()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#org/aspectj/weaver/bcel/BcelWorld/getModel()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/util/List/size()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#org/aspectj/weaver/bcel/BcelWorld/resolve(java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/lang/Class/getName()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/util/List/clear()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/util/Collection/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/util/List/get(int)
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/lang/Object/getClass()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/util/Set/clear()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/util/HashSet/HashSet()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelWeaver/weave(org.aspectj.weaver.IClassFileProvider)#java/lang/String/endsWith(java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/addClassFile(java.io.File,java.io.File,java.io.File)#java/io/File/File(java.io.File,java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/addClassFile(java.io.File,java.io.File,java.io.File)#java/lang/String/length()
org/aspectj/weaver/bcel/BcelWeaver/addClassFile(java.io.File,java.io.File,java.io.File)#java/lang/StringBuffer/toString()
org/aspectj/weaver/bcel/BcelWeaver/addClassFile(java.io.File,java.io.File,java.io.File)#java/io/File/getAbsolutePath()
org/aspectj/weaver/bcel/BcelWeaver/addClassFile(java.io.File,java.io.File,java.io.File)#java/lang/String/substring(int)
org/aspectj/weaver/bcel/BcelWeaver/addClassFile(java.io.File,java.io.File,java.io.File)#java/io/FileInputStream/close()
org/aspectj/weaver/bcel/BcelWeaver/addClassFile(java.io.File,java.io.File,java.io.File)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/addClassFile(java.io.File,java.io.File,java.io.File)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/bcel/BcelWeaver/addClassFile(java.io.File,java.io.File,java.io.File)#org/aspectj/weaver/ReferenceType/setBinaryPath(java.lang.String)
org/aspectj/weaver/bcel/BcelWeaver/addClassFile(java.io.File,java.io.File,java.io.File)#java/io/FileInputStream/FileInputStream(java.io.File)
org/aspectj/weaver/bcel/BcelWeaver/addClassFile(java.io.File,java.io.File,java.io.File)#java/lang/String/endsWith(java.lang.String)
org/aspectj/apache/bcel/classfile/ConstantPool/addConstant(org.aspectj.apache.bcel.classfile.Constant,org.aspectj.apache.bcel.classfile.ConstantPool)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/apache/bcel/classfile/ConstantPool/addConstant(org.aspectj.apache.bcel.classfile.Constant,org.aspectj.apache.bcel.classfile.ConstantPool)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/apache/bcel/classfile/ConstantPool/addConstant(org.aspectj.apache.bcel.classfile.Constant,org.aspectj.apache.bcel.classfile.ConstantPool)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/classfile/ConstantPool/addConstant(org.aspectj.apache.bcel.classfile.Constant,org.aspectj.apache.bcel.classfile.ConstantPool)#java/lang/Integer/intValue()
org/aspectj/apache/bcel/classfile/ConstantPool/addConstant(org.aspectj.apache.bcel.classfile.Constant,org.aspectj.apache.bcel.classfile.ConstantPool)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/classfile/ConstantPool/addConstant(org.aspectj.apache.bcel.classfile.Constant,org.aspectj.apache.bcel.classfile.ConstantPool)#java/lang/Long/longValue()
org/aspectj/apache/bcel/classfile/ConstantPool/addConstant(org.aspectj.apache.bcel.classfile.Constant,org.aspectj.apache.bcel.classfile.ConstantPool)#java/lang/Double/doubleValue()
org/aspectj/apache/bcel/classfile/ConstantPool/addConstant(org.aspectj.apache.bcel.classfile.Constant,org.aspectj.apache.bcel.classfile.ConstantPool)#java/lang/String/replace(char,char)
org/aspectj/apache/bcel/classfile/ConstantPool/addConstant(org.aspectj.apache.bcel.classfile.Constant,org.aspectj.apache.bcel.classfile.ConstantPool)#java/lang/Float/floatValue()
org/aspectj/apache/bcel/classfile/ConstantPool/lookupMethodref(java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/Integer(int)
org/aspectj/apache/bcel/classfile/ConstantPool/lookupMethodref(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
org/aspectj/apache/bcel/classfile/ConstantPool/lookupMethodref(java.lang.String,java.lang.String,java.lang.String)#org/aspectj/apache/bcel/classfile/ConstantMethodref/getNameAndTypeIndex()
org/aspectj/apache/bcel/classfile/ConstantPool/lookupMethodref(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/classfile/ConstantPool/lookupMethodref(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/aspectj/apache/bcel/classfile/ConstantPool/lookupMethodref(java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/intValue()
org/aspectj/apache/bcel/classfile/ConstantPool/lookupMethodref(java.lang.String,java.lang.String,java.lang.String)#org/aspectj/apache/bcel/classfile/ConstantMethodref/getClassIndex()
org/aspectj/apache/bcel/classfile/ConstantPool/lookupMethodref(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/apache/bcel/classfile/ConstantPool/lookupMethodref(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/aspectj/apache/bcel/classfile/ConstantPool/lookupMethodref(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuffer/toString()
org/aspectj/apache/bcel/classfile/ConstantPool/lookupMethodref(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/replace(char,char)
org/aspectj/apache/bcel/classfile/ConstantPool/lookupFieldref(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/apache/bcel/classfile/ConstantPool/lookupFieldref(java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/Integer(int)
org/aspectj/apache/bcel/classfile/ConstantPool/lookupFieldref(java.lang.String,java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
org/aspectj/apache/bcel/classfile/ConstantPool/lookupFieldref(java.lang.String,java.lang.String,java.lang.String)#org/aspectj/apache/bcel/classfile/ConstantFieldref/getNameAndTypeIndex()
org/aspectj/apache/bcel/classfile/ConstantPool/lookupFieldref(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/classfile/ConstantPool/lookupFieldref(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/aspectj/apache/bcel/classfile/ConstantPool/lookupFieldref(java.lang.String,java.lang.String,java.lang.String)#org/aspectj/apache/bcel/classfile/ConstantFieldref/getClassIndex()
org/aspectj/apache/bcel/classfile/ConstantPool/lookupFieldref(java.lang.String,java.lang.String,java.lang.String)#java/lang/Integer/intValue()
org/aspectj/apache/bcel/classfile/ConstantPool/lookupFieldref(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/aspectj/apache/bcel/classfile/ConstantPool/lookupFieldref(java.lang.String,java.lang.String,java.lang.String)#java/lang/StringBuffer/toString()
org/aspectj/apache/bcel/classfile/ConstantPool/lookupFieldref(java.lang.String,java.lang.String,java.lang.String)#java/lang/String/replace(char,char)
org/aspectj/apache/bcel/classfile/annotation/AnnotationGen/toString()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/classfile/annotation/AnnotationGen/toString()#java/lang/StringBuilder/append(int)
org/aspectj/apache/bcel/classfile/annotation/AnnotationGen/toString()#java/lang/StringBuffer/append(java.lang.Object)
org/aspectj/apache/bcel/classfile/annotation/AnnotationGen/toString()#java/util/List/size()
org/aspectj/apache/bcel/classfile/annotation/AnnotationGen/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/classfile/annotation/AnnotationGen/toString()#java/lang/StringBuffer/toString()
org/aspectj/apache/bcel/classfile/annotation/AnnotationGen/toString()#java/util/List/get(int)
org/aspectj/apache/bcel/classfile/annotation/AnnotationGen/toString()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/classfile/annotation/AnnotationGen/toString()#java/lang/StringBuffer/StringBuffer()
org/aspectj/apache/bcel/classfile/annotation/AnnotationGen/toString()#java/lang/StringBuilder/toString()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/util/Iterator/hasNext()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#org/aspectj/weaver/ResolvedType/isPrimitiveType()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/Double/parseDouble(java.lang.String)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/util/Set/iterator()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#org/aspectj/weaver/patterns/WildAnnotationTypePattern/getSourceLocation()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/String/lastIndexOf(java.lang.String)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/Double/toString(double)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#org/aspectj/weaver/ResolvedType/getSignature()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/Long/parseLong(java.lang.String)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/Short/parseShort(java.lang.String)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/Float/parseFloat(java.lang.String)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/util/Map/putAll(java.util.Map)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/Long/toString(long)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/Integer/toString(int)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/String/length()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/util/Iterator/next()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/util/HashMap/HashMap()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/util/Map/keySet()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/Byte/toString(byte)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/String/substring(int,int)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/String/indexOf(java.lang.String)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/String/lastIndexOf(int)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/String/substring(int)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/Integer/parseInt(java.lang.String)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/Byte/parseByte(java.lang.String)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/Float/toString(float)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/Short/toString(short)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/StringBuilder/toString()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#org/aspectj/weaver/ResolvedType/isParameterizedOrGenericType()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/resolveAnnotationValues(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)#java/lang/String/endsWith(java.lang.String)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/patterns/WildAnnotationTypePattern/isForParameterAnnotationMatch()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/patterns/WildAnnotationTypePattern/writeLocation(java.io.DataOutputStream)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#java/util/Iterator/hasNext()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#java/util/Map/size()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeByte(int)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#java/util/Set/iterator()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeBoolean(boolean)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#java/util/Iterator/next()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeInt(int)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#java/util/Map/keySet()
org/aspectj/weaver/patterns/WildAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeUTF(java.lang.String)
org/aspectj/weaver/patterns/WildAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/patterns/TypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)
org/aspectj/weaver/patterns/ReferencePointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/patterns/ReferencePointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/patterns/ReferencePointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#org/aspectj/weaver/ResolvedPointcutDefinition/isAbstract()
org/aspectj/weaver/patterns/ReferencePointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#org/aspectj/weaver/ResolvedType/getTypeVariables()
org/aspectj/weaver/patterns/ReferencePointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#org/aspectj/weaver/ResolvedType/getTypeParameters()
org/aspectj/weaver/patterns/ReferencePointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#java/util/HashMap/HashMap()
org/aspectj/weaver/patterns/ReferencePointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/patterns/ReferencePointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#java/lang/reflect/Modifier/isPrivate(int)
org/aspectj/weaver/patterns/ReferencePointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#org/aspectj/weaver/ResolvedPointcutDefinition/getModifiers()
org/aspectj/weaver/patterns/ReferencePointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#org/aspectj/weaver/patterns/ReferencePointcut/getSourceLocation()
org/aspectj/weaver/patterns/ReferencePointcut/concretize1(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.IntMap)#org/aspectj/weaver/ResolvedType/isParameterizedType()
org/aspectj/weaver/patterns/ReferencePointcut/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings)#java/lang/StringBuilder/append(int)
org/aspectj/weaver/patterns/ReferencePointcut/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings)#java/util/HashMap/HashMap()
org/aspectj/weaver/patterns/ReferencePointcut/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/patterns/ReferencePointcut/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings)#java/lang/reflect/Modifier/isAbstract(int)
org/aspectj/weaver/patterns/ReferencePointcut/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings)#org/aspectj/weaver/ResolvedType/isTypeVariableReference()
org/aspectj/weaver/patterns/ReferencePointcut/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/patterns/ReferencePointcut/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings)#org/aspectj/weaver/ResolvedType/getTypeVariables()
org/aspectj/weaver/patterns/ReferencePointcut/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings)#org/aspectj/weaver/ResolvedPointcutDefinition/getParameterTypes()
org/aspectj/weaver/patterns/ReferencePointcut/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/patterns/ReferencePointcut/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings)#org/aspectj/weaver/ResolvedPointcutDefinition/isVisible(org.aspectj.weaver.ResolvedType)
org/aspectj/weaver/patterns/ReferencePointcut/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/patterns/ReferencePointcut/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/patterns/ReferencePointcut/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings)#org/aspectj/weaver/ResolvedPointcutDefinition/getModifiers()
org/aspectj/weaver/patterns/ReferencePointcut/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings)#org/aspectj/weaver/patterns/ReferencePointcut/getSourceLocation()
org/aspectj/weaver/patterns/ReferencePointcut/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/generic/MethodGen/toString()#java/util/ArrayList/iterator()
org/aspectj/apache/bcel/generic/MethodGen/toString()#java/util/Iterator/hasNext()
org/aspectj/apache/bcel/generic/MethodGen/toString()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/generic/MethodGen/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/generic/MethodGen/toString()#java/util/Iterator/next()
org/aspectj/apache/bcel/generic/MethodGen/toString()#java/lang/StringBuffer/toString()
org/aspectj/apache/bcel/generic/MethodGen/toString()#java/util/ArrayList/size()
org/aspectj/apache/bcel/generic/MethodGen/toString()#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/aspectj/apache/bcel/generic/MethodGen/toString()#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/generic/MethodGen/toString()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/generic/MethodGen/getMethod()#org/aspectj/apache/bcel/generic/MethodGen/isAbstract()
org/aspectj/apache/bcel/generic/MethodGen/getMethod()#java/util/List/size()
org/aspectj/apache/bcel/generic/MethodGen/getMethod()#java/util/ArrayList/size()
org/aspectj/apache/bcel/generic/MethodGen/getMethod()#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/generic/MethodGen/getMethod()#org/aspectj/apache/bcel/generic/MethodGen/removeAttribute(org.aspectj.apache.bcel.classfile.Attribute)
org/aspectj/apache/bcel/generic/MethodGen/getMethod()#java/lang/IllegalStateException/IllegalStateException(java.lang.String,java.lang.Throwable)
org/aspectj/apache/bcel/generic/MethodGen/getMethod()#org/aspectj/apache/bcel/generic/MethodGen/getAttributes()
org/aspectj/apache/bcel/generic/MethodGen/getMethod()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/generic/MethodGen/getMethod()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/generic/MethodGen/getMethod()#org/aspectj/apache/bcel/generic/MethodGen/addAttribute(org.aspectj.apache.bcel.classfile.Attribute)
org/aspectj/apache/bcel/generic/MethodGen/getMethod()#org/aspectj/apache/bcel/generic/MethodGen/getAttributesImmutable()
org/aspectj/apache/bcel/generic/MethodGen/getMethod()#org/aspectj/apache/bcel/generic/MethodGen/getName()
org/aspectj/apache/bcel/generic/MethodGen/getMethod()#org/aspectj/apache/bcel/generic/MethodGen/addAnnotationsAsAttribute(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/apache/bcel/generic/MethodGen/getMethod()#java/util/List/get(int)
org/aspectj/weaver/ResolvedType/checkLegalOverride(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember,int,org.aspectj.weaver.ResolvedType)#java/lang/reflect/Modifier/isFinal(int)
org/aspectj/weaver/ResolvedType/checkLegalOverride(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember,int,org.aspectj.weaver.ResolvedType)#java/util/Arrays/equals(java.lang.Object[],java.lang.Object[])
org/aspectj/weaver/ResolvedType/checkLegalOverride(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember,int,org.aspectj.weaver.ResolvedType)#java/lang/reflect/Modifier/isStatic(int)
org/aspectj/weaver/ResolvedType/checkLegalOverride(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember,int,org.aspectj.weaver.ResolvedType)#java/util/List/iterator()
org/aspectj/weaver/ResolvedType/checkLegalOverride(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember,int,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/getKind()
org/aspectj/weaver/ResolvedType/checkLegalOverride(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember,int,org.aspectj.weaver.ResolvedType)#java/util/Iterator/hasNext()
org/aspectj/weaver/ResolvedType/checkLegalOverride(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember,int,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/resolve(org.aspectj.weaver.World)
org/aspectj/weaver/ResolvedType/checkLegalOverride(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember,int,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/ResolvedType/checkLegalOverride(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember,int,org.aspectj.weaver.ResolvedType)#java/util/Iterator/next()
org/aspectj/weaver/ResolvedType/checkLegalOverride(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember,int,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#java/util/Arrays/asList(java.lang.Object[])
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#java/util/Iterator/next()
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#java/util/List/add(int,java.lang.Object)
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#org/aspectj/weaver/ResolvedMember/getKind()
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#java/util/Iterator/remove()
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#java/util/Iterator/hasNext()
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#org/aspectj/weaver/NewFieldTypeMunger/getSignature()
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#java/lang/StringBuffer/toString()
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#java/util/List/iterator()
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/ResolvedType/addInterTypeMunger(org.aspectj.weaver.ConcreteTypeMunger,boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/ResolvedType/addAndRecurse(java.util.Set,java.util.List,org.aspectj.weaver.ResolvedType,boolean,boolean,boolean)#java/util/Iterator/hasNext()
org/aspectj/weaver/ResolvedType/addAndRecurse(java.util.Set,java.util.List,org.aspectj.weaver.ResolvedType,boolean,boolean,boolean)#java/util/Iterator/next()
org/aspectj/weaver/ResolvedType/addAndRecurse(java.util.Set,java.util.List,org.aspectj.weaver.ResolvedType,boolean,boolean,boolean)#java/util/Set/contains(java.lang.Object)
org/aspectj/weaver/ResolvedType/addAndRecurse(java.util.Set,java.util.List,org.aspectj.weaver.ResolvedType,boolean,boolean,boolean)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/ResolvedType/addAndRecurse(java.util.Set,java.util.List,org.aspectj.weaver.ResolvedType,boolean,boolean,boolean)#java/util/List/get(int)
org/aspectj/weaver/ResolvedType/addAndRecurse(java.util.Set,java.util.List,org.aspectj.weaver.ResolvedType,boolean,boolean,boolean)#java/util/List/iterator()
org/aspectj/weaver/ResolvedType/addAndRecurse(java.util.Set,java.util.List,org.aspectj.weaver.ResolvedType,boolean,boolean,boolean)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/ResolvedType/addAndRecurse(java.util.Set,java.util.List,org.aspectj.weaver.ResolvedType,boolean,boolean,boolean)#org/aspectj/weaver/ResolvedType/isParameterizedOrGenericType()
org/aspectj/weaver/ResolvedType/addAndRecurse(java.util.Set,java.util.List,org.aspectj.weaver.ResolvedType,boolean,boolean,boolean)#org/aspectj/weaver/ResolvedType/getSignature()
org/aspectj/weaver/ResolvedType/addAndRecurse(java.util.Set,java.util.List,org.aspectj.weaver.ResolvedType,boolean,boolean,boolean)#java/util/Arrays/asList(java.lang.Object[])
org/aspectj/weaver/ResolvedType/addAndRecurse(java.util.Set,java.util.List,org.aspectj.weaver.ResolvedType,boolean,boolean,boolean)#java/util/List/size()
org/aspectj/weaver/ResolvedType/addAndRecurse(java.util.Set,java.util.List,org.aspectj.weaver.ResolvedType,boolean,boolean,boolean)#java/util/List/addAll(java.util.Collection)
org/aspectj/weaver/ResolvedType/addPointcutsResolvingConflicts(java.util.List,java.util.List,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/getName()
org/aspectj/weaver/ResolvedType/addPointcutsResolvingConflicts(java.util.List,java.util.List,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/getSourceLocation()
org/aspectj/weaver/ResolvedType/addPointcutsResolvingConflicts(java.util.List,java.util.List,boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/ResolvedType/addPointcutsResolvingConflicts(java.util.List,java.util.List,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/getDeclaringType()
org/aspectj/weaver/ResolvedType/addPointcutsResolvingConflicts(java.util.List,java.util.List,boolean)#java/util/Iterator/remove()
org/aspectj/weaver/ResolvedType/addPointcutsResolvingConflicts(java.util.List,java.util.List,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/isAbstract()
org/aspectj/weaver/ResolvedType/addPointcutsResolvingConflicts(java.util.List,java.util.List,boolean)#java/util/Iterator/hasNext()
org/aspectj/weaver/ResolvedType/addPointcutsResolvingConflicts(java.util.List,java.util.List,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/ResolvedType/addPointcutsResolvingConflicts(java.util.List,java.util.List,boolean)#java/util/Iterator/next()
org/aspectj/weaver/ResolvedType/addPointcutsResolvingConflicts(java.util.List,java.util.List,boolean)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/ResolvedType/addPointcutsResolvingConflicts(java.util.List,java.util.List,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/getSignature()
org/aspectj/weaver/ResolvedType/addPointcutsResolvingConflicts(java.util.List,java.util.List,boolean)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/ResolvedType/addPointcutsResolvingConflicts(java.util.List,java.util.List,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/getModifiers()
org/aspectj/weaver/ResolvedType/addPointcutsResolvingConflicts(java.util.List,java.util.List,boolean)#java/util/List/iterator()
org/aspectj/weaver/ResolvedType/addPointcutsResolvingConflicts(java.util.List,java.util.List,boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/ResolvedType/clashesWithExistingMember(org.aspectj.weaver.ConcreteTypeMunger,java.util.Iterator)#java/util/Iterator/next()
org/aspectj/weaver/ResolvedType/clashesWithExistingMember(org.aspectj.weaver.ConcreteTypeMunger,java.util.Iterator)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/ResolvedType/clashesWithExistingMember(org.aspectj.weaver.ConcreteTypeMunger,java.util.Iterator)#java/util/List/iterator()
org/aspectj/weaver/ResolvedType/clashesWithExistingMember(org.aspectj.weaver.ConcreteTypeMunger,java.util.Iterator)#java/lang/Object/toString()
org/aspectj/weaver/ResolvedType/clashesWithExistingMember(org.aspectj.weaver.ConcreteTypeMunger,java.util.Iterator)#java/lang/Object/equals(java.lang.Object)
org/aspectj/weaver/ResolvedType/clashesWithExistingMember(org.aspectj.weaver.ConcreteTypeMunger,java.util.Iterator)#java/util/Iterator/hasNext()
org/aspectj/weaver/ResolvedType/clashesWithExistingMember(org.aspectj.weaver.ConcreteTypeMunger,java.util.Iterator)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/ResolvedType/clashesWithExistingMember(org.aspectj.weaver.ConcreteTypeMunger,java.util.Iterator)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/ResolvedType/clashesWithExistingMember(org.aspectj.weaver.ConcreteTypeMunger,java.util.Iterator)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/ResolvedType/clashesWithExistingMember(org.aspectj.weaver.ConcreteTypeMunger,java.util.Iterator)#java/lang/reflect/Modifier/isPublic(int)
org/aspectj/weaver/ResolvedType/clashesWithExistingMember(org.aspectj.weaver.ConcreteTypeMunger,java.util.Iterator)#java/lang/reflect/Modifier/isPrivate(int)
org/aspectj/weaver/ResolvedType/clashesWithExistingMember(org.aspectj.weaver.ConcreteTypeMunger,java.util.Iterator)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/ResolvedType/clashesWithExistingMember(org.aspectj.weaver.ConcreteTypeMunger,java.util.Iterator)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/ResolvedType/clashesWithExistingMember(org.aspectj.weaver.ConcreteTypeMunger,java.util.Iterator)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/ResolvedType/clashesWithExistingMember(org.aspectj.weaver.ConcreteTypeMunger,java.util.Iterator)#java/lang/StringBuilder/toString()
org/aspectj/weaver/ResolvedType/getExposedPointcuts()#org/aspectj/weaver/ResolvedPointcutDefinition/isAbstract()
org/aspectj/weaver/ResolvedType/getExposedPointcuts()#java/util/ArrayList/ArrayList()
org/aspectj/weaver/ResolvedType/getExposedPointcuts()#org/aspectj/weaver/ResolvedPointcutDefinition/getSourceLocation()
org/aspectj/weaver/ResolvedType/getExposedPointcuts()#java/util/List/addAll(java.util.Collection)
org/aspectj/weaver/ResolvedType/getExposedPointcuts()#java/util/Iterator/next()
org/aspectj/weaver/ResolvedType/getExposedPointcuts()#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/ResolvedType/getExposedPointcuts()#java/util/List/iterator()
org/aspectj/weaver/ResolvedType/getExposedPointcuts()#java/util/Iterator/hasNext()
org/aspectj/weaver/ResolvedType/getExposedPointcuts()#java/util/Arrays/asList(java.lang.Object[])
org/aspectj/weaver/ResolvedType/collectInterTypeMungers(java.util.List)#java/util/Iterator/remove()
org/aspectj/weaver/ResolvedType/collectInterTypeMungers(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/ResolvedType/collectInterTypeMungers(java.util.List)#java/util/List/addAll(java.util.Collection)
org/aspectj/weaver/ResolvedType/collectInterTypeMungers(java.util.List)#java/util/Iterator/next()
org/aspectj/weaver/ResolvedType/collectInterTypeMungers(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/ResolvedType/collectInterTypeMungers(java.util.List)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/ResolvedType/collectInterTypeMungers(java.util.List)#java/lang/StringBuilder/toString()
org/aspectj/weaver/ResolvedType/collectInterTypeMungers(java.util.List)#java/util/Iterator/hasNext()
org/aspectj/weaver/ResolvedType/collectInterTypeMungers(java.util.List)#java/util/List/iterator()
org/aspectj/weaver/ResolvedMemberImpl/toDebugString()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/ResolvedMemberImpl/toDebugString()#java/lang/String/length()
org/aspectj/weaver/ResolvedMemberImpl/toDebugString()#java/lang/StringBuffer/toString()
org/aspectj/weaver/ResolvedMemberImpl/toDebugString()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/ResolvedMemberImpl/toDebugString()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/ResolvedMemberImpl/toDebugString()#java/lang/reflect/Modifier/toString(int)
org/aspectj/weaver/ResolvedMemberImpl/toDebugString()#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/ResolvedMemberImpl/toDebugString()#java/lang/StringBuilder/toString()
org/aspectj/weaver/ResolvedMemberImpl/toDebugString()#java/lang/StringBuffer/append(char)
org/aspectj/weaver/ResolvedMemberImpl/toDebugString()#java/lang/StringBuilder/append(int)
org/aspectj/weaver/ResolvedMemberImpl/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/ResolvedMemberImpl/getKind()
org/aspectj/weaver/ResolvedMemberImpl/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/ResolvedMemberImpl/getSignature()
org/aspectj/weaver/ResolvedMemberImpl/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/ResolvedMemberImpl/getDeclaringType()
org/aspectj/weaver/ResolvedMemberImpl/write(org.aspectj.weaver.CompressingDataOutputStream)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/ResolvedMemberImpl/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/ResolvedMemberImpl/getName()
org/aspectj/weaver/ResolvedMemberImpl/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeUTF(java.lang.String)
org/aspectj/weaver/ResolvedMemberImpl/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeBoolean(boolean)
org/aspectj/weaver/ResolvedMemberImpl/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/MemberKind/write(java.io.DataOutputStream)
org/aspectj/weaver/ResolvedMemberImpl/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeInt(int)
org/aspectj/weaver/ResolvedMemberImpl/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeByte(int)
org/aspectj/weaver/ResolvedMemberImpl/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean,java.util.List)#org/aspectj/weaver/ResolvedMemberImpl/getKind()
org/aspectj/weaver/ResolvedMemberImpl/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean,java.util.List)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/ResolvedMemberImpl/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean,java.util.List)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/weaver/ResolvedMemberImpl/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/ResolvedMemberImpl/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean,java.util.List)#org/aspectj/weaver/ResolvedMemberImpl/getName()
org/aspectj/weaver/ResolvedMemberImpl/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/ResolvedMemberImpl/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean,java.util.List)#java/lang/StringBuilder/toString()
org/aspectj/weaver/ResolvedMemberImpl/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean,java.util.List)#java/util/Iterator/hasNext()
org/aspectj/weaver/ResolvedMemberImpl/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean,java.util.List)#org/aspectj/weaver/ResolvedMemberImpl/getDeclaringType()
org/aspectj/weaver/ResolvedMemberImpl/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean,java.util.List)#java/util/Iterator/next()
org/aspectj/weaver/ResolvedMemberImpl/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean,java.util.List)#java/util/HashMap/HashMap()
org/aspectj/weaver/ResolvedMemberImpl/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/ResolvedMemberImpl/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean,java.util.List)#java/lang/String/indexOf(java.lang.String)
org/aspectj/weaver/ResolvedMemberImpl/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean,java.util.List)#java/util/List/iterator()
org/aspectj/weaver/ResolvedMemberImpl/accumulateMembersMatching(org.aspectj.weaver.ResolvedMemberImpl,java.util.Iterator,java.util.List,java.util.Set,boolean)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/ResolvedMemberImpl/accumulateMembersMatching(org.aspectj.weaver.ResolvedMemberImpl,java.util.Iterator,java.util.List,java.util.Set,boolean)#java/util/Iterator/hasNext()
org/aspectj/weaver/ResolvedMemberImpl/accumulateMembersMatching(org.aspectj.weaver.ResolvedMemberImpl,java.util.Iterator,java.util.List,java.util.Set,boolean)#org/aspectj/weaver/ResolvedMemberImpl/getDeclaringType()
org/aspectj/weaver/ResolvedMemberImpl/accumulateMembersMatching(org.aspectj.weaver.ResolvedMemberImpl,java.util.Iterator,java.util.List,java.util.Set,boolean)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/ResolvedMemberImpl/accumulateMembersMatching(org.aspectj.weaver.ResolvedMemberImpl,java.util.Iterator,java.util.List,java.util.Set,boolean)#java/util/List/contains(java.lang.Object)
org/aspectj/weaver/ResolvedMemberImpl/accumulateMembersMatching(org.aspectj.weaver.ResolvedMemberImpl,java.util.Iterator,java.util.List,java.util.Set,boolean)#java/util/List/iterator()
org/aspectj/weaver/ResolvedMemberImpl/accumulateMembersMatching(org.aspectj.weaver.ResolvedMemberImpl,java.util.Iterator,java.util.List,java.util.Set,boolean)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/ResolvedMemberImpl/accumulateMembersMatching(org.aspectj.weaver.ResolvedMemberImpl,java.util.Iterator,java.util.List,java.util.Set,boolean)#org/aspectj/weaver/ResolvedType/isParameterizedType()
org/aspectj/weaver/ResolvedMemberImpl/accumulateMembersMatching(org.aspectj.weaver.ResolvedMemberImpl,java.util.Iterator,java.util.List,java.util.Set,boolean)#java/util/Iterator/next()
org/aspectj/weaver/ResolvedMemberImpl/getJoinPointSignatures(org.aspectj.weaver.Member,org.aspectj.weaver.World)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/ResolvedMemberImpl/getJoinPointSignatures(org.aspectj.weaver.Member,org.aspectj.weaver.World)#java/util/Iterator/hasNext()
org/aspectj/weaver/ResolvedMemberImpl/getJoinPointSignatures(org.aspectj.weaver.Member,org.aspectj.weaver.World)#org/aspectj/weaver/ResolvedMemberImpl/getDeclaringType()
org/aspectj/weaver/ResolvedMemberImpl/getJoinPointSignatures(org.aspectj.weaver.Member,org.aspectj.weaver.World)#java/util/Set/toArray(java.lang.Object[])
org/aspectj/weaver/ResolvedMemberImpl/getJoinPointSignatures(org.aspectj.weaver.Member,org.aspectj.weaver.World)#java/util/List/iterator()
org/aspectj/weaver/ResolvedMemberImpl/getJoinPointSignatures(org.aspectj.weaver.Member,org.aspectj.weaver.World)#java/util/HashSet/HashSet()
org/aspectj/weaver/ResolvedMemberImpl/getJoinPointSignatures(org.aspectj.weaver.Member,org.aspectj.weaver.World)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/ResolvedMemberImpl/getJoinPointSignatures(org.aspectj.weaver.Member,org.aspectj.weaver.World)#java/util/Set/size()
org/aspectj/weaver/ResolvedMemberImpl/getJoinPointSignatures(org.aspectj.weaver.Member,org.aspectj.weaver.World)#java/util/Iterator/next()
org/aspectj/bridge/MessageUtil/addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)#java/io/PrintWriter/println()
org/aspectj/bridge/MessageUtil/addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)#java/io/StringWriter/getBuffer()
org/aspectj/bridge/MessageUtil/addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)#java/io/StringWriter/close()
org/aspectj/bridge/MessageUtil/addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)#java/lang/Object/toString()
org/aspectj/bridge/MessageUtil/addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)#java/util/Iterator/hasNext()
org/aspectj/bridge/MessageUtil/addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/bridge/MessageUtil/addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)#java/io/PrintWriter/PrintWriter(java.io.Writer)
org/aspectj/bridge/MessageUtil/addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)#java/util/Iterator/next()
org/aspectj/bridge/MessageUtil/addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/bridge/MessageUtil/addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)#java/io/StringWriter/StringWriter()
org/aspectj/bridge/MessageUtil/addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)#java/io/PrintWriter/print(java.lang.String)
org/aspectj/bridge/MessageUtil/addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/bridge/MessageUtil/addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)#java/lang/StringBuffer/toString()
org/aspectj/bridge/MessageUtil/addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)#java/util/List/iterator()
org/aspectj/bridge/MessageUtil/addExtraSourceLocations(org.aspectj.bridge.IMessage,java.lang.String)#java/io/PrintWriter/println(java.lang.String)
org/aspectj/bridge/MessageUtil/print(java.io.PrintStream,org.aspectj.bridge.IMessageHolder,java.lang.String,org.aspectj.bridge.MessageUtil$IMessageRenderer,org.aspectj.bridge.IMessageHandler,boolean)#java/util/Iterator/hasNext()
org/aspectj/bridge/MessageUtil/print(java.io.PrintStream,org.aspectj.bridge.IMessageHolder,java.lang.String,org.aspectj.bridge.MessageUtil$IMessageRenderer,org.aspectj.bridge.IMessageHandler,boolean)#java/util/Iterator/next()
org/aspectj/bridge/MessageUtil/print(java.io.PrintStream,org.aspectj.bridge.IMessageHolder,java.lang.String,org.aspectj.bridge.MessageUtil$IMessageRenderer,org.aspectj.bridge.IMessageHandler,boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/bridge/MessageUtil/print(java.io.PrintStream,org.aspectj.bridge.IMessageHolder,java.lang.String,org.aspectj.bridge.MessageUtil$IMessageRenderer,org.aspectj.bridge.IMessageHandler,boolean)#org/aspectj/bridge/MessageUtil$IMessageRenderer/renderToString(org.aspectj.bridge.IMessage)
org/aspectj/bridge/MessageUtil/print(java.io.PrintStream,org.aspectj.bridge.IMessageHolder,java.lang.String,org.aspectj.bridge.MessageUtil$IMessageRenderer,org.aspectj.bridge.IMessageHandler,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/bridge/MessageUtil/print(java.io.PrintStream,org.aspectj.bridge.IMessageHolder,java.lang.String,org.aspectj.bridge.MessageUtil$IMessageRenderer,org.aspectj.bridge.IMessageHandler,boolean)#java/lang/StringBuilder/toString()
org/aspectj/bridge/MessageUtil/print(java.io.PrintStream,org.aspectj.bridge.IMessageHolder,java.lang.String,org.aspectj.bridge.MessageUtil$IMessageRenderer,org.aspectj.bridge.IMessageHandler,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/bridge/MessageUtil/print(java.io.PrintStream,org.aspectj.bridge.IMessageHolder,java.lang.String,org.aspectj.bridge.MessageUtil$IMessageRenderer,org.aspectj.bridge.IMessageHandler,boolean)#java/io/PrintStream/println(java.lang.String)
org/aspectj/bridge/MessageUtil/print(java.io.PrintStream,org.aspectj.bridge.IMessageHolder,java.lang.String,org.aspectj.bridge.MessageUtil$IMessageRenderer,org.aspectj.bridge.IMessageHandler,boolean)#java/util/List/iterator()
org/aspectj/bridge/MessageUtil/renderCounts(org.aspectj.bridge.IMessageHolder)#java/util/Iterator/hasNext()
org/aspectj/bridge/MessageUtil/renderCounts(org.aspectj.bridge.IMessageHolder)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/bridge/MessageUtil/renderCounts(org.aspectj.bridge.IMessageHolder)#java/lang/StringBuilder/append(int)
org/aspectj/bridge/MessageUtil/renderCounts(org.aspectj.bridge.IMessageHolder)#java/lang/StringBuffer/toString()
org/aspectj/bridge/MessageUtil/renderCounts(org.aspectj.bridge.IMessageHolder)#java/lang/StringBuilder/StringBuilder()
org/aspectj/bridge/MessageUtil/renderCounts(org.aspectj.bridge.IMessageHolder)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/bridge/MessageUtil/renderCounts(org.aspectj.bridge.IMessageHolder)#java/lang/StringBuffer/StringBuffer()
org/aspectj/bridge/MessageUtil/renderCounts(org.aspectj.bridge.IMessageHolder)#java/lang/StringBuilder/toString()
org/aspectj/bridge/MessageUtil/renderCounts(org.aspectj.bridge.IMessageHolder)#java/util/Iterator/next()
org/aspectj/bridge/MessageUtil/renderCounts(org.aspectj.bridge.IMessageHolder)#java/util/List/iterator()
org/aspectj/bridge/MessageUtil/renderCounts(org.aspectj.bridge.IMessageHolder)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/bridge/MessageUtil/renderMessageLine(org.aspectj.bridge.IMessage,int,int,int)#java/io/File/getName()
org/aspectj/bridge/MessageUtil/renderMessageLine(org.aspectj.bridge.IMessage,int,int,int)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/bridge/MessageUtil/renderMessageLine(org.aspectj.bridge.IMessage,int,int,int)#java/lang/StringBuilder/append(int)
org/aspectj/bridge/MessageUtil/renderMessageLine(org.aspectj.bridge.IMessage,int,int,int)#java/lang/Throwable/getMessage()
org/aspectj/bridge/MessageUtil/renderMessageLine(org.aspectj.bridge.IMessage,int,int,int)#java/lang/StringBuilder/StringBuilder()
org/aspectj/bridge/MessageUtil/renderMessageLine(org.aspectj.bridge.IMessage,int,int,int)#java/lang/StringBuilder/toString()
org/aspectj/bridge/MessageUtil/renderMessageLine(org.aspectj.bridge.IMessage,int,int,int)#java/lang/String/length()
org/aspectj/bridge/MessageUtil/renderMessageLine(org.aspectj.bridge.IMessage,int,int,int)#java/lang/StringBuffer/length()
org/aspectj/bridge/MessageUtil/renderMessageLine(org.aspectj.bridge.IMessage,int,int,int)#java/lang/String/equals(java.lang.Object)
org/aspectj/bridge/MessageUtil/renderMessageLine(org.aspectj.bridge.IMessage,int,int,int)#java/lang/StringBuffer/toString()
org/aspectj/bridge/MessageUtil/renderMessageLine(org.aspectj.bridge.IMessage,int,int,int)#java/lang/String/substring(int,int)
org/aspectj/bridge/MessageUtil/renderMessageLine(org.aspectj.bridge.IMessage,int,int,int)#org/aspectj/bridge/IMessage$Kind/toString()
org/aspectj/bridge/MessageUtil/renderMessageLine(org.aspectj.bridge.IMessage,int,int,int)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/bridge/MessageUtil/renderMessageLine(org.aspectj.bridge.IMessage,int,int,int)#java/lang/StringBuffer/StringBuffer()
org/aspectj/bridge/MessageUtil/<clinit>()#org/aspectj/bridge/MessageUtil$KindSelector/KindSelector(org.aspectj.bridge.IMessage$Kind,boolean)
org/aspectj/bridge/MessageUtil/<clinit>()#org/aspectj/bridge/MessageUtil$4/4()
org/aspectj/bridge/MessageUtil/<clinit>()#org/aspectj/bridge/MessageUtil$5/5()
org/aspectj/bridge/MessageUtil/<clinit>()#org/aspectj/bridge/MessageUtil$6/6()
org/aspectj/bridge/MessageUtil/<clinit>()#org/aspectj/bridge/MessageUtil$7/7()
org/aspectj/bridge/MessageUtil/<clinit>()#org/aspectj/bridge/MessageUtil$8/8()
org/aspectj/bridge/MessageUtil/<clinit>()#org/aspectj/bridge/MessageUtil$9/9()
org/aspectj/bridge/MessageUtil/<clinit>()#org/aspectj/bridge/MessageUtil$KindSelector/KindSelector(org.aspectj.bridge.IMessage$Kind)
org/aspectj/bridge/MessageUtil/<clinit>()#org/aspectj/bridge/MessageUtil$2/2()
org/aspectj/bridge/MessageUtil/<clinit>()#org/aspectj/bridge/MessageUtil$3/3()
org/aspectj/bridge/MessageUtil/<clinit>()#org/aspectj/bridge/MessageUtil$11/11()
org/aspectj/bridge/MessageUtil/<clinit>()#org/aspectj/bridge/MessageUtil$10/10()
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/Object/toString()
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/util/Iterator/hasNext()
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/Long/valueOf(long)
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/StringBuffer/toString()
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/util/Set/iterator()
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/util/Iterator/next()
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/util/Map/keySet()
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/Long/longValue()
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/StringBuilder/append(long)
org/aspectj/weaver/World/TimeCollector/recordFastMatch(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/StringBuilder/toString()
org/aspectj/weaver/World/TimeCollector/report()#java/util/Iterator/hasNext()
org/aspectj/weaver/World/TimeCollector/report()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/World/TimeCollector/report()#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/World/TimeCollector/report()#java/lang/StringBuffer/toString()
org/aspectj/weaver/World/TimeCollector/report()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/World/TimeCollector/report()#java/util/Set/iterator()
org/aspectj/weaver/World/TimeCollector/report()#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/World/TimeCollector/report()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/World/TimeCollector/report()#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/World/TimeCollector/report()#java/util/Iterator/next()
org/aspectj/weaver/World/TimeCollector/report()#java/util/Map/keySet()
org/aspectj/weaver/World/TimeCollector/report()#java/lang/Long/longValue()
org/aspectj/weaver/World/TimeCollector/report()#java/lang/StringBuilder/append(long)
org/aspectj/weaver/World/TimeCollector/report()#java/lang/StringBuilder/toString()
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/Object/toString()
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/util/Iterator/hasNext()
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/Long/valueOf(long)
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/StringBuffer/toString()
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/util/Set/iterator()
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/util/Iterator/next()
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/util/Map/keySet()
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/Long/longValue()
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/StringBuilder/append(long)
org/aspectj/weaver/World/TimeCollector/record(org.aspectj.weaver.patterns.Pointcut,long)#java/lang/StringBuilder/toString()
org/aspectj/weaver/patterns/TypePatternQuestions/toString()#java/util/Iterator/hasNext()
org/aspectj/weaver/patterns/TypePatternQuestions/toString()#java/util/Map$Entry/getKey()
org/aspectj/weaver/patterns/TypePatternQuestions/toString()#java/lang/StringBuffer/append(java.lang.Object)
org/aspectj/weaver/patterns/TypePatternQuestions/toString()#java/util/Iterator/next()
org/aspectj/weaver/patterns/TypePatternQuestions/toString()#java/lang/StringBuffer/toString()
org/aspectj/weaver/patterns/TypePatternQuestions/toString()#java/util/Set/iterator()
org/aspectj/weaver/patterns/TypePatternQuestions/toString()#java/util/Map$Entry/getValue()
org/aspectj/weaver/patterns/TypePatternQuestions/toString()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/patterns/TypePatternQuestions/toString()#java/util/Map/entrySet()
org/aspectj/weaver/patterns/TypePatternQuestions/toString()#java/lang/StringBuffer/StringBuffer()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDMethods()#java/lang/Class/getDeclaredMethods()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDMethods()#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDMethods()#java/util/List/toArray(java.lang.Object[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDMethods()#java/lang/reflect/Method/getName()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDMethods()#java/util/List/add(java.lang.Object)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDMethods()#java/lang/String/contains(java.lang.CharSequence)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDMethods()#java/util/ArrayList/ArrayList()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDMethods()#java/util/List/size()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDMethods()#java/lang/reflect/Method/isAnnotationPresent(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDConstructors()#java/util/ArrayList/ArrayList()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDConstructors()#java/lang/Class/getDeclaredMethods()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDConstructors()#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDConstructors()#java/util/List/toArray(java.lang.Object[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDConstructors()#java/lang/reflect/Method/getName()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDConstructors()#java/util/List/add(java.lang.Object)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDConstructors()#java/lang/String/contains(java.lang.CharSequence)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDConstructors()#java/util/List/size()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDConstructors()#java/lang/reflect/Method/isAnnotationPresent(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/util/ArrayList/ArrayList()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/lang/Class/getDeclaredMethods()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/lang/reflect/Method/getGenericReturnType()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/lang/reflect/Method/getName()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/lang/StringBuilder/StringBuilder()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/util/List/add(java.lang.Object)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/lang/reflect/Method/getParameterTypes()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/lang/String/contains(java.lang.CharSequence)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/util/List/size()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/lang/reflect/Method/isAnnotationPresent(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/lang/reflect/Method/getReturnType()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/util/List/toArray(java.lang.Object[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclaredITDFields()#java/lang/StringBuilder/toString()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareErrorOrWarnings()#java/util/ArrayList/ArrayList()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareErrorOrWarnings()#java/lang/reflect/Field/get(java.lang.Object)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareErrorOrWarnings()#java/lang/Class/getDeclaredMethods()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareErrorOrWarnings()#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareErrorOrWarnings()#java/lang/reflect/Modifier/isStatic(int)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareErrorOrWarnings()#java/util/List/toArray(java.lang.Object[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareErrorOrWarnings()#java/lang/reflect/Modifier/isPublic(int)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareErrorOrWarnings()#java/util/List/add(java.lang.Object)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareErrorOrWarnings()#java/lang/Class/getDeclaredFields()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareErrorOrWarnings()#java/lang/reflect/Field/getModifiers()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareErrorOrWarnings()#java/lang/reflect/Field/getAnnotation(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareErrorOrWarnings()#java/lang/reflect/Field/isAnnotationPresent(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareErrorOrWarnings()#java/util/List/size()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareErrorOrWarnings()#java/lang/reflect/Method/isAnnotationPresent(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDMethods()#java/lang/Class/getDeclaredMethods()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDMethods()#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDMethods()#java/util/List/toArray(java.lang.Object[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDMethods()#java/lang/reflect/Method/getName()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDMethods()#java/lang/reflect/Modifier/isPublic(int)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDMethods()#java/util/List/add(java.lang.Object)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDMethods()#java/lang/String/contains(java.lang.CharSequence)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDMethods()#java/util/ArrayList/ArrayList()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDMethods()#java/util/List/size()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDMethods()#java/lang/reflect/Method/isAnnotationPresent(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareAnnotations()#java/util/ArrayList/ArrayList()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareAnnotations()#java/lang/Class/getDeclaredMethods()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareAnnotations()#java/util/Arrays/asList(java.lang.Object[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareAnnotations()#java/util/List/addAll(java.util.Collection)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareAnnotations()#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareAnnotations()#java/util/List/size()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareAnnotations()#java/lang/reflect/Method/isAnnotationPresent(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareAnnotations()#java/util/List/toArray(java.lang.Object[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareAnnotations()#java/lang/reflect/Method/getAnnotations()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareAnnotations()#java/util/List/add(java.lang.Object)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareAnnotations()#java/lang/annotation/Annotation/annotationType()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareParents()#java/util/ArrayList/ArrayList()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareParents()#java/lang/Class/getDeclaredMethods()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareParents()#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareParents()#java/util/Arrays/asList(java.lang.Object[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareParents()#java/util/List/addAll(java.util.Collection)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareParents()#java/util/List/toArray(java.lang.Object[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareParents()#java/util/List/add(java.lang.Object)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareParents()#java/util/List/size()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareParents()#java/lang/reflect/Method/isAnnotationPresent(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareSofts()#java/util/ArrayList/ArrayList()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareSofts()#java/lang/Class/getDeclaredMethods()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareSofts()#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareSofts()#java/util/Arrays/asList(java.lang.Object[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareSofts()#java/util/List/addAll(java.util.Collection)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareSofts()#java/util/List/toArray(java.lang.Object[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareSofts()#java/util/List/add(java.lang.Object)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareSofts()#java/util/List/size()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclareSofts()#java/lang/reflect/Method/isAnnotationPresent(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getPerClause()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/internal/lang/reflect/AjTypeImpl/getPerClause()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/internal/lang/reflect/AjTypeImpl/getPerClause()#java/lang/String/equals(java.lang.Object)
org/aspectj/internal/lang/reflect/AjTypeImpl/getPerClause()#java/lang/String/substring(int,int)
org/aspectj/internal/lang/reflect/AjTypeImpl/getPerClause()#java/lang/StringBuilder/StringBuilder()
org/aspectj/internal/lang/reflect/AjTypeImpl/getPerClause()#java/lang/String/startsWith(java.lang.String)
org/aspectj/internal/lang/reflect/AjTypeImpl/getPerClause()#java/lang/StringBuilder/toString()
org/aspectj/internal/lang/reflect/AjTypeImpl/getPerClause()#java/lang/String/length()
org/aspectj/internal/lang/reflect/AjTypeImpl/getPerClause()#java/lang/Class/getAnnotation(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDConstructors()#java/lang/Class/getMethods()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDConstructors()#java/util/ArrayList/ArrayList()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDConstructors()#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDConstructors()#java/util/List/toArray(java.lang.Object[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDConstructors()#java/lang/reflect/Method/getName()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDConstructors()#java/lang/reflect/Modifier/isPublic(int)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDConstructors()#java/util/List/add(java.lang.Object)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDConstructors()#java/lang/String/contains(java.lang.CharSequence)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDConstructors()#java/util/List/size()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDConstructors()#java/lang/reflect/Method/isAnnotationPresent(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/lang/Class/getMethods()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/util/ArrayList/ArrayList()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/lang/reflect/Method/getGenericReturnType()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/lang/reflect/Method/getName()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/lang/StringBuilder/StringBuilder()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/util/List/add(java.lang.Object)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/lang/reflect/Method/getParameterTypes()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/lang/String/contains(java.lang.CharSequence)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/util/List/size()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/lang/reflect/Method/isAnnotationPresent(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/lang/reflect/Method/getReturnType()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/util/List/toArray(java.lang.Object[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/lang/reflect/Modifier/isPublic(int)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/lang/reflect/Method/getDeclaringClass()
org/aspectj/internal/lang/reflect/AjTypeImpl/getITDFields()#java/lang/StringBuilder/toString()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclarePrecedence()#java/util/ArrayList/ArrayList()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclarePrecedence()#java/lang/Class/getDeclaredMethods()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclarePrecedence()#java/util/List/toArray(java.lang.Object[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclarePrecedence()#java/util/List/add(java.lang.Object)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclarePrecedence()#java/lang/reflect/Method/getAnnotation(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclarePrecedence()#java/lang/Class/getAnnotation(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclarePrecedence()#java/util/Arrays/asList(java.lang.Object[])
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclarePrecedence()#java/util/List/size()
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclarePrecedence()#java/lang/reflect/Method/isAnnotationPresent(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclarePrecedence()#java/lang/Class/isAnnotationPresent(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/getDeclarePrecedence()#java/util/List/addAll(java.util.Collection)
org/aspectj/internal/lang/reflect/AjTypeImpl/addAnnotationStyleITDMethods(java.util.List,boolean)#java/lang/Class/isInterface()
org/aspectj/internal/lang/reflect/AjTypeImpl/addAnnotationStyleITDMethods(java.util.List,boolean)#java/lang/Class/getDeclaredMethods()
org/aspectj/internal/lang/reflect/AjTypeImpl/addAnnotationStyleITDMethods(java.util.List,boolean)#java/lang/reflect/Method/getModifiers()
org/aspectj/internal/lang/reflect/AjTypeImpl/addAnnotationStyleITDMethods(java.util.List,boolean)#java/lang/reflect/Field/getType()
org/aspectj/internal/lang/reflect/AjTypeImpl/addAnnotationStyleITDMethods(java.util.List,boolean)#java/lang/reflect/Modifier/isPublic(int)
org/aspectj/internal/lang/reflect/AjTypeImpl/addAnnotationStyleITDMethods(java.util.List,boolean)#java/util/List/add(java.lang.Object)
org/aspectj/internal/lang/reflect/AjTypeImpl/addAnnotationStyleITDMethods(java.util.List,boolean)#java/lang/Class/getDeclaredFields()
org/aspectj/internal/lang/reflect/AjTypeImpl/addAnnotationStyleITDMethods(java.util.List,boolean)#java/lang/reflect/Field/getAnnotation(java.lang.Class)
org/aspectj/internal/lang/reflect/AjTypeImpl/addAnnotationStyleITDMethods(java.util.List,boolean)#java/lang/reflect/Field/isAnnotationPresent(java.lang.Class)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#java/io/IOException/IOException(java.lang.String)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#java/util/Collection/size()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#java/io/File/exists()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#java/io/StreamCorruptedException/StreamCorruptedException(java.lang.String)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#java/io/File/getAbsolutePath()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream,int)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#java/io/File/mkdirs()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/close(java.io.OutputStream,java.io.File)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#java/util/Collection/toArray(java.lang.Object[])
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#java/io/File/delete()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/writeIndex(java.io.File,java.util.Collection)#java/io/File/getParentFile()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/getKeys(java.lang.String)#java/util/Iterator/hasNext()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/getKeys(java.lang.String)#java/util/Collection/size()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/getKeys(java.lang.String)#java/util/Set/iterator()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/getKeys(java.lang.String)#java/util/Collection/add(java.lang.Object)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/getKeys(java.lang.String)#java/lang/String/matches(java.lang.String)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/getKeys(java.lang.String)#java/util/Map/isEmpty()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/getKeys(java.lang.String)#java/util/Collection/isEmpty()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/getKeys(java.lang.String)#java/util/Iterator/next()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/getKeys(java.lang.String)#java/util/Map/keySet()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/getKeys(java.lang.String)#java/util/Collection/toArray(java.lang.Object[])
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/getKeys(java.lang.String)#java/util/LinkedList/LinkedList()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/readIndex(java.io.File)#java/lang/Class/getSimpleName()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/readIndex(java.io.File)#java/io/File/canRead()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/readIndex(java.io.File)#java/io/ObjectInputStream/readObject()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/readIndex(java.io.File)#org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/delete(java.io.File)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/readIndex(java.io.File)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/readIndex(java.io.File)#java/io/File/getAbsolutePath()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/readIndex(java.io.File)#java/io/ObjectInputStream/ObjectInputStream(java.io.InputStream)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/readIndex(java.io.File)#org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/close(java.io.InputStream,java.io.File)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/readIndex(java.io.File)#java/lang/Object/getClass()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/readIndex(java.io.File)#java/io/FileInputStream/FileInputStream(java.io.File)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/readIndex(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/readIndex(java.io.File)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/AbstractIndexedFileCacheBacking/readIndex(java.io.File)#java/lang/Exception/getMessage()
aj/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/getSuperclass()
aj/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/getName()
aj/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/String/replace(char,char)
aj/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/isInterface()
aj/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/isAssignableFrom(java.lang.Class)
aj/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/forName(java.lang.String,boolean,java.lang.ClassLoader)
aj/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
aj/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Object/getClass()
aj/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Class/getClassLoader()
aj/org/objectweb/asm/ClassWriter/getCommonSuperClass(java.lang.String,java.lang.String)#java/lang/Exception/toString()
aj/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Integer/intValue()
aj/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Short/intValue()
aj/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/StringBuffer/append(java.lang.Object)
aj/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Byte/intValue()
aj/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
aj/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/StringBuffer/append(java.lang.String)
aj/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Character/charValue()
aj/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Long/longValue()
aj/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Double/doubleValue()
aj/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/StringBuffer/toString()
aj/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Float/floatValue()
aj/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/Boolean/booleanValue()
aj/org/objectweb/asm/ClassWriter/a(java.lang.Object)#java/lang/StringBuffer/StringBuffer()
org/aspectj/bridge/context/PinpointingMessageHandler/handleMessage(org.aspectj.bridge.IMessage)#org/aspectj/bridge/context/PinpointingMessageHandler$PinpointedMessage/PinpointedMessage(org.aspectj.bridge.IMessage,java.lang.String)
org/aspectj/bridge/context/PinpointingMessageHandler/handleMessage(org.aspectj.bridge.IMessage)#org/aspectj/bridge/context/PinpointingMessageHandler$MessageIssued/MessageIssued(org.aspectj.bridge.context.PinpointingMessageHandler$1)
org/aspectj/bridge/context/PinpointingMessageHandler/handleMessage(org.aspectj.bridge.IMessage)#java/io/PrintWriter/PrintWriter(java.io.Writer)
org/aspectj/bridge/context/PinpointingMessageHandler/handleMessage(org.aspectj.bridge.IMessage)#java/lang/StringBuffer/toString()
org/aspectj/bridge/context/PinpointingMessageHandler/handleMessage(org.aspectj.bridge.IMessage)#java/io/StringWriter/toString()
org/aspectj/bridge/context/PinpointingMessageHandler/handleMessage(org.aspectj.bridge.IMessage)#java/lang/StringBuffer/StringBuffer()
org/aspectj/bridge/context/PinpointingMessageHandler/handleMessage(org.aspectj.bridge.IMessage)#org/aspectj/bridge/context/PinpointingMessageHandler$MessageIssued/printStackTrace(java.io.PrintWriter)
org/aspectj/bridge/context/PinpointingMessageHandler/handleMessage(org.aspectj.bridge.IMessage)#java/io/StringWriter/StringWriter()
org/aspectj/bridge/context/PinpointingMessageHandler/handleMessage(org.aspectj.bridge.IMessage)#org/aspectj/bridge/context/PinpointingMessageHandler$MessageIssued/fillInStackTrace()
org/aspectj/bridge/context/PinpointingMessageHandler/handleMessage(org.aspectj.bridge.IMessage)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/net/URLClassLoader/getURLs()
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/lang/Class/getSimpleName()
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/util/Iterator/hasNext()
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/net/URL/toString()
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/util/List/addAll(java.util.Collection)
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/util/Iterator/next()
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/lang/StringBuilder/StringBuilder(int)
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/util/LinkedList/LinkedList()
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/lang/Object/getClass()
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/util/Collections/sort(java.util.List)
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/lang/StringBuilder/append(char)
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/util/List/iterator()
org/aspectj/weaver/tools/cache/DefaultCacheKeyResolver/createClassLoaderScope(java.lang.ClassLoader,java.util.List)#java/lang/String/getBytes()
org/aspectj/apache/bcel/generic/InstructionBranch/dump(java.io.DataOutputStream)#java/lang/String/toUpperCase()
org/aspectj/apache/bcel/generic/InstructionBranch/dump(java.io.DataOutputStream)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/generic/InstructionBranch/dump(java.io.DataOutputStream)#java/lang/StringBuilder/append(int)
org/aspectj/apache/bcel/generic/InstructionBranch/dump(java.io.DataOutputStream)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/generic/InstructionBranch/dump(java.io.DataOutputStream)#java/io/DataOutputStream/writeShort(int)
org/aspectj/apache/bcel/generic/InstructionBranch/dump(java.io.DataOutputStream)#org/aspectj/apache/bcel/generic/InstructionBranch/getName()
org/aspectj/apache/bcel/generic/InstructionBranch/dump(java.io.DataOutputStream)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/generic/InstructionBranch/dump(java.io.DataOutputStream)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/apache/bcel/generic/InstructionBranch/dump(java.io.DataOutputStream)#java/io/DataOutputStream/writeInt(int)
org/aspectj/apache/bcel/generic/InstructionBranch/dump(java.io.DataOutputStream)#java/lang/Math/abs(int)
org/aspectj/apache/bcel/generic/InstructionBranch/dump(java.io.DataOutputStream)#java/io/DataOutputStream/writeByte(int)
org/aspectj/weaver/patterns/SignaturePattern/reportUnmatchedTargetKindMessage(org.aspectj.weaver.AnnotationTargetKind[],org.aspectj.weaver.patterns.PatternNode,org.aspectj.weaver.patterns.IScope,boolean)#java/lang/Object/toString()
org/aspectj/weaver/patterns/SignaturePattern/reportUnmatchedTargetKindMessage(org.aspectj.weaver.AnnotationTargetKind[],org.aspectj.weaver.patterns.PatternNode,org.aspectj.weaver.patterns.IScope,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/patterns/SignaturePattern/reportUnmatchedTargetKindMessage(org.aspectj.weaver.AnnotationTargetKind[],org.aspectj.weaver.patterns.PatternNode,org.aspectj.weaver.patterns.IScope,boolean)#org/aspectj/weaver/Lint$Kind/signal(java.lang.String[],org.aspectj.bridge.ISourceLocation,org.aspectj.bridge.ISourceLocation[])
org/aspectj/weaver/patterns/SignaturePattern/reportUnmatchedTargetKindMessage(org.aspectj.weaver.AnnotationTargetKind[],org.aspectj.weaver.patterns.PatternNode,org.aspectj.weaver.patterns.IScope,boolean)#org/aspectj/weaver/MemberKind/getName()
org/aspectj/weaver/patterns/SignaturePattern/reportUnmatchedTargetKindMessage(org.aspectj.weaver.AnnotationTargetKind[],org.aspectj.weaver.patterns.PatternNode,org.aspectj.weaver.patterns.IScope,boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/patterns/SignaturePattern/reportUnmatchedTargetKindMessage(org.aspectj.weaver.AnnotationTargetKind[],org.aspectj.weaver.patterns.PatternNode,org.aspectj.weaver.patterns.IScope,boolean)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/patterns/SignaturePattern/reportUnmatchedTargetKindMessage(org.aspectj.weaver.AnnotationTargetKind[],org.aspectj.weaver.patterns.PatternNode,org.aspectj.weaver.patterns.IScope,boolean)#org/aspectj/weaver/patterns/SignaturePattern/getSourceLocation()
org/aspectj/weaver/patterns/SignaturePattern/reportUnmatchedTargetKindMessage(org.aspectj.weaver.AnnotationTargetKind[],org.aspectj.weaver.patterns.PatternNode,org.aspectj.weaver.patterns.IScope,boolean)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/patterns/SignaturePattern/reportUnmatchedTargetKindMessage(org.aspectj.weaver.AnnotationTargetKind[],org.aspectj.weaver.patterns.PatternNode,org.aspectj.weaver.patterns.IScope,boolean)#java/lang/StringBuffer/toString()
org/aspectj/weaver/patterns/SignaturePattern/reportUnmatchedTargetKindMessage(org.aspectj.weaver.AnnotationTargetKind[],org.aspectj.weaver.patterns.PatternNode,org.aspectj.weaver.patterns.IScope,boolean)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/aspectj/weaver/patterns/SignaturePattern/reportUnmatchedTargetKindMessage(org.aspectj.weaver.AnnotationTargetKind[],org.aspectj.weaver.patterns.PatternNode,org.aspectj.weaver.patterns.IScope,boolean)#org/aspectj/weaver/AnnotationTargetKind/getName()
org/aspectj/weaver/patterns/SignaturePattern/reportUnmatchedTargetKindMessage(org.aspectj.weaver.AnnotationTargetKind[],org.aspectj.weaver.patterns.PatternNode,org.aspectj.weaver.patterns.IScope,boolean)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/classfile/BootstrapMethods/toString()#org/aspectj/apache/bcel/classfile/BootstrapMethods$BootstrapMethod/getBootstrapArguments()
org/aspectj/apache/bcel/classfile/BootstrapMethods/toString()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/classfile/BootstrapMethods/toString()#java/lang/StringBuffer/length()
org/aspectj/apache/bcel/classfile/BootstrapMethods/toString()#org/aspectj/apache/bcel/classfile/BootstrapMethods/getConstantPool()
org/aspectj/apache/bcel/classfile/BootstrapMethods/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/classfile/BootstrapMethods/toString()#java/lang/StringBuffer/toString()
org/aspectj/apache/bcel/classfile/BootstrapMethods/toString()#java/lang/StringBuffer/append(int)
org/aspectj/apache/bcel/classfile/BootstrapMethods/toString()#org/aspectj/apache/bcel/classfile/BootstrapMethods$BootstrapMethod/getBootstrapMethodRef()
org/aspectj/apache/bcel/classfile/BootstrapMethods/toString()#java/lang/StringBuffer/append(char)
org/aspectj/apache/bcel/classfile/BootstrapMethods/toString()#java/lang/StringBuilder/append(int)
org/aspectj/apache/bcel/classfile/BootstrapMethods/toString()#java/lang/StringBuffer/append(java.lang.Object)
org/aspectj/apache/bcel/classfile/BootstrapMethods/toString()#java/lang/StringBuffer/append(java.lang.StringBuffer)
org/aspectj/apache/bcel/classfile/BootstrapMethods/toString()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/classfile/BootstrapMethods/toString()#java/lang/StringBuffer/StringBuffer()
org/aspectj/apache/bcel/classfile/BootstrapMethods/toString()#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/classfile/BootstrapMethods/toString()#java/lang/StringBuffer/setLength(int)
org/aspectj/weaver/patterns/PerClause/KindAnnotationPrefix/extractPointcut(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/patterns/PerClause/KindAnnotationPrefix/extractPointcut(java.lang.String)#java/lang/String/length()
org/aspectj/weaver/patterns/PerClause/KindAnnotationPrefix/extractPointcut(java.lang.String)#org/aspectj/weaver/patterns/PerClause$KindAnnotationPrefix/getName()
org/aspectj/weaver/patterns/PerClause/KindAnnotationPrefix/extractPointcut(java.lang.String)#java/lang/String/substring(int,int)
org/aspectj/weaver/patterns/PerClause/KindAnnotationPrefix/extractPointcut(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/patterns/PerClause/KindAnnotationPrefix/extractPointcut(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/patterns/PerClause/KindAnnotationPrefix/extractPointcut(java.lang.String)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/weaver/patterns/PerClause/KindAnnotationPrefix/extractPointcut(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/weaver/patterns/PerClause/KindAnnotationPrefix/extractPointcut(java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/aspectj/weaver/Dump/println(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/Dump/println(java.io.File)#java/lang/StringBuilder/append(int)
org/aspectj/weaver/Dump/println(java.io.File)#java/io/File/exists()
org/aspectj/weaver/Dump/println(java.io.File)#java/lang/StringBuilder/append(long)
org/aspectj/weaver/Dump/println(java.io.File)#java/io/File/getAbsolutePath()
org/aspectj/weaver/Dump/println(java.io.File)#java/io/File/length()
org/aspectj/weaver/Dump/println(java.io.File)#java/io/File/listFiles()
org/aspectj/weaver/Dump/println(java.io.File)#java/lang/StringBuilder/toString()
org/aspectj/weaver/Dump/println(java.io.File)#java/io/File/isDirectory()
org/aspectj/weaver/Dump/println(java.io.File)#java/io/PrintStream/print(java.lang.String)
org/aspectj/weaver/Dump/println(java.io.File)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/Dump/println(java.util.Properties)#java/util/Properties/getProperty(java.lang.String)
org/aspectj/weaver/Dump/println(java.util.Properties)#java/util/Iterator/hasNext()
org/aspectj/weaver/Dump/println(java.util.Properties)#java/util/Iterator/next()
org/aspectj/weaver/Dump/println(java.util.Properties)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/Dump/println(java.util.Properties)#java/util/Set/iterator()
org/aspectj/weaver/Dump/println(java.util.Properties)#java/util/Properties/keySet()
org/aspectj/weaver/Dump/println(java.util.Properties)#java/lang/StringBuilder/toString()
org/aspectj/weaver/Dump/println(java.util.Properties)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/Dump/println(java.util.Properties)#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/Dump/openDump()#java/io/File/File(java.io.File,java.lang.String)
org/aspectj/weaver/Dump/openDump()#java/util/Date/Date()
org/aspectj/weaver/Dump/openDump()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/Dump/openDump()#java/io/File/getAbsolutePath()
org/aspectj/weaver/Dump/openDump()#java/text/SimpleDateFormat/SimpleDateFormat(java.lang.String)
org/aspectj/weaver/Dump/openDump()#java/io/PrintStream/PrintStream(java.io.OutputStream,boolean)
org/aspectj/weaver/Dump/openDump()#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/aspectj/weaver/Dump/openDump()#java/lang/StringBuilder/toString()
org/aspectj/weaver/Dump/openDump()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/Dump/openDump()#java/text/SimpleDateFormat/format(java.util.Date)
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#org/aspectj/weaver/bcel/ExceptionRange/getRealEnd()
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/Set/iterator()
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#org/aspectj/weaver/bcel/ExceptionRange/getRealStart()
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#org/aspectj/weaver/bcel/LazyMethodGen$LVPosition/LVPosition(org.aspectj.weaver.bcel.LazyMethodGen$1)
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/LinkedList/iterator()
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#org/aspectj/apache/bcel/generic/TargetLostException/printStackTrace()
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#org/aspectj/weaver/bcel/ExceptionRange/isEmpty()
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/Map/size()
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/Iterator/next()
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/HashMap/HashMap()
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/LinkedList/LinkedList()
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#org/aspectj/weaver/bcel/ExceptionRange/getStart()
org/aspectj/weaver/bcel/LazyMethodGen/optimizedPackBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/HashSet/HashSet()
org/aspectj/weaver/bcel/LazyMethodGen/packBody(org.aspectj.apache.bcel.generic.MethodGen)#org/aspectj/weaver/bcel/LazyMethodGen$LVPosition/LVPosition(org.aspectj.weaver.bcel.LazyMethodGen$1)
org/aspectj/weaver/bcel/LazyMethodGen/packBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/bcel/LazyMethodGen/packBody(org.aspectj.apache.bcel.generic.MethodGen)#org/aspectj/weaver/bcel/BcelObjectType/getResolvedTypeX()
org/aspectj/weaver/bcel/LazyMethodGen/packBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/bcel/LazyMethodGen/packBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/Set/iterator()
org/aspectj/weaver/bcel/LazyMethodGen/packBody(org.aspectj.apache.bcel.generic.MethodGen)#org/aspectj/weaver/ReferenceType/getWorld()
org/aspectj/weaver/bcel/LazyMethodGen/packBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/LazyMethodGen/packBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/Map/size()
org/aspectj/weaver/bcel/LazyMethodGen/packBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/Iterator/next()
org/aspectj/weaver/bcel/LazyMethodGen/packBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/HashMap/HashMap()
org/aspectj/weaver/bcel/LazyMethodGen/packBody(org.aspectj.apache.bcel.generic.MethodGen)#java/util/LinkedList/LinkedList()
org/aspectj/weaver/bcel/LazyMethodGen/addLocalVariables(org.aspectj.apache.bcel.generic.MethodGen,java.util.Map)#java/lang/Integer/Integer(int)
org/aspectj/weaver/bcel/LazyMethodGen/addLocalVariables(org.aspectj.apache.bcel.generic.MethodGen,java.util.Map)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/bcel/LazyMethodGen/addLocalVariables(org.aspectj.apache.bcel.generic.MethodGen,java.util.Map)#java/util/Set/contains(java.lang.Object)
org/aspectj/weaver/bcel/LazyMethodGen/addLocalVariables(org.aspectj.apache.bcel.generic.MethodGen,java.util.Map)#java/util/Set/iterator()
org/aspectj/weaver/bcel/LazyMethodGen/addLocalVariables(org.aspectj.apache.bcel.generic.MethodGen,java.util.Map)#java/util/HashSet/HashSet()
org/aspectj/weaver/bcel/LazyMethodGen/addLocalVariables(org.aspectj.apache.bcel.generic.MethodGen,java.util.Map)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/bcel/LazyMethodGen/addLocalVariables(org.aspectj.apache.bcel.generic.MethodGen,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/bcel/LazyMethodGen/addLocalVariables(org.aspectj.apache.bcel.generic.MethodGen,java.util.Map)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/LazyMethodGen/addLocalVariables(org.aspectj.apache.bcel.generic.MethodGen,java.util.Map)#java/util/Iterator/next()
org/aspectj/weaver/bcel/LazyMethodGen/addLocalVariables(org.aspectj.apache.bcel.generic.MethodGen,java.util.Map)#java/util/HashMap/HashMap()
org/aspectj/weaver/bcel/LazyMethodGen/addLocalVariables(org.aspectj.apache.bcel.generic.MethodGen,java.util.Map)#java/util/Map/keySet()
org/aspectj/weaver/bcel/LazyMethodGen/addLocalVariables(org.aspectj.apache.bcel.generic.MethodGen,java.util.Map)#org/aspectj/apache/bcel/generic/MethodGen/isStatic()
org/aspectj/weaver/bcel/LazyMethodGen/addLocalVariables(org.aspectj.apache.bcel.generic.MethodGen,java.util.Map)#java/lang/Integer/valueOf(int)
org/aspectj/weaver/bcel/LazyMethodGen/pack()#org/aspectj/apache/bcel/generic/MethodGen/getConstantPool()
org/aspectj/weaver/bcel/LazyMethodGen/pack()#org/aspectj/apache/bcel/generic/MethodGen/addAnnotation(org.aspectj.apache.bcel.classfile.annotation.AnnotationGen)
org/aspectj/weaver/bcel/LazyMethodGen/pack()#org/aspectj/apache/bcel/generic/MethodGen/getModifiers()
org/aspectj/weaver/bcel/LazyMethodGen/pack()#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/LazyMethodGen/pack()#java/util/Iterator/next()
org/aspectj/weaver/bcel/LazyMethodGen/pack()#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/LazyMethodGen/pack()#org/aspectj/apache/bcel/generic/MethodGen/addAttribute(org.aspectj.apache.bcel.classfile.Attribute)
org/aspectj/weaver/bcel/LazyMethodGen/pack()#java/util/List/iterator()
org/aspectj/weaver/bcel/LazyMethodGen/pack()#org/aspectj/apache/bcel/generic/MethodGen/setModifiers(int)
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/util/Iterator/hasNext()
org/aspectj/weaver/World/TypeMap/demote(boolean)#org/aspectj/weaver/World$TypeMap/insertInExpendableMap(java.lang.String,org.aspectj.weaver.ResolvedType)
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/lang/StringBuilder/append(int)
org/aspectj/weaver/World/TypeMap/demote(boolean)#org/aspectj/weaver/ResolvedType/isPrimitiveType()
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/util/List/size()
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/util/List/clear()
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/util/Set/size()
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/util/List/removeAll(java.util.Collection)
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/util/Iterator/next()
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/util/Map/keySet()
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/World/TypeMap/demote(boolean)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/util/List/contains(java.lang.Object)
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/util/List/iterator()
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/util/List/remove(java.lang.Object)
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/util/Map/remove(java.lang.Object)
org/aspectj/weaver/World/TypeMap/demote(boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/World/TypeMap/put(java.lang.String,org.aspectj.weaver.ResolvedType)#java/lang/ref/SoftReference/SoftReference(java.lang.Object,java.lang.ref.ReferenceQueue)
org/aspectj/weaver/World/TypeMap/put(java.lang.String,org.aspectj.weaver.ResolvedType)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/World/TypeMap/put(java.lang.String,org.aspectj.weaver.ResolvedType)#java/util/Map/size()
org/aspectj/weaver/World/TypeMap/put(java.lang.String,org.aspectj.weaver.ResolvedType)#java/lang/ref/SoftReference/SoftReference(java.lang.Object)
org/aspectj/weaver/World/TypeMap/put(java.lang.String,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/World/TypeMap/put(java.lang.String,org.aspectj.weaver.ResolvedType)#java/lang/ref/WeakReference/WeakReference(java.lang.Object,java.lang.ref.ReferenceQueue)
org/aspectj/weaver/World/TypeMap/put(java.lang.String,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/isTypeVariableReference()
org/aspectj/weaver/World/TypeMap/put(java.lang.String,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/World/TypeMap/put(java.lang.String,org.aspectj.weaver.ResolvedType)#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/World/TypeMap/put(java.lang.String,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/World/TypeMap/put(java.lang.String,org.aspectj.weaver.ResolvedType)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/World/TypeMap/put(java.lang.String,org.aspectj.weaver.ResolvedType)#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
org/aspectj/weaver/World/TypeMap/put(java.lang.String,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/toString()
org/aspectj/weaver/World/TypeMap/put(java.lang.String,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/isParameterizedType()
org/aspectj/asm/internal/RelationshipMap/put(java.lang.String,org.aspectj.asm.IRelationship)#java/util/ArrayList/ArrayList()
org/aspectj/asm/internal/RelationshipMap/put(java.lang.String,org.aspectj.asm.IRelationship)#java/util/Iterator/hasNext()
org/aspectj/asm/internal/RelationshipMap/put(java.lang.String,org.aspectj.asm.IRelationship)#java/io/PrintStream/println(java.lang.String)
org/aspectj/asm/internal/RelationshipMap/put(java.lang.String,org.aspectj.asm.IRelationship)#java/util/List/addAll(java.util.Collection)
org/aspectj/asm/internal/RelationshipMap/put(java.lang.String,org.aspectj.asm.IRelationship)#java/lang/String/equals(java.lang.Object)
org/aspectj/asm/internal/RelationshipMap/put(java.lang.String,org.aspectj.asm.IRelationship)#java/util/List/add(java.lang.Object)
org/aspectj/asm/internal/RelationshipMap/put(java.lang.String,org.aspectj.asm.IRelationship)#java/util/List/iterator()
org/aspectj/asm/internal/RelationshipMap/put(java.lang.String,org.aspectj.asm.IRelationship)#java/util/HashMap/get(java.lang.Object)
org/aspectj/asm/internal/RelationshipMap/put(java.lang.String,org.aspectj.asm.IRelationship)#java/util/Iterator/next()
org/aspectj/asm/internal/RelationshipMap/put(java.lang.String,org.aspectj.asm.IRelationship)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerAspects(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerAspects(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerAspects(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerAspects(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/error(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerAspects(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/util/Iterator/hasNext()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerAspects(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/info(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerAspects(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/util/Iterator/next()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerAspects(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerAspects(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/util/List/iterator()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerAspects(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerAspects(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/warn(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerAspects(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/lang/StringBuilder/toString()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/lang/Object/equals(java.lang.Object)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/info(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/debug(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/net/URL/getFile()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/io/File/File(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/util/Set/contains(java.lang.Object)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/util/List/clear()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/util/StringTokenizer/nextToken()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/lang/System/getProperty(java.lang.String,java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/util/List/isEmpty()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/net/URL/URL(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/io/File/exists()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/io/File/toURL()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/lang/ClassLoader/getSystemClassLoader()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/util/Enumeration/hasMoreElements()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/error(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/util/HashSet/HashSet()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/util/StringTokenizer/hasMoreTokens()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/util/Enumeration/nextElement()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/warn(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/warn(java.lang.String,java.lang.Throwable)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/parseDefinitions(java.lang.ClassLoader)#java/lang/StringBuilder/toString()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/debug(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/Integer/valueOf(int)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/Object/getClass()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/warn(java.lang.String,java.lang.Throwable)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/StringBuilder/toString()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/reflect/InvocationTargetException/getTargetException()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/Integer/Integer(int)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/reflect/Method/setAccessible(boolean)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/accept(java.lang.String,byte[])#org/aspectj/weaver/bcel/BcelWorld/demote()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/accept(java.lang.String,byte[])#java/util/Iterator/hasNext()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/accept(java.lang.String,byte[])#org/aspectj/weaver/bcel/BcelObjectType/getResolvedTypeX()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/accept(java.lang.String,byte[])#org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/ensureDelegateInitialized(java.lang.String,byte[])
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/accept(java.lang.String,byte[])#java/util/List/isEmpty()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/accept(java.lang.String,byte[])#java/util/List/size()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/accept(java.lang.String,byte[])#java/util/Iterator/next()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/accept(java.lang.String,byte[])#java/lang/String/indexOf(java.lang.String,int)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/accept(java.lang.String,byte[])#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/accept(java.lang.String,byte[])#java/lang/String/lastIndexOf(int)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/accept(java.lang.String,byte[])#java/lang/String/replace(char,char)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/accept(java.lang.String,byte[])#java/util/List/iterator()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/accept(java.lang.String,byte[])#java/lang/String/endsWith(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/accept(java.lang.String,byte[])#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/accept(java.lang.String,byte[])#java/util/List/get(int)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/debug(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/Object/getClass()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/warn(java.lang.String,java.lang.Throwable)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/StringBuilder/toString()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/reflect/InvocationTargetException/getTargetException()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/Integer/Integer(int)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/reflect/Method/setAccessible(boolean)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#org/aspectj/weaver/bcel/BcelWorld/getLint()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/util/Iterator/hasNext()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/lang/String/length()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/setMessageHandler(org.aspectj.bridge.IMessageHandler)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#org/aspectj/weaver/Lint$Kind/setKind(org.aspectj.bridge.IMessage$Kind)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/lang/StringBuffer/append(char)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/util/Iterator/next()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/getMessageHandler()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/util/Properties/Properties()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/lang/StringBuffer/toString()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/io/InputStream/close()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/lang/ClassLoader/getResourceAsStream(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#org/aspectj/weaver/bcel/BcelWorld/setAllLintIgnored()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/util/Properties/load(java.io.InputStream)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/util/List/iterator()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/warn(java.lang.String,java.lang.Throwable)
org/aspectj/weaver/loadtime/ClassLoaderWeavingAdaptor/registerOptions(org.aspectj.weaver.bcel.BcelWeaver,java.lang.ClassLoader,java.util.List)#java/lang/StringBuilder/toString()
org/aspectj/weaver/ResolvedType/2/get(org.aspectj.weaver.ResolvedType)#java/util/Iterator/hasNext()
org/aspectj/weaver/ResolvedType/2/get(org.aspectj.weaver.ResolvedType)#java/util/Iterator/next()
org/aspectj/weaver/ResolvedType/2/get(org.aspectj.weaver.ResolvedType)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/ResolvedType/2/get(org.aspectj.weaver.ResolvedType)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/ResolvedType/2/get(org.aspectj.weaver.ResolvedType)#java/lang/Integer/valueOf(int)
org/aspectj/weaver/ResolvedType/2/get(org.aspectj.weaver.ResolvedType)#java/util/List/contains(java.lang.Object)
org/aspectj/weaver/ResolvedType/2/get(org.aspectj.weaver.ResolvedType)#java/util/List/iterator()
org/aspectj/weaver/ResolvedType/2/get(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/isParameterizedOrGenericType()
org/aspectj/weaver/ResolvedType/2/get(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getSignature()
org/aspectj/weaver/ResolvedType/2/get(org.aspectj.weaver.ResolvedType)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/ResolvedType/2/get(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/Iterators$ResolvedTypeArrayIterator/ResolvedTypeArrayIterator(org.aspectj.weaver.ResolvedType[],java.util.List,boolean)
org/aspectj/weaver/ResolvedType/2/get(org.aspectj.weaver.ResolvedType)#java/util/List/size()
org/aspectj/weaver/ReferenceType/getDeclaredInterfaces()#org/aspectj/weaver/ReferenceType/isParameterizedType()
org/aspectj/weaver/ReferenceType/getDeclaredInterfaces()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/weaver/ReferenceType/getDeclaredInterfaces()#java/lang/ref/WeakReference/get()
org/aspectj/weaver/ReferenceType/getDeclaredInterfaces()#org/aspectj/weaver/ReferenceType/getMemberParameterizationMap()
org/aspectj/weaver/ReferenceType/getDeclaredInterfaces()#org/aspectj/weaver/ReferenceType/isRawType()
org/aspectj/weaver/ReferenceType/getDeclaredInterfaces()#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
org/aspectj/weaver/ReferenceType/getDeclaredInterfaces()#org/aspectj/weaver/ReferenceType/getName()
org/aspectj/weaver/ReferenceType/getDeclaredInterfaces()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/aspectj/weaver/ReferenceType/getDeclaredInterfaces()#org/aspectj/weaver/ResolvedType/isGenericType()
org/aspectj/weaver/ReferenceType/getDeclaredInterfaces()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/ReferenceType/getDeclaredInterfaces()#org/aspectj/weaver/ResolvedType/resolve(org.aspectj.weaver.World)
org/aspectj/weaver/ReferenceType/getDeclaredInterfaces()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/ReferenceType/getDeclaredInterfaces()#org/aspectj/weaver/ReferenceType/getWorld()
org/aspectj/weaver/ReferenceType/getDeclaredInterfaces()#org/aspectj/weaver/ResolvedType/isParameterizedType()
org/aspectj/weaver/ReferenceType/getDeclaredInterfaces()#java/lang/StringBuilder/toString()
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ReferenceType/isTypeVariableReference()
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ReferenceType/getResolvedTypeParameters()
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ReferenceType/isRawType()
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#java/util/Set/contains(java.lang.Object)
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedType/isTypeVariableReference()
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ReferenceType/isParameterizedType()
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedType/getSignature()
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ReferenceType/equals(java.lang.Object)
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ReferenceType/getRawType()
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedType/isPrimitiveType()
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedType/getTypeParameters()
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedType/isParameterizedOrRawType()
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedType/isGenericWildcard()
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedType/isParameterizedType()
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ReferenceType/getSignature()
org/aspectj/weaver/ReferenceType/isAssignableFrom(org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedType/isParameterizedOrGenericType()
org/aspectj/weaver/ReferenceType/addParent(org.aspectj.weaver.ResolvedType)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/weaver/ReferenceType/addParent(org.aspectj.weaver.ResolvedType)#java/util/Iterator/next()
org/aspectj/weaver/ReferenceType/addParent(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ReferenceType/isRawType()
org/aspectj/weaver/ReferenceType/addParent(org.aspectj.weaver.ResolvedType)#java/lang/ref/WeakReference/WeakReference(java.lang.Object)
org/aspectj/weaver/ReferenceType/addParent(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ReferenceType/getName()
org/aspectj/weaver/ReferenceType/addParent(org.aspectj.weaver.ResolvedType)#java/lang/ref/WeakReference/clear()
org/aspectj/weaver/ReferenceType/addParent(org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/toString()
org/aspectj/weaver/ReferenceType/addParent(org.aspectj.weaver.ResolvedType)#java/util/Iterator/hasNext()
org/aspectj/weaver/ReferenceType/addParent(org.aspectj.weaver.ResolvedType)#java/lang/ref/WeakReference/get()
org/aspectj/weaver/ReferenceType/addParent(org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/ReferenceType/addParent(org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/ReferenceType/addParent(org.aspectj.weaver.ResolvedType)#java/util/List/iterator()
org/aspectj/weaver/ReferenceType/addParent(org.aspectj.weaver.ResolvedType)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/aspectj/weaver/ReferenceType/makeDeclaredSignature(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.UnresolvedType[])#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/weaver/ReferenceType/makeDeclaredSignature(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.UnresolvedType[])#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/ReferenceType/makeDeclaredSignature(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.UnresolvedType[])#java/lang/String/length()
org/aspectj/weaver/ReferenceType/makeDeclaredSignature(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.UnresolvedType[])#java/lang/String/substring(int,int)
org/aspectj/weaver/ReferenceType/makeDeclaredSignature(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.UnresolvedType[])#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/ReferenceType/makeDeclaredSignature(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.UnresolvedType[])#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/ReferenceType/makeDeclaredSignature(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.UnresolvedType[])#java/lang/StringBuilder/toString()
org/aspectj/weaver/ReferenceType/makeDeclaredSignature(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.UnresolvedType[])#org/aspectj/weaver/ResolvedType$Primitive/getSignatureForAttribute()
org/aspectj/weaver/ReferenceType/makeDeclaredSignature(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.UnresolvedType[])#java/lang/Class/getName()
org/aspectj/weaver/ReferenceType/makeDeclaredSignature(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.UnresolvedType[])#java/lang/StringBuffer/toString()
org/aspectj/weaver/ReferenceType/makeDeclaredSignature(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.UnresolvedType[])#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/ReferenceType/makeDeclaredSignature(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.UnresolvedType[])#java/lang/Object/getClass()
org/aspectj/weaver/ReferenceType/makeDeclaredSignature(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.UnresolvedType[])#org/aspectj/weaver/ResolvedType/getErasureSignature()
org/aspectj/weaver/ReferenceType/makeDeclaredSignature(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.UnresolvedType[])#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/ReferenceType/checkDuplicates(org.aspectj.weaver.ReferenceType)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/ReferenceType/checkDuplicates(org.aspectj.weaver.ReferenceType)#java/util/Iterator/next()
org/aspectj/weaver/ReferenceType/checkDuplicates(org.aspectj.weaver.ReferenceType)#org/aspectj/weaver/ReferenceType/getTypeParameters()
org/aspectj/weaver/ReferenceType/checkDuplicates(org.aspectj.weaver.ReferenceType)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/ReferenceType/checkDuplicates(org.aspectj.weaver.ReferenceType)#java/util/List/iterator()
org/aspectj/weaver/ReferenceType/checkDuplicates(org.aspectj.weaver.ReferenceType)#org/aspectj/weaver/ReferenceType/getTypekind()
org/aspectj/weaver/ReferenceType/checkDuplicates(org.aspectj.weaver.ReferenceType)#java/util/Iterator/hasNext()
org/aspectj/weaver/ReferenceType/checkDuplicates(org.aspectj.weaver.ReferenceType)#java/lang/ref/WeakReference/get()
org/aspectj/weaver/ReferenceType/checkDuplicates(org.aspectj.weaver.ReferenceType)#java/lang/IllegalStateException/IllegalStateException()
org/aspectj/weaver/ReferenceType/checkDuplicates(org.aspectj.weaver.ReferenceType)#java/util/List/removeAll(java.util.Collection)
org/aspectj/asm/AsmManager/dumptree(org.aspectj.asm.IProgramElement,int)#java/util/Iterator/next()
org/aspectj/asm/AsmManager/dumptree(org.aspectj.asm.IProgramElement,int)#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/AsmManager/dumptree(org.aspectj.asm.IProgramElement,int)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/asm/AsmManager/dumptree(org.aspectj.asm.IProgramElement,int)#java/util/List/iterator()
org/aspectj/asm/AsmManager/dumptree(org.aspectj.asm.IProgramElement,int)#java/lang/StringBuilder/toString()
org/aspectj/asm/AsmManager/dumptree(org.aspectj.asm.IProgramElement,int)#java/lang/Object/toString()
org/aspectj/asm/AsmManager/dumptree(org.aspectj.asm.IProgramElement,int)#org/aspectj/asm/IProgramElement$Kind/toString()
org/aspectj/asm/AsmManager/dumptree(org.aspectj.asm.IProgramElement,int)#java/util/Iterator/hasNext()
org/aspectj/asm/AsmManager/dumptree(org.aspectj.asm.IProgramElement,int)#java/io/PrintStream/print(java.lang.String)
org/aspectj/asm/AsmManager/dumptree(org.aspectj.asm.IProgramElement,int)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/AsmManager/dumptree(org.aspectj.asm.IProgramElement,int)#java/io/PrintStream/println(java.lang.String)
org/aspectj/asm/AsmManager/removeSingleNode(org.aspectj.asm.IProgramElement)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/asm/AsmManager/removeSingleNode(org.aspectj.asm.IProgramElement)#java/lang/Object/equals(java.lang.Object)
org/aspectj/asm/AsmManager/removeSingleNode(org.aspectj.asm.IProgramElement)#java/util/List/remove(int)
org/aspectj/asm/AsmManager/removeSingleNode(org.aspectj.asm.IProgramElement)#java/util/List/size()
org/aspectj/asm/AsmManager/removeSingleNode(org.aspectj.asm.IProgramElement)#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/AsmManager/removeSingleNode(org.aspectj.asm.IProgramElement)#java/util/List/get(int)
org/aspectj/asm/AsmManager/removeSingleNode(org.aspectj.asm.IProgramElement)#java/lang/StringBuilder/toString()
org/aspectj/asm/AsmManager/removeSingleNode(org.aspectj.asm.IProgramElement)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/AsmManager/removeSingleNode(org.aspectj.asm.IProgramElement)#java/io/PrintStream/println(java.lang.String)
org/aspectj/asm/AsmManager/sameType(java.lang.String,org.aspectj.asm.IProgramElement,org.aspectj.asm.IProgramElement)#java/lang/Object/equals(java.lang.Object)
org/aspectj/asm/AsmManager/sameType(java.lang.String,org.aspectj.asm.IProgramElement,org.aspectj.asm.IProgramElement)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/AsmManager/sameType(java.lang.String,org.aspectj.asm.IProgramElement,org.aspectj.asm.IProgramElement)#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/AsmManager/sameType(java.lang.String,org.aspectj.asm.IProgramElement,org.aspectj.asm.IProgramElement)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/asm/AsmManager/sameType(java.lang.String,org.aspectj.asm.IProgramElement,org.aspectj.asm.IProgramElement)#org/aspectj/asm/IProgramElement$Kind/isFile()
org/aspectj/asm/AsmManager/sameType(java.lang.String,org.aspectj.asm.IProgramElement,org.aspectj.asm.IProgramElement)#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/aspectj/asm/AsmManager/sameType(java.lang.String,org.aspectj.asm.IProgramElement,org.aspectj.asm.IProgramElement)#org/aspectj/asm/IProgramElement$Kind/isSourceFile()
org/aspectj/asm/AsmManager/sameType(java.lang.String,org.aspectj.asm.IProgramElement,org.aspectj.asm.IProgramElement)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/asm/AsmManager/sameType(java.lang.String,org.aspectj.asm.IProgramElement,org.aspectj.asm.IProgramElement)#org/aspectj/asm/IProgramElement$Kind/isType()
org/aspectj/asm/AsmManager/sameType(java.lang.String,org.aspectj.asm.IProgramElement,org.aspectj.asm.IProgramElement)#java/lang/StringBuilder/toString()
org/aspectj/asm/AsmManager/sameType(java.lang.String,org.aspectj.asm.IProgramElement,org.aspectj.asm.IProgramElement)#java/io/File/equals(java.lang.Object)
org/aspectj/asm/AsmManager/dumptree(java.io.Writer,org.aspectj.asm.IProgramElement,int)#java/util/Iterator/hasNext()
org/aspectj/asm/AsmManager/dumptree(java.io.Writer,org.aspectj.asm.IProgramElement,int)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/AsmManager/dumptree(java.io.Writer,org.aspectj.asm.IProgramElement,int)#java/util/Iterator/next()
org/aspectj/asm/AsmManager/dumptree(java.io.Writer,org.aspectj.asm.IProgramElement,int)#java/util/List/iterator()
org/aspectj/asm/AsmManager/dumptree(java.io.Writer,org.aspectj.asm.IProgramElement,int)#java/lang/StringBuilder/toString()
org/aspectj/asm/AsmManager/dumptree(java.io.Writer,org.aspectj.asm.IProgramElement,int)#java/lang/Object/toString()
org/aspectj/asm/AsmManager/dumptree(java.io.Writer,org.aspectj.asm.IProgramElement,int)#org/aspectj/asm/IProgramElement$Kind/toString()
org/aspectj/asm/AsmManager/dumptree(java.io.Writer,org.aspectj.asm.IProgramElement,int)#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/AsmManager/dumptree(java.io.Writer,org.aspectj.asm.IProgramElement,int)#java/io/Writer/write(java.lang.String)
org/aspectj/asm/AsmManager/dumptree(java.io.Writer,org.aspectj.asm.IProgramElement,int)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/util/ArrayList/ArrayList()
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/util/Set/iterator()
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/util/List/get(int)
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/util/List/iterator()
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/util/Set/add(java.lang.Object)
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/util/List/remove(java.lang.Object)
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/lang/Object/equals(java.lang.Object)
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/util/Iterator/hasNext()
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/io/PrintStream/println(java.lang.String)
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/util/List/size()
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/util/Iterator/next()
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/util/HashMap/HashMap()
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/lang/String/substring(int,int)
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/lang/String/lastIndexOf(int)
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/lang/String/substring(int)
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/util/List/clear()
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/util/List/add(java.lang.Object)
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/util/Set/clear()
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/util/HashSet/HashSet()
org/aspectj/asm/AsmManager/removeRelationshipsTargettingThisType(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/asm/AsmManager/readStructureModel(java.lang.String)#java/io/EOFException/printStackTrace()
org/aspectj/asm/AsmManager/readStructureModel(java.lang.String)#java/io/ObjectInputStream/ObjectInputStream(java.io.InputStream)
org/aspectj/asm/AsmManager/readStructureModel(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/asm/AsmManager/readStructureModel(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/AsmManager/readStructureModel(java.lang.String)#java/io/PrintStream/println(java.lang.String)
org/aspectj/asm/AsmManager/readStructureModel(java.lang.String)#java/io/FileInputStream/FileInputStream(java.lang.String)
org/aspectj/asm/AsmManager/readStructureModel(java.lang.String)#java/io/ObjectInputStream/readObject()
org/aspectj/asm/AsmManager/readStructureModel(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/AsmManager/readStructureModel(java.lang.String)#java/io/ObjectInputStream/close()
org/aspectj/asm/AsmManager/removeStructureModelForFiles(java.io.Writer,java.util.Collection)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/AsmManager/removeStructureModelForFiles(java.io.Writer,java.util.Collection)#java/util/Iterator/next()
org/aspectj/asm/AsmManager/removeStructureModelForFiles(java.io.Writer,java.util.Collection)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/asm/AsmManager/removeStructureModelForFiles(java.io.Writer,java.util.Collection)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/asm/AsmManager/removeStructureModelForFiles(java.io.Writer,java.util.Collection)#java/util/HashSet/HashSet()
org/aspectj/asm/AsmManager/removeStructureModelForFiles(java.io.Writer,java.util.Collection)#java/util/Set/add(java.lang.Object)
org/aspectj/asm/AsmManager/removeStructureModelForFiles(java.io.Writer,java.util.Collection)#java/lang/StringBuilder/toString()
org/aspectj/asm/AsmManager/removeStructureModelForFiles(java.io.Writer,java.util.Collection)#java/util/Iterator/hasNext()
org/aspectj/asm/AsmManager/removeStructureModelForFiles(java.io.Writer,java.util.Collection)#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/AsmManager/removeStructureModelForFiles(java.io.Writer,java.util.Collection)#java/io/Writer/write(java.lang.String)
org/aspectj/asm/AsmManager/removeStructureModelForFiles(java.io.Writer,java.util.Collection)#java/util/Collection/iterator()
org/aspectj/asm/AsmManager/dumprelsStderr(java.lang.String)#java/util/Iterator/hasNext()
org/aspectj/asm/AsmManager/dumprelsStderr(java.lang.String)#java/lang/StringBuilder/append(int)
org/aspectj/asm/AsmManager/dumprelsStderr(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/AsmManager/dumprelsStderr(java.lang.String)#java/util/Set/iterator()
org/aspectj/asm/AsmManager/dumprelsStderr(java.lang.String)#java/util/List/iterator()
org/aspectj/asm/AsmManager/dumprelsStderr(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/asm/AsmManager/dumprelsStderr(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/AsmManager/dumprelsStderr(java.lang.String)#java/io/PrintStream/println(java.lang.String)
org/aspectj/asm/AsmManager/dumprelsStderr(java.lang.String)#java/util/List/size()
org/aspectj/asm/AsmManager/dumprelsStderr(java.lang.String)#java/util/Iterator/next()
org/aspectj/asm/AsmManager/getTypeNameFromHandle(java.lang.String,java.util.Map)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/asm/AsmManager/getTypeNameFromHandle(java.lang.String,java.util.Map)#java/lang/StringBuffer/append(char)
org/aspectj/asm/AsmManager/getTypeNameFromHandle(java.lang.String,java.util.Map)#java/util/Map/get(java.lang.Object)
org/aspectj/asm/AsmManager/getTypeNameFromHandle(java.lang.String,java.util.Map)#java/lang/StringBuffer/toString()
org/aspectj/asm/AsmManager/getTypeNameFromHandle(java.lang.String,java.util.Map)#java/lang/String/substring(int,int)
org/aspectj/asm/AsmManager/getTypeNameFromHandle(java.lang.String,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/AsmManager/getTypeNameFromHandle(java.lang.String,java.util.Map)#java/lang/String/substring(int)
org/aspectj/asm/AsmManager/getTypeNameFromHandle(java.lang.String,java.util.Map)#java/lang/StringIndexOutOfBoundsException/printStackTrace(java.io.PrintStream)
org/aspectj/asm/AsmManager/getTypeNameFromHandle(java.lang.String,java.util.Map)#java/lang/StringBuilder/toString()
org/aspectj/asm/AsmManager/getTypeNameFromHandle(java.lang.String,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/AsmManager/getTypeNameFromHandle(java.lang.String,java.util.Map)#java/io/PrintStream/println(java.lang.String)
org/aspectj/asm/AsmManager/getTypeNameFromHandle(java.lang.String,java.util.Map)#java/lang/String/indexOf(int,int)
org/aspectj/asm/AsmManager/getTypeNameFromHandle(java.lang.String,java.util.Map)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/asm/AsmManager/getTypeNameFromHandle(java.lang.String,java.util.Map)#java/lang/String/indexOf(int)
org/aspectj/asm/AsmManager/getTypeNameFromHandle(java.lang.String,java.util.Map)#java/lang/StringBuffer/StringBuffer()
org/aspectj/asm/AsmManager/getInlineAnnotations(java.lang.String,boolean,boolean)#java/util/ArrayList/iterator()
org/aspectj/asm/AsmManager/getInlineAnnotations(java.lang.String,boolean,boolean)#java/util/ArrayList/ArrayList()
org/aspectj/asm/AsmManager/getInlineAnnotations(java.lang.String,boolean,boolean)#java/lang/Integer/Integer(int)
org/aspectj/asm/AsmManager/getInlineAnnotations(java.lang.String,boolean,boolean)#java/util/List/addAll(java.util.Collection)
org/aspectj/asm/AsmManager/getInlineAnnotations(java.lang.String,boolean,boolean)#java/util/List/add(java.lang.Object)
org/aspectj/asm/AsmManager/getInlineAnnotations(java.lang.String,boolean,boolean)#java/util/HashMap/get(java.lang.Object)
org/aspectj/asm/AsmManager/getInlineAnnotations(java.lang.String,boolean,boolean)#java/util/Iterator/hasNext()
org/aspectj/asm/AsmManager/getInlineAnnotations(java.lang.String,boolean,boolean)#java/util/Iterator/next()
org/aspectj/asm/AsmManager/getInlineAnnotations(java.lang.String,boolean,boolean)#java/util/HashMap/HashMap()
org/aspectj/asm/AsmManager/getInlineAnnotations(java.lang.String,boolean,boolean)#java/util/HashMap/put(java.lang.Object,java.lang.Object)
org/aspectj/asm/AsmManager/reportModelInfo(java.lang.String)#java/io/BufferedWriter/BufferedWriter(java.io.Writer)
org/aspectj/asm/AsmManager/reportModelInfo(java.lang.String)#java/util/Properties/keys()
org/aspectj/asm/AsmManager/reportModelInfo(java.lang.String)#java/io/FileWriter/close()
org/aspectj/asm/AsmManager/reportModelInfo(java.lang.String)#java/io/BufferedWriter/write(java.lang.String)
org/aspectj/asm/AsmManager/reportModelInfo(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/AsmManager/reportModelInfo(java.lang.String)#java/util/Enumeration/hasMoreElements()
org/aspectj/asm/AsmManager/reportModelInfo(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/asm/AsmManager/reportModelInfo(java.lang.String)#java/io/IOException/printStackTrace()
org/aspectj/asm/AsmManager/reportModelInfo(java.lang.String)#java/util/Properties/getProperty(java.lang.String)
org/aspectj/asm/AsmManager/reportModelInfo(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/AsmManager/reportModelInfo(java.lang.String)#java/io/PrintStream/println(java.lang.String)
org/aspectj/asm/AsmManager/reportModelInfo(java.lang.String)#org/aspectj/asm/AsmManager$ModelInfo/getProperties()
org/aspectj/asm/AsmManager/reportModelInfo(java.lang.String)#java/io/FileWriter/FileWriter(java.lang.String,boolean)
org/aspectj/asm/AsmManager/reportModelInfo(java.lang.String)#java/util/Enumeration/nextElement()
org/aspectj/asm/AsmManager/reportModelInfo(java.lang.String)#java/io/BufferedWriter/flush()
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/util/ArrayList/ArrayList()
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/util/Iterator/hasNext()
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/util/Set/iterator()
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/util/List/iterator()
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/util/Set/add(java.lang.Object)
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/util/List/remove(java.lang.Object)
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/lang/Object/equals(java.lang.Object)
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/io/IOException/printStackTrace()
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/io/PrintStream/println(java.lang.String)
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/util/List/size()
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/util/Iterator/next()
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/util/Set/contains(java.lang.Object)
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/io/Writer/write(java.lang.String)
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/util/List/add(java.lang.Object)
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/util/List/get(int)
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/util/HashSet/HashSet()
org/aspectj/asm/AsmManager/repairRelationships(java.io.Writer)#java/lang/StringBuilder/toString()
org/aspectj/asm/AsmManager/dumprels(java.io.Writer)#java/util/Iterator/hasNext()
org/aspectj/asm/AsmManager/dumprels(java.io.Writer)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/AsmManager/dumprels(java.io.Writer)#java/lang/StringBuilder/append(int)
org/aspectj/asm/AsmManager/dumprels(java.io.Writer)#java/lang/StringBuffer/toString()
org/aspectj/asm/AsmManager/dumprels(java.io.Writer)#java/util/Set/iterator()
org/aspectj/asm/AsmManager/dumprels(java.io.Writer)#java/lang/StringBuffer/StringBuffer()
org/aspectj/asm/AsmManager/dumprels(java.io.Writer)#java/lang/StringBuilder/toString()
org/aspectj/asm/AsmManager/dumprels(java.io.Writer)#java/util/List/size()
org/aspectj/asm/AsmManager/dumprels(java.io.Writer)#java/util/Iterator/next()
org/aspectj/asm/AsmManager/dumprels(java.io.Writer)#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/AsmManager/dumprels(java.io.Writer)#java/io/Writer/write(java.lang.String)
org/aspectj/asm/AsmManager/dumprels(java.io.Writer)#java/util/List/iterator()
org/aspectj/asm/AsmManager/dumprels(java.io.Writer)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/asm/AsmManager/processDelta(java.util.Collection,java.util.Set,java.util.Set)#java/io/IOException/printStackTrace()
org/aspectj/asm/AsmManager/processDelta(java.util.Collection,java.util.Set,java.util.Set)#java/io/BufferedWriter/BufferedWriter(java.io.Writer)
org/aspectj/asm/AsmManager/processDelta(java.util.Collection,java.util.Set,java.util.Set)#java/lang/StringBuilder/append(int)
org/aspectj/asm/AsmManager/processDelta(java.util.Collection,java.util.Set,java.util.Set)#java/util/Collection/size()
org/aspectj/asm/AsmManager/processDelta(java.util.Collection,java.util.Set,java.util.Set)#java/lang/StringBuilder/append(long)
org/aspectj/asm/AsmManager/processDelta(java.util.Collection,java.util.Set,java.util.Set)#java/io/Writer/close()
org/aspectj/asm/AsmManager/processDelta(java.util.Collection,java.util.Set,java.util.Set)#java/io/FileWriter/FileWriter(java.lang.String,boolean)
org/aspectj/asm/AsmManager/processDelta(java.util.Collection,java.util.Set,java.util.Set)#java/io/Writer/flush()
org/aspectj/asm/AsmManager/processDelta(java.util.Collection,java.util.Set,java.util.Set)#java/lang/StringBuilder/toString()
org/aspectj/asm/AsmManager/processDelta(java.util.Collection,java.util.Set,java.util.Set)#java/util/Set/size()
org/aspectj/asm/AsmManager/processDelta(java.util.Collection,java.util.Set,java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/AsmManager/processDelta(java.util.Collection,java.util.Set,java.util.Set)#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/AsmManager/processDelta(java.util.Collection,java.util.Set,java.util.Set)#java/io/Writer/write(java.lang.String)
org/aspectj/asm/AsmManager/processDelta(java.util.Collection,java.util.Set,java.util.Set)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/asm/AsmManager/processDelta(java.util.Collection,java.util.Set,java.util.Set)#java/lang/System/currentTimeMillis()
org/aspectj/weaver/loadtime/Aj/removeStaleAdaptors(boolean)#java/util/Iterator/hasNext()
org/aspectj/weaver/loadtime/Aj/removeStaleAdaptors(boolean)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/loadtime/Aj/removeStaleAdaptors(boolean)#java/lang/StringBuilder/append(boolean)
org/aspectj/weaver/loadtime/Aj/removeStaleAdaptors(boolean)#java/util/Set/iterator()
org/aspectj/weaver/loadtime/Aj/removeStaleAdaptors(boolean)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/weaver/loadtime/Aj/removeStaleAdaptors(boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/loadtime/Aj/removeStaleAdaptors(boolean)#java/util/Map/remove(java.lang.Object)
org/aspectj/weaver/loadtime/Aj/removeStaleAdaptors(boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/loadtime/Aj/removeStaleAdaptors(boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/loadtime/Aj/removeStaleAdaptors(boolean)#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/loadtime/Aj/removeStaleAdaptors(boolean)#java/util/Iterator/next()
org/aspectj/weaver/loadtime/Aj/removeStaleAdaptors(boolean)#java/util/Map/keySet()
org/aspectj/weaver/loadtime/Aj/removeStaleAdaptors(boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/loadtime/Aj/removeStaleAdaptors(boolean)#java/lang/ref/ReferenceQueue/poll()
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11/getThreadCounter()#java/util/ArrayList/ArrayList()
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11/getThreadCounter()#java/util/Iterator/hasNext()
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11/getThreadCounter()#java/lang/Math/max(int,int)
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11/getThreadCounter()#java/util/Hashtable/size()
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11/getThreadCounter()#org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11$Counter/Counter()
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11/getThreadCounter()#java/util/List/add(java.lang.Object)
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11/getThreadCounter()#java/util/List/iterator()
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11/getThreadCounter()#java/util/Hashtable/put(java.lang.Object,java.lang.Object)
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11/getThreadCounter()#java/lang/Thread/isAlive()
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11/getThreadCounter()#java/lang/Thread/currentThread()
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11/getThreadCounter()#java/util/Iterator/next()
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11/getThreadCounter()#java/util/Hashtable/get(java.lang.Object)
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11/getThreadCounter()#java/util/Hashtable/remove(java.lang.Object)
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11/getThreadCounter()#java/util/Enumeration/hasMoreElements()
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11/getThreadCounter()#java/util/Enumeration/nextElement()
org/aspectj/runtime/internal/cflowstack/ThreadCounterImpl11/getThreadCounter()#java/util/Hashtable/keys()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/addScopedAspect(java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/addScopedAspect(java.lang.String,java.lang.String)#java/lang/Object/toString()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/addScopedAspect(java.lang.String,java.lang.String)#org/aspectj/weaver/bcel/BcelWorld$WeavingXmlConfig/ensureInitialized()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/addScopedAspect(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/addScopedAspect(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/addScopedAspect(java.lang.String,java.lang.String)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/addScopedAspect(java.lang.String,java.lang.String)#org/aspectj/weaver/bcel/BcelWorld/getMessageHandler()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/addScopedAspect(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/addScopedAspect(java.lang.String,java.lang.String)#java/lang/Exception/getMessage()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#java/lang/Object/toString()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#java/lang/String/length()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#java/util/List/size()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#java/lang/String/substring(int,int)
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#org/aspectj/weaver/bcel/BcelWorld/getMessageHandler()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#java/lang/String/endsWith(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#java/lang/Exception/getMessage()
org/aspectj/weaver/bcel/BcelWorld/WeavingXmlConfig/ensureInitialized()#org/aspectj/weaver/patterns/ParserException/getMessage()
org/aspectj/weaver/patterns/SimpleScope/lookupType(java.lang.String,org.aspectj.weaver.IHasPosition)#java/lang/String/length()
org/aspectj/weaver/patterns/SimpleScope/lookupType(java.lang.String,org.aspectj.weaver.IHasPosition)#java/lang/Character/isLowerCase(char)
org/aspectj/weaver/patterns/SimpleScope/lookupType(java.lang.String,org.aspectj.weaver.IHasPosition)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/patterns/SimpleScope/lookupType(java.lang.String,org.aspectj.weaver.IHasPosition)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/patterns/SimpleScope/lookupType(java.lang.String,org.aspectj.weaver.IHasPosition)#java/lang/String/charAt(int)
org/aspectj/weaver/patterns/SimpleScope/lookupType(java.lang.String,org.aspectj.weaver.IHasPosition)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/patterns/SimpleScope/lookupType(java.lang.String,org.aspectj.weaver.IHasPosition)#java/lang/String/indexOf(int)
org/aspectj/weaver/patterns/SimpleScope/lookupType(java.lang.String,org.aspectj.weaver.IHasPosition)#java/lang/StringBuilder/toString()
org/aspectj/weaver/patterns/SimpleScope/lookupType(java.lang.String,org.aspectj.weaver.IHasPosition)#java/lang/String/endsWith(java.lang.String)
org/aspectj/apache/bcel/classfile/JavaClass/toString()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/classfile/JavaClass/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/classfile/JavaClass/toString()#java/lang/StringBuilder/append(boolean)
org/aspectj/apache/bcel/classfile/JavaClass/toString()#java/lang/StringBuilder/append(char)
org/aspectj/apache/bcel/classfile/JavaClass/toString()#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/aspectj/apache/bcel/classfile/JavaClass/toString()#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/apache/bcel/classfile/JavaClass/toString()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/classfile/JavaClass/toString()#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/classfile/JavaClass/toString()#java/lang/String/valueOf(java.lang.Object)
org/aspectj/apache/bcel/classfile/JavaClass/toString()#java/lang/StringBuffer/append(char)
org/aspectj/apache/bcel/classfile/JavaClass/toString()#java/lang/StringBuilder/append(int)
org/aspectj/apache/bcel/classfile/JavaClass/toString()#java/lang/String/equals(java.lang.Object)
org/aspectj/apache/bcel/classfile/JavaClass/toString()#java/lang/StringBuffer/toString()
org/aspectj/apache/bcel/classfile/JavaClass/implementationOf(org.aspectj.apache.bcel.classfile.JavaClass)#java/lang/Object/equals(java.lang.Object)
org/aspectj/apache/bcel/classfile/JavaClass/implementationOf(org.aspectj.apache.bcel.classfile.JavaClass)#java/lang/String/valueOf(java.lang.Object)
org/aspectj/apache/bcel/classfile/JavaClass/implementationOf(org.aspectj.apache.bcel.classfile.JavaClass)#java/util/Iterator/hasNext()
org/aspectj/apache/bcel/classfile/JavaClass/implementationOf(org.aspectj.apache.bcel.classfile.JavaClass)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/classfile/JavaClass/implementationOf(org.aspectj.apache.bcel.classfile.JavaClass)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/classfile/JavaClass/implementationOf(org.aspectj.apache.bcel.classfile.JavaClass)#java/util/Iterator/next()
org/aspectj/apache/bcel/classfile/JavaClass/implementationOf(org.aspectj.apache.bcel.classfile.JavaClass)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/aspectj/apache/bcel/classfile/JavaClass/implementationOf(org.aspectj.apache.bcel.classfile.JavaClass)#java/util/Collection/iterator()
org/aspectj/apache/bcel/classfile/JavaClass/implementationOf(org.aspectj.apache.bcel.classfile.JavaClass)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/classfile/JavaClass/implementationOf(org.aspectj.apache.bcel.classfile.JavaClass)#org/aspectj/apache/bcel/classfile/JavaClass/isInterface()
org/aspectj/apache/bcel/classfile/JavaClass/indent(java.lang.Object)#java/lang/Object/toString()
org/aspectj/apache/bcel/classfile/JavaClass/indent(java.lang.Object)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/classfile/JavaClass/indent(java.lang.Object)#java/lang/StringBuffer/toString()
org/aspectj/apache/bcel/classfile/JavaClass/indent(java.lang.Object)#java/util/StringTokenizer/nextToken()
org/aspectj/apache/bcel/classfile/JavaClass/indent(java.lang.Object)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/classfile/JavaClass/indent(java.lang.Object)#java/util/StringTokenizer/hasMoreTokens()
org/aspectj/apache/bcel/classfile/JavaClass/indent(java.lang.Object)#java/lang/StringBuffer/StringBuffer()
org/aspectj/apache/bcel/classfile/JavaClass/indent(java.lang.Object)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/classfile/JavaClass/indent(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/classfile/JavaClass/indent(java.lang.Object)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#org/aspectj/weaver/bcel/BcelAdvice/hasExtraParameter()
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#org/aspectj/weaver/bcel/BcelWorld/getLint()
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#org/aspectj/weaver/bcel/BcelAdvice/getSourceLocation()
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#org/aspectj/weaver/bcel/BcelAdvice/getExtraParameterType()
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#org/aspectj/weaver/bcel/BcelWorld/isIgnoringUnusedDeclaredThrownException()
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#org/aspectj/weaver/bcel/BcelAdvice/getKind()
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#java/lang/String/charAt(int)
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#java/util/Collection/isEmpty()
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#org/aspectj/weaver/Lint$Kind/signal(java.lang.String[],org.aspectj.bridge.ISourceLocation,org.aspectj.bridge.ISourceLocation[])
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#org/aspectj/weaver/bcel/BcelShadow/getKind()
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#org/aspectj/weaver/Lint$Kind/signal(java.lang.String,org.aspectj.bridge.ISourceLocation)
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#org/aspectj/weaver/bcel/BcelShadow/getSignature()
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#org/aspectj/weaver/bcel/BcelAdvice/getSignature()
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelAdvice/implementOn(org.aspectj.weaver.Shadow)#org/aspectj/weaver/bcel/BcelShadow/toString()
org/aspectj/weaver/bcel/BcelAdvice/getAdviceArgSetup(org.aspectj.weaver.bcel.BcelShadow,org.aspectj.weaver.bcel.BcelVar,org.aspectj.apache.bcel.generic.InstructionList)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelAdvice/getAdviceArgSetup(org.aspectj.weaver.bcel.BcelShadow,org.aspectj.weaver.bcel.BcelVar,org.aspectj.apache.bcel.generic.InstructionList)#java/lang/StringBuilder/append(int)
org/aspectj/weaver/bcel/BcelAdvice/getAdviceArgSetup(org.aspectj.weaver.bcel.BcelShadow,org.aspectj.weaver.bcel.BcelVar,org.aspectj.apache.bcel.generic.InstructionList)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelAdvice/getAdviceArgSetup(org.aspectj.weaver.bcel.BcelShadow,org.aspectj.weaver.bcel.BcelVar,org.aspectj.apache.bcel.generic.InstructionList)#org/aspectj/weaver/bcel/BcelAdvice/getExtraParameterFlags()
org/aspectj/weaver/bcel/BcelAdvice/getAdviceArgSetup(org.aspectj.weaver.bcel.BcelShadow,org.aspectj.weaver.bcel.BcelVar,org.aspectj.apache.bcel.generic.InstructionList)#org/aspectj/weaver/bcel/BcelAdvice/getBindingParameterTypes()
org/aspectj/weaver/bcel/BcelAdvice/getAdviceArgSetup(org.aspectj.weaver.bcel.BcelShadow,org.aspectj.weaver.bcel.BcelVar,org.aspectj.apache.bcel.generic.InstructionList)#org/aspectj/weaver/bcel/BcelAdvice/getSignature()
org/aspectj/weaver/bcel/BcelAdvice/getAdviceArgSetup(org.aspectj.weaver.bcel.BcelShadow,org.aspectj.weaver.bcel.BcelVar,org.aspectj.apache.bcel.generic.InstructionList)#org/aspectj/weaver/bcel/BcelAdvice/getSourceLocation()
org/aspectj/weaver/bcel/BcelAdvice/getAdviceArgSetup(org.aspectj.weaver.bcel.BcelShadow,org.aspectj.weaver.bcel.BcelVar,org.aspectj.apache.bcel.generic.InstructionList)#org/aspectj/weaver/bcel/BcelAdvice/getDeclaringAspect()
org/aspectj/weaver/bcel/BcelAdvice/getAdviceArgSetup(org.aspectj.weaver.bcel.BcelShadow,org.aspectj.weaver.bcel.BcelVar,org.aspectj.apache.bcel.generic.InstructionList)#org/aspectj/weaver/bcel/BcelAdvice/getExtraParameterType()
org/aspectj/weaver/bcel/BcelAdvice/getAdviceArgSetup(org.aspectj.weaver.bcel.BcelShadow,org.aspectj.weaver.bcel.BcelVar,org.aspectj.apache.bcel.generic.InstructionList)#org/aspectj/weaver/bcel/BcelAdvice/getKind()
org/aspectj/weaver/bcel/BcelAdvice/getAdviceArgSetup(org.aspectj.weaver.bcel.BcelShadow,org.aspectj.weaver.bcel.BcelVar,org.aspectj.apache.bcel.generic.InstructionList)#org/aspectj/weaver/bcel/BcelAdvice/toString()
org/aspectj/weaver/bcel/BcelAdvice/getAdviceArgSetup(org.aspectj.weaver.bcel.BcelShadow,org.aspectj.weaver.bcel.BcelVar,org.aspectj.apache.bcel.generic.InstructionList)#org/aspectj/weaver/bcel/BcelAdvice/hasExtraParameter()
org/aspectj/weaver/bcel/BcelAdvice/getAdviceArgSetup(org.aspectj.weaver.bcel.BcelShadow,org.aspectj.weaver.bcel.BcelVar,org.aspectj.apache.bcel.generic.InstructionList)#org/aspectj/weaver/bcel/BcelAdvice/getConcreteAspect()
org/aspectj/weaver/bcel/BcelAdvice/getAdviceArgSetup(org.aspectj.weaver.bcel.BcelShadow,org.aspectj.weaver.bcel.BcelVar,org.aspectj.apache.bcel.generic.InstructionList)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelAdvice/getAdviceArgSetup(org.aspectj.weaver.bcel.BcelShadow,org.aspectj.weaver.bcel.BcelVar,org.aspectj.apache.bcel.generic.InstructionList)#java/lang/StringBuilder/toString()
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/StringBuffer/append(char)
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/String/length()
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/String/substring(int,int)
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/String/replace(char,char)
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/StringBuilder/append(char)
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/String/charAt(int)
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/StringBuffer/toString()
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/AssertionError/AssertionError()
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/StringBuffer/StringBuffer()
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/asm/internal/ProgramElement/nameToSignature(java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/aspectj/asm/internal/ProgramElement/toSignatureString(boolean)#java/lang/Object/equals(java.lang.Object)
org/aspectj/asm/internal/ProgramElement/toSignatureString(boolean)#java/util/Iterator/hasNext()
org/aspectj/asm/internal/ProgramElement/toSignatureString(boolean)#java/lang/StringBuffer/append(char[])
org/aspectj/asm/internal/ProgramElement/toSignatureString(boolean)#java/lang/StringBuffer/append(char)
org/aspectj/asm/internal/ProgramElement/toSignatureString(boolean)#java/util/List/isEmpty()
org/aspectj/asm/internal/ProgramElement/toSignatureString(boolean)#java/util/Iterator/next()
org/aspectj/asm/internal/ProgramElement/toSignatureString(boolean)#java/lang/StringBuffer/toString()
org/aspectj/asm/internal/ProgramElement/toSignatureString(boolean)#java/lang/StringBuffer/StringBuffer()
org/aspectj/asm/internal/ProgramElement/toSignatureString(boolean)#java/util/List/iterator()
org/aspectj/asm/internal/ProgramElement/toSignatureString(boolean)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/asm/internal/ProgramElement/trim(java.lang.String)#java/lang/StringBuilder/append(java.lang.CharSequence)
org/aspectj/asm/internal/ProgramElement/trim(java.lang.String)#java/lang/StringBuilder/setLength(int)
org/aspectj/asm/internal/ProgramElement/trim(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
org/aspectj/asm/internal/ProgramElement/trim(java.lang.String)#java/lang/String/substring(int)
org/aspectj/asm/internal/ProgramElement/trim(java.lang.String)#java/lang/StringBuilder/append(char)
org/aspectj/asm/internal/ProgramElement/trim(java.lang.String)#java/lang/String/toCharArray()
org/aspectj/asm/internal/ProgramElement/trim(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/asm/internal/ProgramElement/trim(java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/aspectj/asm/internal/ProgramElement/trim(java.lang.String)#java/lang/String/lastIndexOf(int)
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/bcel/AnnotationAccessVar/getType()
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getSignature()
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/getType()
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#java/util/Iterator/next()
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/getElementValueType()
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#java/lang/String/substring(int,int)
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#java/lang/String/lastIndexOf(int)
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#java/lang/String/substring(int)
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#java/lang/Integer/parseInt(java.lang.String)
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#java/lang/Integer/valueOf(int)
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#java/util/List/iterator()
org/aspectj/weaver/bcel/AnnotationAccessFieldVar/appendLoadAndConvert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/toString()
org/aspectj/bridge/SourceLocation/toString()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/bridge/SourceLocation/toString()#java/lang/StringBuilder/append(int)
org/aspectj/bridge/SourceLocation/toString()#java/lang/StringBuffer/toString()
org/aspectj/bridge/SourceLocation/toString()#java/lang/StringBuilder/StringBuilder()
org/aspectj/bridge/SourceLocation/toString()#java/lang/StringBuffer/append(int)
org/aspectj/bridge/SourceLocation/toString()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/bridge/SourceLocation/toString()#java/lang/StringBuilder/toString()
org/aspectj/bridge/SourceLocation/toString()#java/io/File/getPath()
org/aspectj/bridge/SourceLocation/toString()#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/AbstractReferenceTypeDelegate/getFormalTypeParametersFromOuterClass()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/AbstractReferenceTypeDelegate/getFormalTypeParametersFromOuterClass()#java/util/List/size()
org/aspectj/weaver/AbstractReferenceTypeDelegate/getFormalTypeParametersFromOuterClass()#org/aspectj/weaver/AbstractReferenceTypeDelegate/getOuterClass()
org/aspectj/weaver/AbstractReferenceTypeDelegate/getFormalTypeParametersFromOuterClass()#java/util/List/add(java.lang.Object)
org/aspectj/weaver/AbstractReferenceTypeDelegate/getFormalTypeParametersFromOuterClass()#org/aspectj/weaver/AbstractReferenceTypeDelegate/isNested()
org/aspectj/weaver/AbstractReferenceTypeDelegate/getFormalTypeParametersFromOuterClass()#org/aspectj/weaver/ResolvedType/getSignature()
org/aspectj/weaver/AbstractReferenceTypeDelegate/getFormalTypeParametersFromOuterClass()#java/util/ArrayList/ArrayList()
org/aspectj/weaver/AbstractReferenceTypeDelegate/getFormalTypeParametersFromOuterClass()#org/aspectj/weaver/ResolvedType/toString()
org/aspectj/weaver/AbstractReferenceTypeDelegate/getFormalTypeParametersFromOuterClass()#java/util/List/toArray(java.lang.Object[])
org/aspectj/weaver/AbstractReferenceTypeDelegate/getFormalTypeParametersFromOuterClass()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/AbstractReferenceTypeDelegate/getFormalTypeParametersFromOuterClass()#java/lang/StringBuilder/toString()
org/aspectj/weaver/AbstractReferenceTypeDelegate/getFormalTypeParametersFromOuterClass()#org/aspectj/weaver/ReferenceType/getSignature()
org/aspectj/apache/bcel/classfile/Signature/matchGJIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#org/aspectj/apache/bcel/classfile/Signature$MyByteArrayInputStream/unread()
org/aspectj/apache/bcel/classfile/Signature/matchGJIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#org/aspectj/apache/bcel/classfile/Signature$MyByteArrayInputStream/getData()
org/aspectj/apache/bcel/classfile/Signature/matchGJIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/classfile/Signature/matchGJIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/classfile/Signature/matchGJIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/StringBuilder/append(char)
org/aspectj/apache/bcel/classfile/Signature/matchGJIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/apache/bcel/classfile/Signature/matchGJIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/classfile/Signature/matchGJIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/classfile/Signature/matchGJIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#org/aspectj/apache/bcel/classfile/Signature$MyByteArrayInputStream/read()
org/aspectj/apache/bcel/classfile/Signature/matchGJIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/StringBuffer/append(char)
org/aspectj/apache/bcel/classfile/Signature/matchIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#org/aspectj/apache/bcel/classfile/Signature$MyByteArrayInputStream/unread()
org/aspectj/apache/bcel/classfile/Signature/matchIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#org/aspectj/apache/bcel/classfile/Signature$MyByteArrayInputStream/getData()
org/aspectj/apache/bcel/classfile/Signature/matchIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/Character/isJavaIdentifierPart(char)
org/aspectj/apache/bcel/classfile/Signature/matchIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#org/aspectj/apache/bcel/classfile/Signature$MyByteArrayInputStream/read()
org/aspectj/apache/bcel/classfile/Signature/matchIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/classfile/Signature/matchIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/StringBuffer/append(char)
org/aspectj/apache/bcel/classfile/Signature/matchIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/String/length()
org/aspectj/apache/bcel/classfile/Signature/matchIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/classfile/Signature/matchIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/StringBuffer/toString()
org/aspectj/apache/bcel/classfile/Signature/matchIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#org/aspectj/apache/bcel/classfile/Signature$MyByteArrayInputStream/skip(long)
org/aspectj/apache/bcel/classfile/Signature/matchIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/String/replace(char,char)
org/aspectj/apache/bcel/classfile/Signature/matchIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/apache/bcel/classfile/Signature/matchIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/StringBuffer/StringBuffer()
org/aspectj/apache/bcel/classfile/Signature/matchIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/classfile/Signature/matchIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.StringBuffer)
org/aspectj/apache/bcel/classfile/Signature/matchIdent(org.aspectj.apache.bcel.classfile.Signature$MyByteArrayInputStream,java.lang.StringBuffer)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/bcel/BcelObjectType/getTypeVariables()#org/aspectj/weaver/bcel/BcelObjectType/getGenericClassTypeSignature()
org/aspectj/weaver/bcel/BcelObjectType/getTypeVariables()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/weaver/bcel/BcelObjectType/getTypeVariables()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelObjectType/getTypeVariables()#org/aspectj/weaver/bcel/BcelObjectType/getResolvedTypeX()
org/aspectj/weaver/bcel/BcelObjectType/getTypeVariables()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelObjectType/getTypeVariables()#org/aspectj/weaver/ReferenceType/getWorld()
org/aspectj/weaver/bcel/BcelObjectType/getTypeVariables()#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelObjectType/getTypeVariables()#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelObjectType/getTypeVariables()#org/aspectj/weaver/bcel/BcelGenericSignatureToTypeXConverter$GenericSignatureFormatException/getMessage()
org/aspectj/weaver/bcel/BcelObjectType/getAnnotationTargetKinds()#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelObjectType/getAnnotationTargetKinds()#java/util/List/isEmpty()
org/aspectj/weaver/bcel/BcelObjectType/getAnnotationTargetKinds()#java/util/List/size()
org/aspectj/weaver/bcel/BcelObjectType/getAnnotationTargetKinds()#java/util/Set/iterator()
org/aspectj/weaver/bcel/BcelObjectType/getAnnotationTargetKinds()#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelObjectType/getAnnotationTargetKinds()#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelObjectType/getAnnotationTargetKinds()#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelObjectType/getAnnotationTargetKinds()#java/util/List/toArray(java.lang.Object[])
org/aspectj/weaver/bcel/BcelObjectType/getAnnotationTargetKinds()#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelObjectType/ensureGenericSignatureUnpacked()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/weaver/bcel/BcelObjectType/ensureGenericSignatureUnpacked()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelObjectType/ensureGenericSignatureUnpacked()#org/aspectj/weaver/bcel/BcelObjectType/getFormalTypeParametersFromOuterClass()
org/aspectj/weaver/bcel/BcelObjectType/ensureGenericSignatureUnpacked()#java/util/List/size()
org/aspectj/weaver/bcel/BcelObjectType/ensureGenericSignatureUnpacked()#java/util/List/toArray(java.lang.Object[])
org/aspectj/weaver/bcel/BcelObjectType/ensureGenericSignatureUnpacked()#org/aspectj/weaver/bcel/BcelGenericSignatureToTypeXConverter$GenericSignatureFormatException/getMessage()
org/aspectj/weaver/bcel/BcelObjectType/ensureGenericSignatureUnpacked()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelObjectType/ensureGenericSignatureUnpacked()#org/aspectj/weaver/ReferenceType/getWorld()
org/aspectj/weaver/bcel/BcelObjectType/ensureGenericSignatureUnpacked()#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelObjectType/ensureGenericSignatureUnpacked()#org/aspectj/weaver/bcel/BcelObjectType/getGenericClassTypeSignature()
org/aspectj/weaver/bcel/BcelObjectType/ensureGenericSignatureUnpacked()#org/aspectj/weaver/ResolvedType/getSignature()
org/aspectj/weaver/bcel/BcelObjectType/ensureGenericSignatureUnpacked()#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelObjectType/ensureGenericSignatureUnpacked()#org/aspectj/weaver/bcel/BcelObjectType/getResolvedTypeX()
org/aspectj/weaver/bcel/BcelObjectType/ensureGenericSignatureUnpacked()#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelObjectType/ensureGenericSignatureUnpacked()#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/BcelObjectType/getOuterClass()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/weaver/bcel/BcelObjectType/getOuterClass()#java/lang/String/compareTo(java.lang.String)
org/aspectj/weaver/bcel/BcelObjectType/getOuterClass()#java/lang/String/replace(char,char)
org/aspectj/weaver/bcel/BcelObjectType/getOuterClass()#org/aspectj/weaver/ReferenceType/getWorld()
org/aspectj/weaver/bcel/BcelObjectType/getOuterClass()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelObjectType/getOuterClass()#org/aspectj/weaver/bcel/BcelObjectType/getResolvedTypeX()
org/aspectj/weaver/bcel/BcelObjectType/getOuterClass()#java/lang/String/substring(int,int)
org/aspectj/weaver/bcel/BcelObjectType/getOuterClass()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelObjectType/getOuterClass()#java/lang/String/lastIndexOf(int)
org/aspectj/weaver/bcel/BcelObjectType/getOuterClass()#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelObjectType/ensureAspectJAttributesUnpacked()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelObjectType/ensureAspectJAttributesUnpacked()#org/aspectj/weaver/bcel/BcelObjectType/getResolvedTypeX()
org/aspectj/weaver/bcel/BcelObjectType/ensureAspectJAttributesUnpacked()#java/util/List/size()
org/aspectj/weaver/bcel/BcelObjectType/ensureAspectJAttributesUnpacked()#java/util/List/toArray(java.lang.Object[])
org/aspectj/weaver/bcel/BcelObjectType/ensureAspectJAttributesUnpacked()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelObjectType/ensureAspectJAttributesUnpacked()#org/aspectj/weaver/ReferenceType/getName()
org/aspectj/weaver/bcel/BcelObjectType/ensureAspectJAttributesUnpacked()#java/lang/reflect/Modifier/isAbstract(int)
org/aspectj/weaver/bcel/BcelObjectType/ensureAspectJAttributesUnpacked()#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelObjectType/ensureAspectJAttributesUnpacked()#org/aspectj/weaver/AjAttribute$Aspect/reifyFromAtAspectJ(org.aspectj.weaver.ResolvedType)
org/aspectj/weaver/bcel/BcelObjectType/ensureAspectJAttributesUnpacked()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/aspectj/weaver/bcel/BcelObjectType/ensureAspectJAttributesUnpacked()#org/aspectj/weaver/ReferenceType/getWorld()
org/aspectj/weaver/bcel/BcelObjectType/ensureAspectJAttributesUnpacked()#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#org/aspectj/weaver/AjAttribute$DeclareAttribute/getDeclare()
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#org/aspectj/weaver/AjAttribute$WeaverState/reify()
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#org/aspectj/weaver/AjAttribute$TypeMunger/reify(org.aspectj.weaver.World,org.aspectj.weaver.ResolvedType)
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#org/aspectj/weaver/AjAttribute$SourceContextAttribute/getSourceFileName()
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#org/aspectj/weaver/ReferenceType/getWorld()
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#org/aspectj/weaver/AjAttribute$Aspect/reify(org.aspectj.weaver.ResolvedType)
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#org/aspectj/weaver/AjAttribute$PrivilegedAttribute/getAccessedMembers()
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#org/aspectj/weaver/bcel/BcelObjectType/getResolvedTypeX()
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#org/aspectj/weaver/AjAttribute$PointcutDeclarationAttribute/reify()
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#org/aspectj/weaver/bcel/BcelObjectType/setSourcefilename(java.lang.String)
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelObjectType/processAttributes(java.util.List,java.util.List,boolean)#org/aspectj/weaver/AjAttribute$SourceContextAttribute/getLineBreaks()
org/aspectj/util/Reflection/runMainInSameVM(java.net.URL[],java.io.File[],java.io.File[],java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/Reflection/runMainInSameVM(java.net.URL[],java.io.File[],java.io.File[],java.lang.String,java.lang.String[])#java/lang/Class/getMethod(java.lang.String,java.lang.Class[])
org/aspectj/util/Reflection/runMainInSameVM(java.net.URL[],java.io.File[],java.io.File[],java.lang.String,java.lang.String[])#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/Reflection/runMainInSameVM(java.net.URL[],java.io.File[],java.io.File[],java.lang.String,java.lang.String[])#java/lang/ClassNotFoundException/ClassNotFoundException(java.lang.String)
org/aspectj/util/Reflection/runMainInSameVM(java.net.URL[],java.io.File[],java.io.File[],java.lang.String,java.lang.String[])#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/util/Reflection/runMainInSameVM(java.net.URL[],java.io.File[],java.io.File[],java.lang.String,java.lang.String[])#java/lang/StringBuilder/toString()
org/aspectj/util/Reflection/runMainInSameVM(java.net.URL[],java.io.File[],java.io.File[],java.lang.String,java.lang.String[])#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/aspectj/util/Reflection/runMainInSameVM(java.net.URL[],java.io.File[],java.io.File[],java.lang.String,java.lang.String[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/aspectj/util/Reflection/runMainInSameVM(java.net.URL[],java.io.File[],java.io.File[],java.lang.String,java.lang.String[])#org/aspectj/util/UtilClassLoader/loadClass(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#java/util/Set/removeAll(java.util.Collection)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#java/util/Set/addAll(java.util.Collection)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#java/util/LinkedHashSet/LinkedHashSet()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#org/aspectj/weaver/bcel/BcelWorld/getDeclareAnnotationOnFields()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/isEmpty()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#org/aspectj/weaver/bcel/BcelField/getName()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#java/util/Set/isEmpty()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#java/util/Set/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#org/aspectj/weaver/patterns/DeclareAnnotation/getSourceLocation()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#java/util/Set/remove(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtField(org.aspectj.weaver.bcel.LazyClassGen)#java/util/HashSet/HashSet()
org/aspectj/weaver/bcel/BcelClassWeaver/inlineSelfConstructors(java.util.List,java.util.List)#java/lang/Object/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/inlineSelfConstructors(java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelClassWeaver/inlineSelfConstructors(java.util.List,java.util.List)#java/util/List/addAll(java.util.Collection)
org/aspectj/weaver/bcel/BcelClassWeaver/inlineSelfConstructors(java.util.List,java.util.List)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelClassWeaver/inlineSelfConstructors(java.util.List,java.util.List)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/inlineSelfConstructors(java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/inlineSelfConstructors(java.util.List,java.util.List)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelClassWeaver/inlineSelfConstructors(java.util.List,java.util.List)#java/util/List/contains(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/inlineSelfConstructors(java.util.List,java.util.List)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveAtFieldRepeatedly(java.util.List,java.util.List,java.util.List)#java/util/LinkedHashSet/LinkedHashSet()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveAtFieldRepeatedly(java.util.List,java.util.List,java.util.List)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveAtFieldRepeatedly(java.util.List,java.util.List,java.util.List)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveAtFieldRepeatedly(java.util.List,java.util.List,java.util.List)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveAtFieldRepeatedly(java.util.List,java.util.List,java.util.List)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveAtFieldRepeatedly(java.util.List,java.util.List,java.util.List)#org/aspectj/weaver/bcel/BcelTypeMunger/getSignature()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveAtFieldRepeatedly(java.util.List,java.util.List,java.util.List)#java/util/Set/removeAll(java.util.Collection)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveAtFieldRepeatedly(java.util.List,java.util.List,java.util.List)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveAtFieldRepeatedly(java.util.List,java.util.List,java.util.List)#java/util/Set/isEmpty()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveAtFieldRepeatedly(java.util.List,java.util.List,java.util.List)#java/util/Set/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveAtFieldRepeatedly(java.util.List,java.util.List,java.util.List)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveAtFieldRepeatedly(java.util.List,java.util.List,java.util.List)#org/aspectj/weaver/patterns/DeclareAnnotation/getSourceLocation()
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#java/lang/reflect/Modifier/isFinal(int)
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#org/aspectj/weaver/bcel/BcelWorld/isJoinpointSynchronizationEnabled()
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#java/util/Set/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#org/aspectj/apache/bcel/generic/InvokeInstruction/getClassName(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#org/aspectj/apache/bcel/generic/InvokeInstruction/getOpcode()
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#org/aspectj/weaver/bcel/BcelWorld/isJoinpointArrayConstructionEnabled()
org/aspectj/weaver/bcel/BcelClassWeaver/locateAnnotationHolderForMethodCtorMunger(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ConcreteTypeMunger)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelClassWeaver/locateAnnotationHolderForMethodCtorMunger(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ConcreteTypeMunger)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/locateAnnotationHolderForMethodCtorMunger(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ConcreteTypeMunger)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelClassWeaver/locateAnnotationHolderForMethodCtorMunger(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ConcreteTypeMunger)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelClassWeaver/locateAnnotationHolderForMethodCtorMunger(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ConcreteTypeMunger)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelClassWeaver/locateAnnotationHolderForMethodCtorMunger(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ConcreteTypeMunger)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelClassWeaver/locateAnnotationHolderForMethodCtorMunger(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ConcreteTypeMunger)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/locateAnnotationHolderForMethodCtorMunger(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ConcreteTypeMunger)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/bcel/BcelClassWeaver/locateAnnotationHolderForMethodCtorMunger(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ConcreteTypeMunger)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelClassWeaver/locateAnnotationHolderForMethodCtorMunger(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ConcreteTypeMunger)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/locateAnnotationHolderForMethodCtorMunger(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ConcreteTypeMunger)#org/aspectj/weaver/NewConstructorTypeMunger/getSignature()
org/aspectj/weaver/bcel/BcelClassWeaver/locateAnnotationHolderForMethodCtorMunger(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ConcreteTypeMunger)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/locateAnnotationHolderForMethodCtorMunger(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ConcreteTypeMunger)#org/aspectj/weaver/NewMethodTypeMunger/getSignature()
org/aspectj/weaver/bcel/BcelClassWeaver/locateAnnotationHolderForMethodCtorMunger(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ConcreteTypeMunger)#org/aspectj/weaver/ResolvedMember/getParameterSignature()
org/aspectj/weaver/bcel/BcelClassWeaver/genInlineInstructions(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.IntMap,org.aspectj.apache.bcel.generic.InstructionFactory,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/genInlineInstructions(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.IntMap,org.aspectj.apache.bcel.generic.InstructionFactory,boolean)#java/util/Set/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/genInlineInstructions(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.IntMap,org.aspectj.apache.bcel.generic.InstructionFactory,boolean)#org/aspectj/weaver/bcel/ShadowRange/getEnd()
org/aspectj/weaver/bcel/BcelClassWeaver/genInlineInstructions(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.IntMap,org.aspectj.apache.bcel.generic.InstructionFactory,boolean)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelClassWeaver/genInlineInstructions(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.IntMap,org.aspectj.apache.bcel.generic.InstructionFactory,boolean)#org/aspectj/weaver/bcel/ShadowRange/getStart()
org/aspectj/weaver/bcel/BcelClassWeaver/genInlineInstructions(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.IntMap,org.aspectj.apache.bcel.generic.InstructionFactory,boolean)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/genInlineInstructions(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.IntMap,org.aspectj.apache.bcel.generic.InstructionFactory,boolean)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelClassWeaver/genInlineInstructions(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.IntMap,org.aspectj.apache.bcel.generic.InstructionFactory,boolean)#java/util/HashMap/HashMap()
org/aspectj/weaver/bcel/BcelClassWeaver/genInlineInstructions(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.IntMap,org.aspectj.apache.bcel.generic.InstructionFactory,boolean)#org/aspectj/weaver/bcel/ExceptionRange/getEnd()
org/aspectj/weaver/bcel/BcelClassWeaver/genInlineInstructions(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.IntMap,org.aspectj.apache.bcel.generic.InstructionFactory,boolean)#org/aspectj/weaver/bcel/ExceptionRange/getStart()
org/aspectj/weaver/bcel/BcelClassWeaver/findResolvedMemberNamed(org.aspectj.weaver.ResolvedType,java.lang.String,org.aspectj.weaver.UnresolvedType[])#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelClassWeaver/findResolvedMemberNamed(org.aspectj.weaver.ResolvedType,java.lang.String,org.aspectj.weaver.UnresolvedType[])#org/aspectj/weaver/ResolvedMember/getArity()
org/aspectj/weaver/bcel/BcelClassWeaver/findResolvedMemberNamed(org.aspectj.weaver.ResolvedType,java.lang.String,org.aspectj.weaver.UnresolvedType[])#java/util/List/size()
org/aspectj/weaver/bcel/BcelClassWeaver/findResolvedMemberNamed(org.aspectj.weaver.ResolvedType,java.lang.String,org.aspectj.weaver.UnresolvedType[])#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelClassWeaver/findResolvedMemberNamed(org.aspectj.weaver.ResolvedType,java.lang.String,org.aspectj.weaver.UnresolvedType[])#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/findResolvedMemberNamed(org.aspectj.weaver.ResolvedType,java.lang.String,org.aspectj.weaver.UnresolvedType[])#java/util/List/get(int)
org/aspectj/weaver/bcel/BcelClassWeaver/findResolvedMemberNamed(org.aspectj.weaver.ResolvedType,java.lang.String,org.aspectj.weaver.UnresolvedType[])#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/findResolvedMemberNamed(org.aspectj.weaver.ResolvedType,java.lang.String,org.aspectj.weaver.UnresolvedType[])#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/bcel/BcelClassWeaver/findResolvedMemberNamed(org.aspectj.weaver.ResolvedType,java.lang.String,org.aspectj.weaver.UnresolvedType[])#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelClassWeaver/findResolvedMemberNamed(org.aspectj.weaver.ResolvedType,java.lang.String,org.aspectj.weaver.UnresolvedType[])#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/findResolvedMemberNamed(org.aspectj.weaver.ResolvedType,java.lang.String,org.aspectj.weaver.UnresolvedType[])#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List)#java/lang/Object/toString()
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List)#java/lang/Integer/Integer(int)
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List)#java/lang/Object/hashCode()
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List)#java/util/List/contains(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List)#org/aspectj/weaver/Lint$Kind/isEnabled()
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List)#org/aspectj/weaver/bcel/BcelWorld/getLint()
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List)#org/aspectj/weaver/ResolvedType/toString()
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List)#org/aspectj/weaver/Lint$Kind/signal(java.lang.String[],org.aspectj.bridge.ISourceLocation,org.aspectj.bridge.ISourceLocation[])
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List)#org/aspectj/weaver/patterns/DeclareAnnotation/getSourceLocation()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#java/util/Set/addAll(java.util.Collection)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#org/aspectj/apache/bcel/generic/MethodGen/addAnnotation(org.aspectj.apache.bcel.classfile.annotation.AnnotationGen)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/removeAll(java.util.Collection)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/isEmpty()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/size()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/addAll(java.util.Collection)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#org/aspectj/weaver/patterns/DeclareAnnotation/getSourceLocation()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#org/aspectj/weaver/bcel/BcelWorld/getDeclareAnnotationOnMethods()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#java/util/Set/remove(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/get(int)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/set(int,java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/weaveDeclareAtMethodCtor(org.aspectj.weaver.bcel.LazyClassGen)#java/util/HashSet/HashSet()
org/aspectj/weaver/bcel/BcelClassWeaver/addOrReplaceLazyMethodGen(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/Iterator/remove()
org/aspectj/weaver/bcel/BcelClassWeaver/addOrReplaceLazyMethodGen(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelClassWeaver/addOrReplaceLazyMethodGen(org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/addOrReplaceLazyMethodGen(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelClassWeaver/addOrReplaceLazyMethodGen(org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelClassWeaver/addOrReplaceLazyMethodGen(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/addOrReplaceLazyMethodGen(org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/addOrReplaceLazyMethodGen(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/addOrReplaceLazyMethodGen(org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List,boolean)#java/lang/Integer/Integer(int)
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List,boolean)#java/lang/Object/hashCode()
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List,boolean)#java/util/List/contains(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List,boolean)#org/aspectj/weaver/Lint$Kind/isEnabled()
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List,boolean)#org/aspectj/weaver/bcel/BcelWorld/getLint()
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List,boolean)#java/lang/Object/toString()
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List,boolean)#org/aspectj/weaver/ResolvedType/toString()
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List,boolean)#org/aspectj/weaver/Lint$Kind/signal(java.lang.String[],org.aspectj.bridge.ISourceLocation,org.aspectj.bridge.ISourceLocation[])
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List,boolean)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/doesAlreadyHaveAnnotation(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,java.util.List,boolean)#org/aspectj/weaver/patterns/DeclareAnnotation/getSourceLocation()
org/aspectj/weaver/bcel/BcelClassWeaver/fixAnnotationsForResolvedMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getKind()
org/aspectj/weaver/bcel/BcelClassWeaver/fixAnnotationsForResolvedMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/fixAnnotationsForResolvedMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember)#java/lang/UnsupportedOperationException/UnsupportedOperationException(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/fixAnnotationsForResolvedMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember)#java/util/Map/containsKey(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/fixAnnotationsForResolvedMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelClassWeaver/fixAnnotationsForResolvedMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/fixAnnotationsForResolvedMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/fixAnnotationsForResolvedMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/bcel/BcelClassWeaver/fixAnnotationsForResolvedMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelClassWeaver/fixAnnotationsForResolvedMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/bcel/BcelWorld/resolve(org.aspectj.weaver.Member)
org/aspectj/weaver/bcel/BcelClassWeaver/fixAnnotationsForResolvedMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/fixAnnotationsForResolvedMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/resolve(org.aspectj.weaver.World)
org/aspectj/weaver/bcel/BcelClassWeaver/fixAnnotationsForResolvedMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelClassWeaver/fixAnnotationsForResolvedMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/fixAnnotationsForResolvedMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedMember)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#org/aspectj/weaver/bcel/BcelWorld/getMessageHandler()
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#java/lang/StringBuilder/append(int)
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#java/lang/StringBuffer/toString()
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#java/lang/String/lastIndexOf(int)
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#java/lang/String/substring(int)
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#org/aspectj/weaver/patterns/DeclareAnnotation/getSourceLocation()
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#java/lang/StringBuffer/append(java.lang.StringBuffer)
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/reportMethodCtorWeavingMessage(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.patterns.DeclareAnnotation,int)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelClassWeaver/checkUnusedDeclareAts(java.util.Set,boolean)#java/lang/Object/toString()
org/aspectj/weaver/bcel/BcelClassWeaver/checkUnusedDeclareAts(java.util.Set,boolean)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelClassWeaver/checkUnusedDeclareAts(java.util.Set,boolean)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelClassWeaver/checkUnusedDeclareAts(java.util.Set,boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelClassWeaver/checkUnusedDeclareAts(java.util.Set,boolean)#org/aspectj/weaver/bcel/BcelWorld/getMessageHandler()
org/aspectj/weaver/bcel/BcelClassWeaver/checkUnusedDeclareAts(java.util.Set,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/checkUnusedDeclareAts(java.util.Set,boolean)#java/util/List/size()
org/aspectj/weaver/bcel/BcelClassWeaver/checkUnusedDeclareAts(java.util.Set,boolean)#org/aspectj/weaver/patterns/ExactTypePattern/isIncludeSubtypes()
org/aspectj/weaver/bcel/BcelClassWeaver/checkUnusedDeclareAts(java.util.Set,boolean)#org/aspectj/weaver/NewConstructorTypeMunger/getSignature()
org/aspectj/weaver/bcel/BcelClassWeaver/checkUnusedDeclareAts(java.util.Set,boolean)#org/aspectj/weaver/NewFieldTypeMunger/getSignature()
org/aspectj/weaver/bcel/BcelClassWeaver/checkUnusedDeclareAts(java.util.Set,boolean)#java/util/Set/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/checkUnusedDeclareAts(java.util.Set,boolean)#org/aspectj/weaver/patterns/DeclareAnnotation/getSourceLocation()
org/aspectj/weaver/bcel/BcelClassWeaver/checkUnusedDeclareAts(java.util.Set,boolean)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/checkUnusedDeclareAts(java.util.Set,boolean)#org/aspectj/weaver/NewMethodTypeMunger/getSignature()
org/aspectj/weaver/bcel/BcelClassWeaver/checkUnusedDeclareAts(java.util.Set,boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#org/aspectj/weaver/bcel/BcelWorld/ensureAdvancedConfigurationProcessed()
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/util/Set/contains(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/size()
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#org/aspectj/weaver/bcel/BcelWorld/isInJava5Mode()
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#org/aspectj/weaver/bcel/BcelWorld/resolve(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/StringBuffer/toString()
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/clear()
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/get(int)
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/util/HashSet/HashSet()
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelClassWeaver/calculateAnyRequiredBridgeMethods(org.aspectj.weaver.bcel.BcelWorld,org.aspectj.weaver.bcel.LazyClassGen)#java/lang/String/endsWith(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/List/isEmpty()
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/AjAttribute$EffectiveSignatureAttribute/isWeaveBody()
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/bcel/BcelWorld/isOverWeaving()
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/String/charAt(int)
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/bcel/BcelShadow/getKind()
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/AjAttribute$EffectiveSignatureAttribute/getEffectiveSignature()
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/AjAttribute$EffectiveSignatureAttribute/getShadowKind()
org/aspectj/weaver/bcel/BcelClassWeaver/match(org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/matchInvokeInstruction(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InvokeInstruction,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#java/lang/String/length()
org/aspectj/weaver/bcel/BcelClassWeaver/matchInvokeInstruction(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InvokeInstruction,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/matchInvokeInstruction(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InvokeInstruction,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelClassWeaver/matchInvokeInstruction(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InvokeInstruction,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#org/aspectj/weaver/ResolvedMember/getKind()
org/aspectj/weaver/bcel/BcelClassWeaver/matchInvokeInstruction(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InvokeInstruction,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#org/aspectj/apache/bcel/generic/InvokeInstruction/getClassName(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelClassWeaver/matchInvokeInstruction(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InvokeInstruction,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#org/aspectj/weaver/AjAttribute$EffectiveSignatureAttribute/isWeaveBody()
org/aspectj/weaver/bcel/BcelClassWeaver/matchInvokeInstruction(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InvokeInstruction,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#org/aspectj/weaver/bcel/BcelWorld/isOverWeaving()
org/aspectj/weaver/bcel/BcelClassWeaver/matchInvokeInstruction(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InvokeInstruction,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#java/lang/String/charAt(int)
org/aspectj/weaver/bcel/BcelClassWeaver/matchInvokeInstruction(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InvokeInstruction,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#org/aspectj/weaver/AjAttribute$EffectiveSignatureAttribute/getEffectiveSignature()
org/aspectj/weaver/bcel/BcelClassWeaver/matchInvokeInstruction(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InvokeInstruction,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#org/aspectj/apache/bcel/generic/InvokeInstruction/getName(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelClassWeaver/matchInvokeInstruction(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InvokeInstruction,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#org/aspectj/weaver/AjAttribute$EffectiveSignatureAttribute/getShadowKind()
org/aspectj/weaver/bcel/BcelClassWeaver/matchInvokeInstruction(org.aspectj.weaver.bcel.LazyMethodGen,org.aspectj.apache.bcel.generic.InstructionHandle,org.aspectj.apache.bcel.generic.InvokeInstruction,org.aspectj.weaver.bcel.BcelShadow,java.util.List)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/isOverriding(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,java.lang.String,java.lang.String,int,boolean,org.aspectj.weaver.UnresolvedType[])#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/isOverriding(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,java.lang.String,java.lang.String,int,boolean,org.aspectj.weaver.UnresolvedType[])#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelClassWeaver/isOverriding(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,java.lang.String,java.lang.String,int,boolean,org.aspectj.weaver.UnresolvedType[])#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/isOverriding(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,java.lang.String,java.lang.String,int,boolean,org.aspectj.weaver.UnresolvedType[])#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/isOverriding(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,java.lang.String,java.lang.String,int,boolean,org.aspectj.weaver.UnresolvedType[])#java/lang/reflect/Modifier/isStatic(int)
org/aspectj/weaver/bcel/BcelClassWeaver/isOverriding(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,java.lang.String,java.lang.String,int,boolean,org.aspectj.weaver.UnresolvedType[])#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelClassWeaver/isOverriding(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,java.lang.String,java.lang.String,int,boolean,org.aspectj.weaver.UnresolvedType[])#java/lang/reflect/Modifier/isPrivate(int)
org/aspectj/weaver/bcel/BcelClassWeaver/isOverriding(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,java.lang.String,java.lang.String,int,boolean,org.aspectj.weaver.UnresolvedType[])#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/bcel/BcelClassWeaver/isOverriding(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,java.lang.String,java.lang.String,int,boolean,org.aspectj.weaver.UnresolvedType[])#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/isOverriding(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,java.lang.String,java.lang.String,int,boolean,org.aspectj.weaver.UnresolvedType[])#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/bcel/BcelClassWeaver/isOverriding(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,java.lang.String,java.lang.String,int,boolean,org.aspectj.weaver.UnresolvedType[])#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelClassWeaver/isOverriding(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,java.lang.String,java.lang.String,int,boolean,org.aspectj.weaver.UnresolvedType[])#org/aspectj/weaver/ResolvedType/isParameterizedType()
org/aspectj/weaver/bcel/BcelClassWeaver/transformSynchronizedMethod(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelClassWeaver/transformSynchronizedMethod(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/List/isEmpty()
org/aspectj/weaver/bcel/BcelClassWeaver/transformSynchronizedMethod(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/List/size()
org/aspectj/weaver/bcel/BcelClassWeaver/transformSynchronizedMethod(org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelClassWeaver/transformSynchronizedMethod(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/transformSynchronizedMethod(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelClassWeaver/transformSynchronizedMethod(org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/transformSynchronizedMethod(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelClassWeaver/transformSynchronizedMethod(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/Set/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/transformSynchronizedMethod(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/transformSynchronizedMethod(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/BcelClassWeaver/transformSynchronizedMethod(org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/transformSynchronizedMethod(org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelClassWeaver/checkForOverride(org.aspectj.weaver.ResolvedType,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.aspectj.weaver.UnresolvedType[],java.util.List)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelClassWeaver/checkForOverride(org.aspectj.weaver.ResolvedType,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.aspectj.weaver.UnresolvedType[],java.util.List)#org/aspectj/weaver/bcel/BcelTypeMunger/getSignature()
org/aspectj/weaver/bcel/BcelClassWeaver/checkForOverride(org.aspectj.weaver.ResolvedType,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.aspectj.weaver.UnresolvedType[],java.util.List)#org/aspectj/weaver/ResolvedType/isRawType()
org/aspectj/weaver/bcel/BcelClassWeaver/checkForOverride(org.aspectj.weaver.ResolvedType,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.aspectj.weaver.UnresolvedType[],java.util.List)#org/aspectj/weaver/bcel/BcelTypeMunger/getMunger()
org/aspectj/weaver/bcel/BcelClassWeaver/checkForOverride(org.aspectj.weaver.ResolvedType,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.aspectj.weaver.UnresolvedType[],java.util.List)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelClassWeaver/checkForOverride(org.aspectj.weaver.ResolvedType,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.aspectj.weaver.UnresolvedType[],java.util.List)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/checkForOverride(org.aspectj.weaver.ResolvedType,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.aspectj.weaver.UnresolvedType[],java.util.List)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelClassWeaver/checkForOverride(org.aspectj.weaver.ResolvedType,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.aspectj.weaver.UnresolvedType[],java.util.List)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/checkForOverride(org.aspectj.weaver.ResolvedType,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.aspectj.weaver.UnresolvedType[],java.util.List)#org/aspectj/weaver/ReferenceType/getInterTypeMungers()
org/aspectj/weaver/bcel/BcelClassWeaver/checkForOverride(org.aspectj.weaver.ResolvedType,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.aspectj.weaver.UnresolvedType[],java.util.List)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelClassWeaver/checkForOverride(org.aspectj.weaver.ResolvedType,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.aspectj.weaver.UnresolvedType[],java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/checkForOverride(org.aspectj.weaver.ResolvedType,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.aspectj.weaver.UnresolvedType[],java.util.List)#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/bcel/BcelClassWeaver/checkForOverride(org.aspectj.weaver.ResolvedType,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.aspectj.weaver.UnresolvedType[],java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/checkForOverride(org.aspectj.weaver.ResolvedType,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.aspectj.weaver.UnresolvedType[],java.util.List)#org/aspectj/weaver/ResolvedType/getPackageName()
org/aspectj/weaver/bcel/BcelClassWeaver/checkForOverride(org.aspectj.weaver.ResolvedType,java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,org.aspectj.weaver.UnresolvedType[],java.util.List)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#java/util/List/isEmpty()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#org/aspectj/weaver/bcel/BcelTypeMunger/getAspectType()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#org/aspectj/weaver/Lint$Kind/isEnabled()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#org/aspectj/weaver/bcel/BcelWorld/getLint()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#org/aspectj/weaver/bcel/BcelObjectType/getSourceLocation()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#org/aspectj/weaver/ResolvedType/getSignature()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#org/aspectj/weaver/bcel/BcelWorld/isJoinpointSynchronizationEnabled()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#java/util/ArrayList/ArrayList(java.util.Collection)
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#org/aspectj/weaver/bcel/BcelWorld/isOverWeaving()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#java/util/Set/addAll(java.util.Collection)
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#java/util/Map/values()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#org/aspectj/weaver/Lint$Kind/signal(java.lang.String,org.aspectj.bridge.ISourceLocation)
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#org/aspectj/weaver/bcel/BcelWorld/areSynchronizationPointcutsInUse()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#java/util/HashSet/HashSet()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#org/aspectj/weaver/bcel/BcelTypeMunger/matches(org.aspectj.weaver.ResolvedType)
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#org/aspectj/weaver/bcel/BcelMethod/wipeJoinpointSignatures()
org/aspectj/weaver/bcel/BcelClassWeaver/weave()#org/aspectj/apache/bcel/classfile/Method/isSynchronized()
org/aspectj/weaver/tools/TraceFactory/<clinit>()#java/lang/Class/forName(java.lang.String)
org/aspectj/weaver/tools/TraceFactory/<clinit>()#java/lang/Throwable/printStackTrace()
org/aspectj/weaver/tools/TraceFactory/<clinit>()#java/lang/Class/newInstance()
org/aspectj/weaver/tools/TraceFactory/<clinit>()#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/tools/TraceFactory/<clinit>()#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/tools/TraceFactory/<clinit>()#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/TraceFactory/<clinit>()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/TraceFactory/<clinit>()#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/tools/TraceFactory/<clinit>()#java/lang/System/getProperty(java.lang.String)
org/aspectj/weaver/tools/TraceFactory/<clinit>()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/CrosscuttingMembersSet/getTypeMungers()#java/util/ArrayList/ArrayList()
org/aspectj/weaver/CrosscuttingMembersSet/getTypeMungers()#java/util/Iterator/hasNext()
org/aspectj/weaver/CrosscuttingMembersSet/getTypeMungers()#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/CrosscuttingMembersSet/getTypeMungers()#java/util/Map/values()
org/aspectj/weaver/CrosscuttingMembersSet/getTypeMungers()#java/util/Iterator/next()
org/aspectj/weaver/CrosscuttingMembersSet/getTypeMungers()#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/CrosscuttingMembersSet/getTypeMungers()#java/util/List/add(java.lang.Object)
org/aspectj/weaver/CrosscuttingMembersSet/getTypeMungers()#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/CrosscuttingMembersSet/getTypeMungers()#java/util/List/iterator()
org/aspectj/weaver/CrosscuttingMembersSet/getTypeMungers()#java/util/Collection/iterator()
org/aspectj/weaver/CrosscuttingMembers/replaceWith(org.aspectj.weaver.CrosscuttingMembers,boolean)#java/lang/Object/equals(java.lang.Object)
org/aspectj/weaver/CrosscuttingMembers/replaceWith(org.aspectj.weaver.CrosscuttingMembers,boolean)#java/util/Set/size()
org/aspectj/weaver/CrosscuttingMembers/replaceWith(org.aspectj.weaver.CrosscuttingMembers,boolean)#java/util/Iterator/next()
org/aspectj/weaver/CrosscuttingMembers/replaceWith(org.aspectj.weaver.CrosscuttingMembers,boolean)#java/util/Set/equals(java.lang.Object)
org/aspectj/weaver/CrosscuttingMembers/replaceWith(org.aspectj.weaver.CrosscuttingMembers,boolean)#java/util/Set/iterator()
org/aspectj/weaver/CrosscuttingMembers/replaceWith(org.aspectj.weaver.CrosscuttingMembers,boolean)#java/util/List/get(int)
org/aspectj/weaver/CrosscuttingMembers/replaceWith(org.aspectj.weaver.CrosscuttingMembers,boolean)#java/util/List/equals(java.lang.Object)
org/aspectj/weaver/CrosscuttingMembers/replaceWith(org.aspectj.weaver.CrosscuttingMembers,boolean)#java/util/List/iterator()
org/aspectj/weaver/CrosscuttingMembers/replaceWith(org.aspectj.weaver.CrosscuttingMembers,boolean)#java/util/HashSet/HashSet()
org/aspectj/weaver/CrosscuttingMembers/replaceWith(org.aspectj.weaver.CrosscuttingMembers,boolean)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/CrosscuttingMembers/replaceWith(org.aspectj.weaver.CrosscuttingMembers,boolean)#java/util/List/indexOf(java.lang.Object)
org/aspectj/weaver/CrosscuttingMembers/replaceWith(org.aspectj.weaver.CrosscuttingMembers,boolean)#java/util/Iterator/hasNext()
org/aspectj/weaver/CrosscuttingMembers/replaceWith(org.aspectj.weaver.CrosscuttingMembers,boolean)#java/util/Set/addAll(java.util.Collection)
org/aspectj/weaver/NewMethodTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/isRawType()
org/aspectj/weaver/NewMethodTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getTypeParameters()
org/aspectj/weaver/NewMethodTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/NewMethodTypeMunger/setSourceLocation(org.aspectj.bridge.ISourceLocation)
org/aspectj/weaver/NewMethodTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/isGenericType()
org/aspectj/weaver/NewMethodTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/isParameterizedType()
org/aspectj/weaver/NewMethodTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/NewMethodTypeMunger/getSourceLocation()
org/aspectj/weaver/NewMethodTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/NewMethodTypeMunger/setDeclaredSignature(org.aspectj.weaver.ResolvedMember)
org/aspectj/weaver/NewMethodTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getTypeVariables()
org/aspectj/weaver/NewMethodTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/NewMethodTypeMunger/getSuperMethodsCalled()
org/aspectj/weaver/NewMethodTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/NewMethodTypeMunger/getSignature()
org/aspectj/weaver/tools/WeavingAdaptor/weaveClass(java.lang.String,byte[],boolean)#java/lang/ThreadLocal/get()
org/aspectj/weaver/tools/WeavingAdaptor/weaveClass(java.lang.String,byte[],boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/WeavingAdaptor/weaveClass(java.lang.String,byte[],boolean)#java/lang/Boolean/booleanValue()
org/aspectj/weaver/tools/WeavingAdaptor/weaveClass(java.lang.String,byte[],boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/WeavingAdaptor/weaveClass(java.lang.String,byte[],boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/WeavingAdaptor/weaveClass(java.lang.String,byte[],boolean)#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/tools/WeavingAdaptor/weaveClass(java.lang.String,byte[],boolean)#java/lang/ThreadLocal/set(java.lang.Object)
org/aspectj/weaver/tools/WeavingAdaptor/weaveClass(java.lang.String,byte[],boolean)#java/util/Arrays/equals(byte[],byte[])
org/aspectj/weaver/tools/WeavingAdaptor/weaveClass(java.lang.String,byte[],boolean)#java/lang/Boolean/valueOf(boolean)
org/aspectj/weaver/tools/WeavingAdaptor/weaveClass(java.lang.String,byte[],boolean)#java/lang/String/replace(char,char)
org/aspectj/weaver/tools/WeavingAdaptor/dump(java.lang.String,byte[],boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/WeavingAdaptor/dump(java.lang.String,byte[],boolean)#java/lang/String/substring(int,int)
org/aspectj/weaver/tools/WeavingAdaptor/dump(java.lang.String,byte[],boolean)#java/lang/String/replace(char,char)
org/aspectj/weaver/tools/WeavingAdaptor/dump(java.lang.String,byte[],boolean)#java/io/File/mkdirs()
org/aspectj/weaver/tools/WeavingAdaptor/dump(java.lang.String,byte[],boolean)#java/io/FileOutputStream/close()
org/aspectj/weaver/tools/WeavingAdaptor/dump(java.lang.String,byte[],boolean)#java/lang/String/indexOf(int)
org/aspectj/weaver/tools/WeavingAdaptor/dump(java.lang.String,byte[],boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/WeavingAdaptor/dump(java.lang.String,byte[],boolean)#java/io/FileOutputStream/FileOutputStream(java.lang.String)
org/aspectj/weaver/tools/WeavingAdaptor/dump(java.lang.String,byte[],boolean)#java/io/File/File(java.lang.String)
org/aspectj/weaver/tools/WeavingAdaptor/dump(java.lang.String,byte[],boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/WeavingAdaptor/dump(java.lang.String,byte[],boolean)#java/lang/String/lastIndexOf(int)
org/aspectj/weaver/tools/WeavingAdaptor/dump(java.lang.String,byte[],boolean)#java/io/FileOutputStream/write(byte[])
org/aspectj/weaver/loadtime/definition/DocumentParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/Attributes/getValue(java.lang.String)
org/aspectj/weaver/loadtime/definition/DocumentParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/SAXException/SAXException(java.lang.String)
org/aspectj/weaver/loadtime/definition/DocumentParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/loadtime/definition/DocumentParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/xml/sax/helpers/DefaultHandler/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)
org/aspectj/weaver/loadtime/definition/DocumentParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/aspectj/weaver/loadtime/definition/Definition$ConcreteAspect/ConcreteAspect(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/aspectj/weaver/loadtime/definition/DocumentParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/aspectj/weaver/loadtime/definition/Definition$Pointcut/Pointcut(java.lang.String,java.lang.String)
org/aspectj/weaver/loadtime/definition/DocumentParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/loadtime/definition/DocumentParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/loadtime/definition/DocumentParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/aspectj/weaver/loadtime/definition/Definition$PointcutAndAdvice/PointcutAndAdvice(org.aspectj.weaver.loadtime.definition.Definition$AdviceKind,java.lang.String,java.lang.String,java.lang.String)
org/aspectj/weaver/loadtime/definition/DocumentParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#org/aspectj/weaver/loadtime/definition/Definition$DeclareAnnotation/DeclareAnnotation(org.aspectj.weaver.loadtime.definition.Definition$DeclareAnnotationKind,java.lang.String,java.lang.String)
org/aspectj/weaver/loadtime/definition/DocumentParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/loadtime/definition/DocumentParser/startElement(java.lang.String,java.lang.String,java.lang.String,org.xml.sax.Attributes)#java/lang/StringBuilder/toString()
org/aspectj/util/LangUtil/ProcessController/stop(java.lang.Throwable,int)#java/lang/Process/destroy()
org/aspectj/util/LangUtil/ProcessController/stop(java.lang.Throwable,int)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/util/LangUtil/ProcessController/stop(java.lang.Throwable,int)#org/aspectj/util/FileUtil$Pipe/halt(boolean,boolean)
org/aspectj/util/LangUtil/ProcessController/stop(java.lang.Throwable,int)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/LangUtil/ProcessController/stop(java.lang.Throwable,int)#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/LangUtil/ProcessController/stop(java.lang.Throwable,int)#org/aspectj/util/LangUtil$ProcessController/makeThrown(java.lang.Throwable)
org/aspectj/util/LangUtil/ProcessController/stop(java.lang.Throwable,int)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/util/LangUtil/ProcessController/stop(java.lang.Throwable,int)#org/aspectj/util/LangUtil$ProcessController/doCompleting(org.aspectj.util.LangUtil$ProcessController$Thrown,int)
org/aspectj/util/LangUtil/ProcessController/stop(java.lang.Throwable,int)#java/lang/StringBuilder/toString()
org/aspectj/util/LangUtil/ProcessController/start()#java/lang/Process/getErrorStream()
org/aspectj/util/LangUtil/ProcessController/start()#org/aspectj/util/FileUtil$Pipe/setSnoop(java.io.ByteArrayOutputStream)
org/aspectj/util/LangUtil/ProcessController/start()#java/lang/Process/getInputStream()
org/aspectj/util/LangUtil/ProcessController/start()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/util/LangUtil/ProcessController/start()#java/lang/Runtime/getRuntime()
org/aspectj/util/LangUtil/ProcessController/start()#org/aspectj/util/LangUtil$ProcessController/stop(java.lang.Throwable,int)
org/aspectj/util/LangUtil/ProcessController/start()#org/aspectj/util/LangUtil$ProcessController$1/1(org.aspectj.util.LangUtil$ProcessController)
org/aspectj/util/LangUtil/ProcessController/start()#java/lang/Thread/start()
org/aspectj/util/LangUtil/ProcessController/start()#java/lang/Runtime/exec(java.lang.String[])
org/aspectj/util/LangUtil/ProcessController/start()#java/lang/Process/getOutputStream()
org/aspectj/util/LangUtil/ProcessController/start()#java/lang/Thread/Thread(java.lang.Runnable,java.lang.String)
org/aspectj/util/LangUtil/ProcessController/start()#org/aspectj/util/FileUtil$Pipe/Pipe(java.io.InputStream,java.io.OutputStream)
org/aspectj/weaver/MemberImpl/signatureToTypes(java.lang.String)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/MemberImpl/signatureToTypes(java.lang.String)#java/lang/String/charAt(int)
org/aspectj/weaver/MemberImpl/signatureToTypes(java.lang.String)#java/lang/String/length()
org/aspectj/weaver/MemberImpl/signatureToTypes(java.lang.String)#java/util/List/size()
org/aspectj/weaver/MemberImpl/signatureToTypes(java.lang.String)#java/util/List/toArray(java.lang.Object[])
org/aspectj/weaver/MemberImpl/signatureToTypes(java.lang.String)#java/lang/String/substring(int,int)
org/aspectj/weaver/MemberImpl/signatureToTypes(java.lang.String)#java/lang/String/substring(int)
org/aspectj/weaver/MemberImpl/signatureToTypes(java.lang.String)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/MemberImpl/signatureToTypes(java.lang.String)#java/lang/String/indexOf(int,int)
org/aspectj/weaver/MemberImpl/signatureToTypes(java.lang.String)#java/lang/String/indexOf(int)
org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getDeclaredPointcuts()#org/aspectj/weaver/reflect/InternalUseOnlyPointcutParser/createPointcutParameter(java.lang.String,java.lang.Class)
org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getDeclaredPointcuts()#org/aspectj/weaver/reflect/InternalUseOnlyPointcutParser/registerPointcutDesignatorHandler(org.aspectj.weaver.tools.PointcutDesignatorHandler)
org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getDeclaredPointcuts()#java/util/Set/iterator()
org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getDeclaredPointcuts()#org/aspectj/weaver/ReferenceType/getName()
org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getDeclaredPointcuts()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getDeclaredPointcuts()#java/lang/Object/toString()
org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getDeclaredPointcuts()#java/util/Iterator/hasNext()
org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getDeclaredPointcuts()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getDeclaredPointcuts()#org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getResolvedTypeX()
org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getDeclaredPointcuts()#org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getBaseClass()
org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getDeclaredPointcuts()#java/util/Iterator/next()
org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getDeclaredPointcuts()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getDeclaredPointcuts()#org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getWorld()
org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getDeclaredPointcuts()#org/aspectj/weaver/ResolvedPointcutDefinition/setParameterNames(java.lang.String[])
org/aspectj/weaver/reflect/Java15ReflectionBasedReferenceTypeDelegate/getDeclaredPointcuts()#java/lang/StringBuilder/toString()
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/lang/Integer/intValue()
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/util/Iterator/hasNext()
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/lang/Integer/Integer(int)
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/lang/Integer/Integer(java.lang.String)
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/lang/String/toCharArray()
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#org/aspectj/asm/IProgramElement$Kind/isInterTypeMember()
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/lang/Object/equals(java.lang.Object)
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/lang/Integer/toString()
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/util/Iterator/next()
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/lang/String/equals(java.lang.Object)
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/lang/String/substring(int,int)
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/lang/String/indexOf(java.lang.String)
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/lang/String/lastIndexOf(int)
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/lang/String/substring(int)
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/util/List/iterator()
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/lang/String/lastIndexOf(java.lang.String)
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/lang/String/indexOf(int)
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#org/aspectj/asm/IProgramElement$Kind/isDeclare()
org/aspectj/asm/internal/JDTLikeHandleProvider/getCount(org.aspectj.asm.IProgramElement)#java/lang/String/endsWith(java.lang.String)
org/aspectj/asm/internal/JDTLikeHandleProvider/getParameters(org.aspectj.asm.IProgramElement)#java/util/Iterator/hasNext()
org/aspectj/asm/internal/JDTLikeHandleProvider/getParameters(org.aspectj.asm.IProgramElement)#java/lang/StringBuffer/append(char[])
org/aspectj/asm/internal/JDTLikeHandleProvider/getParameters(org.aspectj.asm.IProgramElement)#java/lang/StringBuffer/append(char)
org/aspectj/asm/internal/JDTLikeHandleProvider/getParameters(org.aspectj.asm.IProgramElement)#java/util/List/isEmpty()
org/aspectj/asm/internal/JDTLikeHandleProvider/getParameters(org.aspectj.asm.IProgramElement)#java/util/List/size()
org/aspectj/asm/internal/JDTLikeHandleProvider/getParameters(org.aspectj.asm.IProgramElement)#java/util/Iterator/next()
org/aspectj/asm/internal/JDTLikeHandleProvider/getParameters(org.aspectj.asm.IProgramElement)#java/util/List/get(int)
org/aspectj/asm/internal/JDTLikeHandleProvider/getParameters(org.aspectj.asm.IProgramElement)#java/lang/StringBuffer/StringBuffer()
org/aspectj/asm/internal/JDTLikeHandleProvider/getParameters(org.aspectj.asm.IProgramElement)#java/lang/StringBuffer/toString()
org/aspectj/asm/internal/JDTLikeHandleProvider/getParameters(org.aspectj.asm.IProgramElement)#java/util/List/iterator()
org/aspectj/asm/internal/JDTLikeHandleProvider/getParameters(org.aspectj.asm.IProgramElement)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/asm/internal/JDTLikeHandleProvider/computeCountBasedOnPeers(org.aspectj.asm.IProgramElement)#java/lang/Integer/intValue()
org/aspectj/asm/internal/JDTLikeHandleProvider/computeCountBasedOnPeers(org.aspectj.asm.IProgramElement)#java/util/Iterator/hasNext()
org/aspectj/asm/internal/JDTLikeHandleProvider/computeCountBasedOnPeers(org.aspectj.asm.IProgramElement)#java/util/Iterator/next()
org/aspectj/asm/internal/JDTLikeHandleProvider/computeCountBasedOnPeers(org.aspectj.asm.IProgramElement)#java/lang/String/substring(int)
org/aspectj/asm/internal/JDTLikeHandleProvider/computeCountBasedOnPeers(org.aspectj.asm.IProgramElement)#java/lang/Integer/Integer(java.lang.String)
org/aspectj/asm/internal/JDTLikeHandleProvider/computeCountBasedOnPeers(org.aspectj.asm.IProgramElement)#java/util/List/iterator()
org/aspectj/asm/internal/JDTLikeHandleProvider/computeCountBasedOnPeers(org.aspectj.asm.IProgramElement)#java/lang/String/indexOf(int)
org/aspectj/asm/internal/JDTLikeHandleProvider/computeCountBasedOnPeers(org.aspectj.asm.IProgramElement)#org/aspectj/asm/IProgramElement$Kind/toString()
org/aspectj/asm/internal/JDTLikeHandleProvider/computeCountBasedOnPeers(org.aspectj.asm.IProgramElement)#java/lang/Object/equals(java.lang.Object)
org/aspectj/asm/internal/JDTLikeHandleProvider/computeCountBasedOnPeers(org.aspectj.asm.IProgramElement)#java/lang/String/equals(java.lang.Object)
org/aspectj/asm/internal/JDTLikeHandleProvider/createHandleIdentifier(org.aspectj.asm.IProgramElement)#java/lang/Object/equals(java.lang.Object)
org/aspectj/asm/internal/JDTLikeHandleProvider/createHandleIdentifier(org.aspectj.asm.IProgramElement)#java/lang/StringBuffer/append(char[])
org/aspectj/asm/internal/JDTLikeHandleProvider/createHandleIdentifier(org.aspectj.asm.IProgramElement)#java/lang/StringBuffer/append(char)
org/aspectj/asm/internal/JDTLikeHandleProvider/createHandleIdentifier(org.aspectj.asm.IProgramElement)#java/lang/String/length()
org/aspectj/asm/internal/JDTLikeHandleProvider/createHandleIdentifier(org.aspectj.asm.IProgramElement)#org/aspectj/asm/IProgramElement$Kind/isDeclareAnnotation()
org/aspectj/asm/internal/JDTLikeHandleProvider/createHandleIdentifier(org.aspectj.asm.IProgramElement)#java/lang/String/indexOf(java.lang.String)
org/aspectj/asm/internal/JDTLikeHandleProvider/createHandleIdentifier(org.aspectj.asm.IProgramElement)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/asm/internal/JDTLikeHandleProvider/createHandleIdentifier(org.aspectj.asm.IProgramElement)#java/lang/String/equals(java.lang.Object)
org/aspectj/asm/internal/JDTLikeHandleProvider/createHandleIdentifier(org.aspectj.asm.IProgramElement)#java/lang/StringBuffer/toString()
org/aspectj/asm/internal/JDTLikeHandleProvider/createHandleIdentifier(org.aspectj.asm.IProgramElement)#java/lang/String/substring(int,int)
org/aspectj/asm/internal/JDTLikeHandleProvider/createHandleIdentifier(org.aspectj.asm.IProgramElement)#java/lang/String/substring(int)
org/aspectj/asm/internal/JDTLikeHandleProvider/createHandleIdentifier(org.aspectj.asm.IProgramElement)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/aspectj/asm/internal/JDTLikeHandleProvider/createHandleIdentifier(org.aspectj.asm.IProgramElement)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/aspectj/asm/internal/JDTLikeHandleProvider/createHandleIdentifier(org.aspectj.asm.IProgramElement)#java/lang/String/lastIndexOf(java.lang.String)
org/aspectj/asm/internal/JDTLikeHandleProvider/createHandleIdentifier(org.aspectj.asm.IProgramElement)#java/lang/StringBuffer/StringBuffer()
org/aspectj/asm/internal/JDTLikeHandleProvider/createHandleIdentifier(org.aspectj.asm.IProgramElement)#java/lang/String/endsWith(java.lang.String)
org/aspectj/asm/internal/AspectJElementHierarchy/findClassInNodes(java.util.Collection,java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/aspectj/asm/internal/AspectJElementHierarchy/findClassInNodes(java.util.Collection,java.lang.String,java.lang.String)#java/util/List/isEmpty()
org/aspectj/asm/internal/AspectJElementHierarchy/findClassInNodes(java.util.Collection,java.lang.String,java.lang.String)#java/util/Iterator/next()
org/aspectj/asm/internal/AspectJElementHierarchy/findClassInNodes(java.util.Collection,java.lang.String,java.lang.String)#java/lang/String/equals(java.lang.Object)
org/aspectj/asm/internal/AspectJElementHierarchy/findClassInNodes(java.util.Collection,java.lang.String,java.lang.String)#java/lang/String/substring(int)
org/aspectj/asm/internal/AspectJElementHierarchy/findClassInNodes(java.util.Collection,java.lang.String,java.lang.String)#java/util/Collection/iterator()
org/aspectj/asm/internal/AspectJElementHierarchy/findClassInNodes(java.util.Collection,java.lang.String,java.lang.String)#java/lang/String/indexOf(int)
org/aspectj/asm/internal/AspectJElementHierarchy/findClassInNodes(java.util.Collection,java.lang.String,java.lang.String)#java/lang/String/substring(int,int)
org/aspectj/asm/internal/AspectJElementHierarchy/findClassInNodes(java.util.Collection,java.lang.String,java.lang.String)#org/aspectj/asm/IProgramElement$Kind/isType()
org/aspectj/asm/internal/AspectJElementHierarchy/findElementForType(java.lang.String,java.lang.String)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/asm/internal/AspectJElementHierarchy/findElementForType(java.lang.String,java.lang.String)#java/util/Iterator/hasNext()
org/aspectj/asm/internal/AspectJElementHierarchy/findElementForType(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/internal/AspectJElementHierarchy/findElementForType(java.lang.String,java.lang.String)#java/util/Map/get(java.lang.Object)
org/aspectj/asm/internal/AspectJElementHierarchy/findElementForType(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/asm/internal/AspectJElementHierarchy/findElementForType(java.lang.String,java.lang.String)#java/util/Iterator/next()
org/aspectj/asm/internal/AspectJElementHierarchy/findElementForType(java.lang.String,java.lang.String)#java/util/List/iterator()
org/aspectj/asm/internal/AspectJElementHierarchy/findElementForType(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/asm/internal/AspectJElementHierarchy/findElementForType(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/internal/AspectJElementHierarchy/findMatchingPackages(java.lang.String)#java/util/ArrayList/ArrayList()
org/aspectj/asm/internal/AspectJElementHierarchy/findMatchingPackages(java.lang.String)#java/util/Iterator/hasNext()
org/aspectj/asm/internal/AspectJElementHierarchy/findMatchingPackages(java.lang.String)#java/util/List/isEmpty()
org/aspectj/asm/internal/AspectJElementHierarchy/findMatchingPackages(java.lang.String)#java/util/Collections/emptyList()
org/aspectj/asm/internal/AspectJElementHierarchy/findMatchingPackages(java.lang.String)#java/util/List/size()
org/aspectj/asm/internal/AspectJElementHierarchy/findMatchingPackages(java.lang.String)#java/util/Iterator/next()
org/aspectj/asm/internal/AspectJElementHierarchy/findMatchingPackages(java.lang.String)#java/lang/String/equals(java.lang.Object)
org/aspectj/asm/internal/AspectJElementHierarchy/findMatchingPackages(java.lang.String)#java/util/List/add(java.lang.Object)
org/aspectj/asm/internal/AspectJElementHierarchy/findMatchingPackages(java.lang.String)#java/util/List/get(int)
org/aspectj/asm/internal/AspectJElementHierarchy/findMatchingPackages(java.lang.String)#java/util/List/iterator()
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/util/ArrayList/ArrayList()
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/util/Iterator/hasNext()
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/util/Map/get(java.lang.Object)
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/util/Set/contains(java.lang.Object)
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/util/Set/iterator()
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/util/List/clear()
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/util/List/add(java.lang.Object)
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/util/Map$Entry/getValue()
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/util/List/iterator()
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/util/Map/entrySet()
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/util/Map/remove(java.lang.Object)
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/lang/StringBuilder/toString()
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/util/Map$Entry/getKey()
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/io/PrintStream/println(java.lang.String)
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/util/Iterator/next()
org/aspectj/asm/internal/AspectJElementHierarchy/updateHandleMap(java.util.Set)#java/util/Map/keySet()
org/aspectj/asm/internal/AspectJElementHierarchy/toSummaryString()#java/util/Iterator/hasNext()
org/aspectj/asm/internal/AspectJElementHierarchy/toSummaryString()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/internal/AspectJElementHierarchy/toSummaryString()#java/lang/StringBuilder/append(int)
org/aspectj/asm/internal/AspectJElementHierarchy/toSummaryString()#java/util/Map/size()
org/aspectj/asm/internal/AspectJElementHierarchy/toSummaryString()#java/util/Iterator/next()
org/aspectj/asm/internal/AspectJElementHierarchy/toSummaryString()#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/internal/AspectJElementHierarchy/toSummaryString()#java/util/Set/iterator()
org/aspectj/asm/internal/AspectJElementHierarchy/toSummaryString()#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/asm/internal/AspectJElementHierarchy/toSummaryString()#java/util/Map/entrySet()
org/aspectj/asm/internal/AspectJElementHierarchy/toSummaryString()#java/lang/StringBuilder/toString()
org/aspectj/util/LangUtil/ProcessController/1/run()#org/aspectj/util/LangUtil$ProcessController/access$400(org.aspectj.util.LangUtil$ProcessController,java.lang.Throwable,int)
org/aspectj/util/LangUtil/ProcessController/1/run()#org/aspectj/util/LangUtil$ProcessController/access$300(org.aspectj.util.LangUtil$ProcessController)
org/aspectj/util/LangUtil/ProcessController/1/run()#org/aspectj/util/LangUtil$ProcessController/access$200(org.aspectj.util.LangUtil$ProcessController)
org/aspectj/util/LangUtil/ProcessController/1/run()#org/aspectj/util/LangUtil$ProcessController/access$000(org.aspectj.util.LangUtil$ProcessController)
org/aspectj/util/LangUtil/ProcessController/1/run()#java/lang/Thread/Thread(java.lang.Runnable)
org/aspectj/util/LangUtil/ProcessController/1/run()#java/lang/Process/exitValue()
org/aspectj/util/LangUtil/ProcessController/1/run()#java/lang/Process/waitFor()
org/aspectj/util/LangUtil/ProcessController/1/run()#java/lang/Thread/start()
org/aspectj/util/LangUtil/ProcessController/1/run()#org/aspectj/util/LangUtil$ProcessController/access$100(org.aspectj.util.LangUtil$ProcessController)
org/aspectj/asm/AsmManager/ModelInfo/toString()#java/util/Properties/getProperty(java.lang.String)
org/aspectj/asm/AsmManager/ModelInfo/toString()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/asm/AsmManager/ModelInfo/toString()#java/util/Properties/keys()
org/aspectj/asm/AsmManager/ModelInfo/toString()#java/util/Hashtable/get(java.lang.Object)
org/aspectj/asm/AsmManager/ModelInfo/toString()#java/lang/StringBuffer/toString()
org/aspectj/asm/AsmManager/ModelInfo/toString()#java/lang/StringBuilder/StringBuilder()
org/aspectj/asm/AsmManager/ModelInfo/toString()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/asm/AsmManager/ModelInfo/toString()#java/lang/StringBuffer/StringBuffer()
org/aspectj/asm/AsmManager/ModelInfo/toString()#java/lang/StringBuilder/toString()
org/aspectj/asm/AsmManager/ModelInfo/toString()#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/asm/AsmManager/ModelInfo/toString()#java/util/Enumeration/hasMoreElements()
org/aspectj/asm/AsmManager/ModelInfo/toString()#java/util/Enumeration/nextElement()
org/aspectj/asm/AsmManager/ModelInfo/toString()#java/util/Hashtable/keys()
org/aspectj/asm/AsmManager/ModelInfo/getProperties()#java/util/Properties/putAll(java.util.Map)
org/aspectj/asm/AsmManager/ModelInfo/getProperties()#java/util/Properties/setProperty(java.lang.String,java.lang.String)
org/aspectj/asm/AsmManager/ModelInfo/getProperties()#java/util/Iterator/hasNext()
org/aspectj/asm/AsmManager/ModelInfo/getProperties()#java/util/Map$Entry/getKey()
org/aspectj/asm/AsmManager/ModelInfo/getProperties()#java/lang/Integer/toString()
org/aspectj/asm/AsmManager/ModelInfo/getProperties()#java/util/Iterator/next()
org/aspectj/asm/AsmManager/ModelInfo/getProperties()#java/util/Properties/Properties()
org/aspectj/asm/AsmManager/ModelInfo/getProperties()#java/util/Set/iterator()
org/aspectj/asm/AsmManager/ModelInfo/getProperties()#java/util/Hashtable/entrySet()
org/aspectj/asm/AsmManager/ModelInfo/getProperties()#java/util/Map$Entry/getValue()
org/aspectj/apache/bcel/util/ClassLoaderRepository/report()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/util/ClassLoaderRepository/report()#java/lang/StringBuilder/append(int)
org/aspectj/apache/bcel/util/ClassLoaderRepository/report()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/util/ClassLoaderRepository/report()#java/lang/StringBuilder/append(long)
org/aspectj/apache/bcel/util/ClassLoaderRepository/report()#java/lang/StringBuffer/toString()
org/aspectj/apache/bcel/util/ClassLoaderRepository/report()#java/util/WeakHashMap/size()
org/aspectj/apache/bcel/util/ClassLoaderRepository/report()#org/aspectj/apache/bcel/util/ClassLoaderRepository$SoftHashMap/size()
org/aspectj/apache/bcel/util/ClassLoaderRepository/report()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/util/ClassLoaderRepository/report()#java/lang/StringBuffer/StringBuffer()
org/aspectj/apache/bcel/util/ClassLoaderRepository/report()#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/util/ClassLoaderRepository/loadClass(java.lang.String)#java/lang/ClassLoader/getResourceAsStream(java.lang.String)
org/aspectj/apache/bcel/util/ClassLoaderRepository/loadClass(java.lang.String)#java/lang/ClassNotFoundException/ClassNotFoundException(java.lang.String)
org/aspectj/apache/bcel/util/ClassLoaderRepository/loadClass(java.lang.String)#java/net/URL/openStream()
org/aspectj/apache/bcel/util/ClassLoaderRepository/loadClass(java.lang.String)#java/lang/String/valueOf(java.lang.Object)
org/aspectj/apache/bcel/util/ClassLoaderRepository/loadClass(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/util/ClassLoaderRepository/loadClass(java.lang.String)#java/io/IOException/toString()
org/aspectj/apache/bcel/util/ClassLoaderRepository/loadClass(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/util/ClassLoaderRepository/loadClass(java.lang.String)#java/lang/String/replace(char,char)
org/aspectj/apache/bcel/util/ClassLoaderRepository/loadClass(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/apache/bcel/util/ClassLoaderRepository/loadClass(java.lang.String)#java/lang/System/currentTimeMillis()
org/aspectj/apache/bcel/util/ClassLoaderRepository/loadClass(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/print()#org/aspectj/weaver/bcel/LazyMethodGen$BodyPrinter/printRangeString(org.aspectj.weaver.bcel.Range,int)
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/print()#java/lang/StringBuilder/append(int)
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/print()#java/io/PrintStream/println()
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/print()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/print()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/print()#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/print()#org/aspectj/weaver/bcel/LazyMethodGen$BodyPrinter/printInstruction(org.aspectj.apache.bcel.generic.InstructionHandle,int)
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/print()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/print()#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/assignLabels()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/assignLabels()#java/lang/StringBuilder/append(int)
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/assignLabels()#java/util/Iterator/next()
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/assignLabels()#java/util/LinkedList/LinkedList()
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/assignLabels()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/assignLabels()#java/util/Set/iterator()
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/assignLabels()#org/aspectj/weaver/bcel/ExceptionRange/getStart()
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/assignLabels()#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/assignLabels()#java/util/LinkedList/iterator()
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/assignLabels()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/assignLabels()#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/printInstruction(org.aspectj.apache.bcel.generic.InstructionHandle,int)#java/io/PrintStream/print(java.lang.String)
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/printInstruction(org.aspectj.apache.bcel.generic.InstructionHandle,int)#java/lang/String/toUpperCase()
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/printInstruction(org.aspectj.apache.bcel.generic.InstructionHandle,int)#org/aspectj/weaver/bcel/LazyMethodGen$BodyPrinter/printDepth(int)
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/printInstruction(org.aspectj.apache.bcel.generic.InstructionHandle,int)#org/aspectj/apache/bcel/generic/InstructionSelect/getTarget()
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/printInstruction(org.aspectj.apache.bcel.generic.InstructionHandle,int)#org/aspectj/apache/bcel/generic/InstructionBranch/getOpcode()
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/printInstruction(org.aspectj.apache.bcel.generic.InstructionHandle,int)#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/printInstruction(org.aspectj.apache.bcel.generic.InstructionHandle,int)#org/aspectj/weaver/bcel/LazyMethodGen$BodyPrinter/printLabel(java.lang.String,int)
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/printInstruction(org.aspectj.apache.bcel.generic.InstructionHandle,int)#java/io/PrintStream/print(int)
org/aspectj/weaver/bcel/LazyMethodGen/BodyPrinter/printInstruction(org.aspectj.apache.bcel.generic.InstructionHandle,int)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedType/getTypeVariables()
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/setPosition(int,int)
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/parameterize(org.aspectj.weaver.UnresolvedType,java.util.Map,boolean,org.aspectj.weaver.World)
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#java/util/HashMap/HashMap()
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/getSourceContext()
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/getParameterNames()
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/getEnd()
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/getGenericReturnType()
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/getDeclaringType()
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/getStart()
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/getName()
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/getGenericParameterTypes()
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/setTypeVariables(org.aspectj.weaver.TypeVariable[])
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/getModifiers()
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/setParameterNames(java.lang.String[])
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/getTypeVariables()
org/aspectj/weaver/ResolvedPointcutDefinition/parameterizedWith(org.aspectj.weaver.UnresolvedType[],org.aspectj.weaver.ResolvedType,boolean)#org/aspectj/weaver/ResolvedPointcutDefinition/setSourceContext(org.aspectj.weaver.ISourceContext)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldSet(org.aspectj.weaver.ResolvedMember)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldSet(org.aspectj.weaver.ResolvedMember)#java/lang/reflect/Modifier/isStatic(int)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldSet(org.aspectj.weaver.ResolvedMember)#java/util/List/get(int)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldSet(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/AjAttribute$EffectiveSignatureAttribute/EffectiveSignatureAttribute(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Shadow$Kind,boolean)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldSet(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/AjAttribute$AjSynthetic/AjSynthetic()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldSet(org.aspectj.weaver.ResolvedMember)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldSet(org.aspectj.weaver.ResolvedMember)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldSet(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/bcel/BcelAccessForInlineMunger/makeMethodGen(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldSet(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldSet(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldSet(org.aspectj.weaver.ResolvedMember)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldSet(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldSet(org.aspectj.weaver.ResolvedMember)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForMethod(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/bcel/BcelAccessForInlineMunger/makeMethodGen(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForMethod(org.aspectj.weaver.ResolvedMember)#java/lang/reflect/Modifier/isStatic(int)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForMethod(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForMethod(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/AjAttribute$EffectiveSignatureAttribute/EffectiveSignatureAttribute(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Shadow$Kind,boolean)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForMethod(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/AjAttribute$AjSynthetic/AjSynthetic()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForMethod(org.aspectj.weaver.ResolvedMember)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForMethod(org.aspectj.weaver.ResolvedMember)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForMethod(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForMethod(org.aspectj.weaver.ResolvedMember)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForMethod(org.aspectj.weaver.ResolvedMember)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForMethod(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForMethod(org.aspectj.weaver.ResolvedMember)#java/util/List/get(int)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForMethod(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForMethod(org.aspectj.weaver.ResolvedMember)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/openAroundAdvice(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/ResolvedMember/getSignature()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/openAroundAdvice(org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/openAroundAdvice(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/apache/bcel/generic/InvokeInstruction/getSignature(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/openAroundAdvice(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/openAroundAdvice(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/openAroundAdvice(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/apache/bcel/generic/FieldInstruction/getName(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/openAroundAdvice(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/apache/bcel/generic/InvokeInstruction/getClassName(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/openAroundAdvice(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/openAroundAdvice(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/openAroundAdvice(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/apache/bcel/generic/FieldInstruction/getSignature(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/openAroundAdvice(org.aspectj.weaver.bcel.LazyMethodGen)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/openAroundAdvice(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/openAroundAdvice(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/openAroundAdvice(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/openAroundAdvice(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/apache/bcel/generic/FieldInstruction/getClassName(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/openAroundAdvice(org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/apache/bcel/generic/InvokeInstruction/getName(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForSuperDispatch(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/bcel/BcelAccessForInlineMunger/makeMethodGen(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForSuperDispatch(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForSuperDispatch(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/AjAttribute$EffectiveSignatureAttribute/EffectiveSignatureAttribute(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Shadow$Kind,boolean)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForSuperDispatch(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/AjAttribute$AjSynthetic/AjSynthetic()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForSuperDispatch(org.aspectj.weaver.ResolvedMember)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForSuperDispatch(org.aspectj.weaver.ResolvedMember)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForSuperDispatch(org.aspectj.weaver.ResolvedMember)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForSuperDispatch(org.aspectj.weaver.ResolvedMember)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForSuperDispatch(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForSuperDispatch(org.aspectj.weaver.ResolvedMember)#java/util/List/get(int)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForSuperDispatch(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForSuperDispatch(org.aspectj.weaver.ResolvedMember)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldGet(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/bcel/BcelAccessForInlineMunger/makeMethodGen(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedMember)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldGet(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldGet(org.aspectj.weaver.ResolvedMember)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldGet(org.aspectj.weaver.ResolvedMember)#java/lang/reflect/Modifier/isStatic(int)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldGet(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldGet(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/AjAttribute$EffectiveSignatureAttribute/EffectiveSignatureAttribute(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Shadow$Kind,boolean)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldGet(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/AjAttribute$AjSynthetic/AjSynthetic()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldGet(org.aspectj.weaver.ResolvedMember)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldGet(org.aspectj.weaver.ResolvedMember)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldGet(org.aspectj.weaver.ResolvedMember)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldGet(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldGet(org.aspectj.weaver.ResolvedMember)#java/util/List/get(int)
org/aspectj/weaver/bcel/BcelAccessForInlineMunger/createOrGetInlineAccessorForFieldGet(org.aspectj.weaver.ResolvedMember)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/patterns/AnnotationPointcut/matchInternal(org.aspectj.weaver.Shadow)#java/util/Iterator/hasNext()
org/aspectj/weaver/patterns/AnnotationPointcut/matchInternal(org.aspectj.weaver.Shadow)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/patterns/AnnotationPointcut/matchInternal(org.aspectj.weaver.Shadow)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/patterns/AnnotationPointcut/matchInternal(org.aspectj.weaver.Shadow)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/patterns/AnnotationPointcut/matchInternal(org.aspectj.weaver.Shadow)#java/lang/Object/toString()
org/aspectj/weaver/patterns/AnnotationPointcut/matchInternal(org.aspectj.weaver.Shadow)#java/lang/Object/equals(java.lang.Object)
org/aspectj/weaver/patterns/AnnotationPointcut/matchInternal(org.aspectj.weaver.Shadow)#org/aspectj/weaver/patterns/AnnotationPointcut/getSourceLocation()
org/aspectj/weaver/patterns/AnnotationPointcut/matchInternal(org.aspectj.weaver.Shadow)#java/util/Iterator/next()
org/aspectj/weaver/patterns/AnnotationPointcut/matchInternal(org.aspectj.weaver.Shadow)#org/aspectj/weaver/Lint$Kind/signal(java.lang.String,org.aspectj.bridge.ISourceLocation)
org/aspectj/weaver/patterns/AnnotationPointcut/matchInternal(org.aspectj.weaver.Shadow)#java/util/List/iterator()
org/aspectj/util/LangUtil/<clinit>()#java/io/StringWriter/getBuffer()
org/aspectj/util/LangUtil/<clinit>()#java/io/StringWriter/close()
org/aspectj/util/LangUtil/<clinit>()#java/io/PrintWriter/PrintWriter(java.io.Writer)
org/aspectj/util/LangUtil/<clinit>()#java/lang/Double/Double(double)
org/aspectj/util/LangUtil/<clinit>()#java/lang/Double/parseDouble(java.lang.String)
org/aspectj/util/LangUtil/<clinit>()#java/lang/Double/doubleValue()
org/aspectj/util/LangUtil/<clinit>()#java/lang/String/substring(int,int)
org/aspectj/util/LangUtil/<clinit>()#java/lang/System/getProperty(java.lang.String)
org/aspectj/util/LangUtil/<clinit>()#java/lang/RuntimeException/printStackTrace(java.io.PrintStream)
org/aspectj/util/LangUtil/<clinit>()#java/io/StringWriter/StringWriter()
org/aspectj/util/LangUtil/<clinit>()#java/io/StringWriter/toString()
org/aspectj/util/LangUtil/<clinit>()#java/io/PrintWriter/println(java.lang.String)
org/aspectj/util/LangUtil/<clinit>()#java/lang/RuntimeException/RuntimeException(java.lang.String,java.lang.Throwable)
org/aspectj/util/LangUtil/<clinit>()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/util/LangUtil/extractOptions(java.lang.String[],java.lang.String[][])#java/util/BitSet/get(int)
org/aspectj/util/LangUtil/extractOptions(java.lang.String[],java.lang.String[][])#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/LangUtil/extractOptions(java.lang.String[],java.lang.String[][])#java/lang/StringBuilder/append(int)
org/aspectj/util/LangUtil/extractOptions(java.lang.String[],java.lang.String[][])#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/LangUtil/extractOptions(java.lang.String[],java.lang.String[][])#java/util/BitSet/set(int)
org/aspectj/util/LangUtil/extractOptions(java.lang.String[],java.lang.String[][])#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/aspectj/util/LangUtil/extractOptions(java.lang.String[],java.lang.String[][])#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/aspectj/util/LangUtil/extractOptions(java.lang.String[],java.lang.String[][])#java/lang/StringBuilder/toString()
org/aspectj/util/LangUtil/extractOptions(java.lang.String[],java.lang.String[][])#java/lang/String/equals(java.lang.Object)
org/aspectj/util/LangUtil/extractOptions(java.lang.String[],java.lang.String[][])#java/util/BitSet/BitSet()
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/util/LinkedList/isEmpty()
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/lang/StringBuilder/append(int)
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/util/LinkedList/add(java.lang.Object)
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/lang/StringBuilder/StringBuilder()
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/util/StringTokenizer/nextToken()
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/util/StringTokenizer/hasMoreTokens()
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#org/aspectj/util/LangUtil$StringChecker/acceptString(java.lang.String)
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/lang/String/length()
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/lang/StringBuffer/length()
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/util/LinkedList/removeFirst()
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/util/LinkedList/removeLast()
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/util/LinkedList/getLast()
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/util/LinkedList/getFirst()
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/lang/StringBuffer/toString()
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/util/LinkedList/LinkedList()
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/lang/StringBuilder/toString()
org/aspectj/util/LangUtil/elideEndingLines(org.aspectj.util.LangUtil$StringChecker,java.lang.StringBuffer,int)#java/lang/StringBuffer/setLength(int)
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/put(org.aspectj.weaver.tools.cache.CachedClassEntry,byte[])#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/put(org.aspectj.weaver.tools.cache.CachedClassEntry,byte[])#org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/getCacheDirectory()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/put(org.aspectj.weaver.tools.cache.CachedClassEntry,byte[])#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/put(org.aspectj.weaver.tools.cache.CachedClassEntry,byte[])#org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/createIndexEntry(org.aspectj.weaver.tools.cache.CachedClassEntry,byte[])
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/put(org.aspectj.weaver.tools.cache.CachedClassEntry,byte[])#org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking$InsertCommand/InsertCommand(org.aspectj.weaver.tools.cache.AsynchronousFileCacheBacking,java.lang.String,byte[])
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/put(org.aspectj.weaver.tools.cache.CachedClassEntry,byte[])#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/put(org.aspectj.weaver.tools.cache.CachedClassEntry,byte[])#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/put(org.aspectj.weaver.tools.cache.CachedClassEntry,byte[])#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/put(org.aspectj.weaver.tools.cache.CachedClassEntry,byte[])#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/createBacking(java.io.File,org.aspectj.weaver.tools.cache.AsynchronousFileCacheBacking$AsynchronousFileCacheBackingCreator)#java/io/File/canWrite()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/createBacking(java.io.File,org.aspectj.weaver.tools.cache.AsynchronousFileCacheBacking$AsynchronousFileCacheBackingCreator)#java/io/File/exists()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/createBacking(java.io.File,org.aspectj.weaver.tools.cache.AsynchronousFileCacheBacking$AsynchronousFileCacheBackingCreator)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/createBacking(java.io.File,org.aspectj.weaver.tools.cache.AsynchronousFileCacheBacking$AsynchronousFileCacheBackingCreator)#java/io/File/getAbsolutePath()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/createBacking(java.io.File,org.aspectj.weaver.tools.cache.AsynchronousFileCacheBacking$AsynchronousFileCacheBackingCreator)#org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking$UpdateIndexCommand/UpdateIndexCommand(org.aspectj.weaver.tools.cache.AsynchronousFileCacheBacking)
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/createBacking(java.io.File,org.aspectj.weaver.tools.cache.AsynchronousFileCacheBacking$AsynchronousFileCacheBackingCreator)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/createBacking(java.io.File,org.aspectj.weaver.tools.cache.AsynchronousFileCacheBacking$AsynchronousFileCacheBackingCreator)#java/util/concurrent/ExecutorService/submit(java.lang.Runnable)
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/createBacking(java.io.File,org.aspectj.weaver.tools.cache.AsynchronousFileCacheBacking$AsynchronousFileCacheBackingCreator)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/createBacking(java.io.File,org.aspectj.weaver.tools.cache.AsynchronousFileCacheBacking$AsynchronousFileCacheBackingCreator)#org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking$1/1(org.aspectj.weaver.tools.Trace)
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/createBacking(java.io.File,org.aspectj.weaver.tools.cache.AsynchronousFileCacheBacking$AsynchronousFileCacheBackingCreator)#org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking$AsynchronousFileCacheBackingCreator/create(java.io.File)
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/createBacking(java.io.File,org.aspectj.weaver.tools.cache.AsynchronousFileCacheBacking$AsynchronousFileCacheBackingCreator)#java/io/File/mkdirs()
org/aspectj/weaver/patterns/ExactAnnotationFieldTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#org/aspectj/weaver/patterns/ExactAnnotationFieldTypePattern/verifyIsAnnotationType(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.patterns.IScope)
org/aspectj/weaver/patterns/ExactAnnotationFieldTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#org/aspectj/weaver/ResolvedType/getSignature()
org/aspectj/weaver/patterns/ExactAnnotationFieldTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#org/aspectj/weaver/patterns/BindingAnnotationFieldTypePattern/copyLocationFrom(org.aspectj.weaver.patterns.PatternNode)
org/aspectj/weaver/patterns/ExactAnnotationFieldTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/patterns/ExactAnnotationFieldTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/patterns/ExactAnnotationFieldTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/patterns/ExactAnnotationFieldTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#java/lang/String/substring(int,int)
org/aspectj/weaver/patterns/ExactAnnotationFieldTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/patterns/ExactAnnotationFieldTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#java/lang/String/lastIndexOf(int)
org/aspectj/weaver/patterns/ExactAnnotationFieldTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#java/lang/String/substring(int)
org/aspectj/weaver/patterns/ExactAnnotationFieldTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/patterns/ExactAnnotationFieldTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/patterns/ExactAnnotationFieldTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#org/aspectj/weaver/ReferenceType/getName()
org/aspectj/weaver/patterns/ExactAnnotationFieldTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelShadow/deleteNewAndDup()#org/aspectj/weaver/bcel/ShadowRange/insert(org.aspectj.apache.bcel.generic.Instruction,org.aspectj.weaver.bcel.Range$Where)
org/aspectj/weaver/bcel/BcelShadow/deleteNewAndDup()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelShadow/deleteNewAndDup()#org/aspectj/apache/bcel/generic/InvokeInstruction/getName(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelShadow/deleteNewAndDup()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/weaver/bcel/BcelShadow/deleteNewAndDup()#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelShadow/deleteNewAndDup()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelShadow/deleteNewAndDup()#org/aspectj/weaver/bcel/ShadowRange/getStart()
org/aspectj/weaver/bcel/BcelShadow/deleteNewAndDup()#org/aspectj/weaver/bcel/ShadowRange/getBody()
org/aspectj/weaver/bcel/BcelShadow/deleteNewAndDup()#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelShadow/deleteNewAndDup()#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelWorld/getLint()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelAdvice/getSourceLocation()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelAdvice/getDeclaringAspect()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/apache/bcel/generic/INVOKEINTERFACE/getMethodName(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelAdvice/getDeclaringType()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/ShadowRange/append(org.aspectj.apache.bcel.generic.InstructionList)
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/Lint$Kind/signal(java.lang.String[],org.aspectj.bridge.ISourceLocation,org.aspectj.bridge.ISourceLocation[])
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelVar/getType()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/ResolvedType/getClassName()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#java/util/List/size()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelWorld/isInJava5Mode()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/apache/bcel/generic/INVOKEINTERFACE/getArgumentTypes(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelAdvice/getConcreteAspect()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelShadow/getArgCount()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#java/lang/StringBuffer/toString()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelWorld/resolve(org.aspectj.weaver.UnresolvedType,boolean)
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelShadow/getSignature()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#java/lang/StringBuffer/append(int)
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#java/util/List/get(int)
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelAdvice/getSignature()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelWorld/useFinal()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundInline(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/ResolvedType/isParameterizedType()
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#org/aspectj/weaver/bcel/BcelShadow/getArgType(int)
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#org/aspectj/weaver/Lint$Kind/signal(java.lang.String[],org.aspectj.bridge.ISourceLocation,org.aspectj.bridge.ISourceLocation[])
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#java/util/List/size()
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#org/aspectj/weaver/bcel/ShadowRange/getBody()
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#org/aspectj/weaver/Shadow$Kind/argsOnStack()
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#org/aspectj/weaver/bcel/BcelWorld/getLint()
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#org/aspectj/weaver/bcel/ShadowRange/insert(org.aspectj.apache.bcel.generic.Instruction,org.aspectj.weaver.bcel.Range$Where)
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#org/aspectj/weaver/bcel/ShadowRange/getEnd()
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#org/aspectj/weaver/bcel/BcelAdvice/getSourceLocation()
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#org/aspectj/weaver/bcel/ShadowRange/insert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.weaver.bcel.Range$Where)
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#org/aspectj/weaver/bcel/ShadowRange/getStart()
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#org/aspectj/weaver/bcel/BcelShadow/getKind()
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#org/aspectj/weaver/bcel/BcelShadow/getSignature()
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#java/util/Set/iterator()
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#org/aspectj/weaver/bcel/BcelWorld/isJoinpointArrayConstructionEnabled()
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelShadow/prepareForMungers()#org/aspectj/weaver/bcel/BcelShadow/toString()
org/aspectj/weaver/bcel/BcelShadow/getRelevantMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/getKind()
org/aspectj/weaver/bcel/BcelShadow/getRelevantMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelShadow/getRelevantMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/resolve(org.aspectj.weaver.World)
org/aspectj/weaver/bcel/BcelShadow/getRelevantMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelShadow/getRelevantMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelShadow/getRelevantMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelShadow/getRelevantMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/bcel/BcelShadow/getSignature()
org/aspectj/weaver/bcel/BcelShadow/getRelevantMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelShadow/getRelevantMember(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/getParameterSignature()
org/aspectj/weaver/bcel/BcelShadow/ensureTargetTypeIsCorrect(org.aspectj.weaver.UnresolvedType)#org/aspectj/weaver/bcel/BcelShadow/getKind()
org/aspectj/weaver/bcel/BcelShadow/ensureTargetTypeIsCorrect(org.aspectj.weaver.UnresolvedType)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelShadow/ensureTargetTypeIsCorrect(org.aspectj.weaver.UnresolvedType)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelShadow/ensureTargetTypeIsCorrect(org.aspectj.weaver.UnresolvedType)#java/lang/String/charAt(int)
org/aspectj/weaver/bcel/BcelShadow/ensureTargetTypeIsCorrect(org.aspectj.weaver.UnresolvedType)#org/aspectj/weaver/bcel/ShadowRange/getStart()
org/aspectj/weaver/bcel/BcelShadow/ensureTargetTypeIsCorrect(org.aspectj.weaver.UnresolvedType)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelShadow/ensureTargetTypeIsCorrect(org.aspectj.weaver.UnresolvedType)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelShadow/ensureTargetTypeIsCorrect(org.aspectj.weaver.UnresolvedType)#org/aspectj/weaver/bcel/BcelShadow/getSignature()
org/aspectj/weaver/bcel/BcelShadow/ensureTargetTypeIsCorrect(org.aspectj.weaver.UnresolvedType)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelShadow/ensureInitializedArgVar(int)#org/aspectj/weaver/bcel/ShadowRange/insert(org.aspectj.apache.bcel.generic.Instruction,org.aspectj.weaver.bcel.Range$Where)
org/aspectj/weaver/bcel/BcelShadow/ensureInitializedArgVar(int)#org/aspectj/weaver/bcel/BcelShadow/getKind()
org/aspectj/weaver/bcel/BcelShadow/ensureInitializedArgVar(int)#org/aspectj/weaver/bcel/BcelShadow/hasTarget()
org/aspectj/weaver/bcel/BcelShadow/ensureInitializedArgVar(int)#org/aspectj/weaver/bcel/BcelShadow/getArgCount()
org/aspectj/weaver/bcel/BcelShadow/ensureInitializedArgVar(int)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelShadow/ensureInitializedArgVar(int)#org/aspectj/weaver/Shadow$Kind/argsOnStack()
org/aspectj/weaver/bcel/BcelShadow/ensureInitializedArgVar(int)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelShadow/ensureInitializedArgVar(int)#org/aspectj/weaver/bcel/ShadowRange/insert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.weaver.bcel.Range$Where)
org/aspectj/weaver/bcel/BcelShadow/ensureInitializedArgVar(int)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelShadow/ensureInitializedArgVar(int)#java/lang/StringBuilder/append(int)
org/aspectj/weaver/bcel/BcelShadow/ensureInitializedArgVar(int)#org/aspectj/weaver/bcel/BcelShadow/getArgType(int)
org/aspectj/weaver/bcel/BcelShadow/ensureInitializedArgVar(int)#org/aspectj/weaver/Shadow$Kind/isTargetSameAsThis()
org/aspectj/weaver/bcel/BcelShadow/ensureInitializedArgVar(int)#org/aspectj/weaver/bcel/BcelShadow/hasThis()
org/aspectj/weaver/bcel/BcelShadow/createShadowMethodGen(java.lang.String,int,java.util.List)#org/aspectj/weaver/bcel/BcelShadow/getKind()
org/aspectj/weaver/bcel/BcelShadow/createShadowMethodGen(java.lang.String,int,java.util.List)#org/aspectj/weaver/bcel/BcelShadow/getSignature()
org/aspectj/weaver/bcel/BcelShadow/createShadowMethodGen(java.lang.String,int,java.util.List)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/bcel/BcelShadow/createShadowMethodGen(java.lang.String,int,java.util.List)#java/util/List/add(int,java.lang.Object)
org/aspectj/weaver/bcel/BcelShadow/createShadowMethodGen(java.lang.String,int,java.util.List)#org/aspectj/weaver/bcel/BcelShadow/getArgTypes()
org/aspectj/weaver/bcel/BcelShadow/createShadowMethodGen(java.lang.String,int,java.util.List)#org/aspectj/weaver/bcel/BcelShadow/getTargetType()
org/aspectj/weaver/bcel/BcelShadow/createShadowMethodGen(java.lang.String,int,java.util.List)#java/lang/reflect/Modifier/isProtected(int)
org/aspectj/weaver/bcel/BcelShadow/createShadowMethodGen(java.lang.String,int,java.util.List)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelShadow/createShadowMethodGen(java.lang.String,int,java.util.List)#org/aspectj/weaver/bcel/BcelShadow/getThisType()
org/aspectj/weaver/bcel/BcelShadow/createShadowMethodGen(java.lang.String,int,java.util.List)#java/lang/reflect/Modifier/isStatic(int)
org/aspectj/weaver/bcel/BcelShadow/createShadowMethodGen(java.lang.String,int,java.util.List)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelShadow/createShadowMethodGen(java.lang.String,int,java.util.List)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelShadow/createShadowMethodGen(java.lang.String,int,java.util.List)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelShadow/createShadowMethodGen(java.lang.String,int,java.util.List)#org/aspectj/weaver/ResolvedType/getPackageName()
org/aspectj/weaver/bcel/BcelShadow/createShadowMethodGen(java.lang.String,int,java.util.List)#org/aspectj/weaver/bcel/BcelShadow/hasThis()
org/aspectj/weaver/bcel/BcelShadow/createShadowMethodGen(java.lang.String,int,java.util.List)#org/aspectj/weaver/bcel/BcelWorld/useFinal()
org/aspectj/weaver/bcel/BcelShadow/initializeKindedAnnotationVars()#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelShadow/initializeKindedAnnotationVars()#org/aspectj/weaver/ResolvedType/isRawType()
org/aspectj/weaver/bcel/BcelShadow/initializeKindedAnnotationVars()#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelShadow/initializeKindedAnnotationVars()#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/bcel/BcelShadow/initializeKindedAnnotationVars()#java/lang/Object/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelShadow/initializeKindedAnnotationVars()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelShadow/initializeKindedAnnotationVars()#org/aspectj/weaver/ResolvedType/resolve(org.aspectj.weaver.World)
org/aspectj/weaver/bcel/BcelShadow/initializeKindedAnnotationVars()#org/aspectj/weaver/bcel/BcelShadow/getKind()
org/aspectj/weaver/bcel/BcelShadow/initializeKindedAnnotationVars()#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelShadow/initializeKindedAnnotationVars()#java/util/HashMap/HashMap()
org/aspectj/weaver/bcel/BcelShadow/initializeKindedAnnotationVars()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelShadow/initializeKindedAnnotationVars()#org/aspectj/weaver/bcel/BcelShadow/getSignature()
org/aspectj/weaver/bcel/BcelShadow/initializeKindedAnnotationVars()#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelShadow/initializeKindedAnnotationVars()#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelShadow/initializeKindedAnnotationVars()#org/aspectj/weaver/ResolvedType/isParameterizedType()
org/aspectj/weaver/bcel/BcelShadow/weaveCflowEntry(org.aspectj.weaver.bcel.BcelAdvice,org.aspectj.weaver.Member)#org/aspectj/weaver/bcel/ShadowRange/insert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.weaver.bcel.Range$Where)
org/aspectj/weaver/bcel/BcelShadow/weaveCflowEntry(org.aspectj.weaver.bcel.BcelAdvice,org.aspectj.weaver.Member)#org/aspectj/weaver/bcel/BcelAdvice/getKind()
org/aspectj/weaver/bcel/BcelShadow/weaveCflowEntry(org.aspectj.weaver.bcel.BcelAdvice,org.aspectj.weaver.Member)#org/aspectj/weaver/bcel/ShadowRange/getRealStart()
org/aspectj/weaver/bcel/BcelShadow/weaveCflowEntry(org.aspectj.weaver.bcel.BcelAdvice,org.aspectj.weaver.Member)#org/aspectj/weaver/bcel/BcelShadow$1/1(org.aspectj.weaver.bcel.BcelShadow,org.aspectj.weaver.AdviceKind,org.aspectj.weaver.patterns.Pointcut,org.aspectj.weaver.Member,int,int,int,org.aspectj.weaver.ISourceContext,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.BcelAdvice,org.aspectj.weaver.bcel.BcelVar,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.Member)
org/aspectj/weaver/bcel/BcelShadow/weaveCflowEntry(org.aspectj.weaver.bcel.BcelAdvice,org.aspectj.weaver.Member)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/weaver/bcel/BcelShadow/weaveCflowEntry(org.aspectj.weaver.bcel.BcelAdvice,org.aspectj.weaver.Member)#org/aspectj/weaver/bcel/BcelShadow/getKind()
org/aspectj/weaver/bcel/BcelShadow/weaveCflowEntry(org.aspectj.weaver.bcel.BcelAdvice,org.aspectj.weaver.Member)#org/aspectj/weaver/bcel/BcelAdvice/getConcreteAspect()
org/aspectj/weaver/bcel/BcelShadow/weaveCflowEntry(org.aspectj.weaver.bcel.BcelAdvice,org.aspectj.weaver.Member)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/BcelShadow/weaveCflowEntry(org.aspectj.weaver.bcel.BcelAdvice,org.aspectj.weaver.Member)#java/lang/String/endsWith(java.lang.String)
org/aspectj/weaver/bcel/BcelShadow/weaveAroundClosure(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelShadow/getSignature()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundClosure(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelWorld/getLint()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundClosure(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelAdvice/getSourceLocation()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundClosure(org.aspectj.weaver.bcel.BcelAdvice,boolean)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundClosure(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelAdvice/getDeclaringAspect()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundClosure(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/ShadowRange/append(org.aspectj.apache.bcel.generic.InstructionList)
org/aspectj/weaver/bcel/BcelShadow/weaveAroundClosure(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/Lint$Kind/signal(java.lang.String[],org.aspectj.bridge.ISourceLocation,org.aspectj.bridge.ISourceLocation[])
org/aspectj/weaver/bcel/BcelShadow/weaveAroundClosure(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelShadow/getKind()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundClosure(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelWorld/isInJava5Mode()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundClosure(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelShadow/hasTarget()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundClosure(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelAdvice/getConcreteAspect()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundClosure(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelWorld/resolve(org.aspectj.weaver.UnresolvedType,boolean)
org/aspectj/weaver/bcel/BcelShadow/weaveAroundClosure(org.aspectj.weaver.bcel.BcelAdvice,boolean)#java/lang/Integer/valueOf(int)
org/aspectj/weaver/bcel/BcelShadow/weaveAroundClosure(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/Shadow$Kind/isTargetSameAsThis()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundClosure(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelShadow/hasThis()
org/aspectj/weaver/bcel/BcelShadow/weaveAroundClosure(org.aspectj.weaver.bcel.BcelAdvice,boolean)#org/aspectj/weaver/bcel/BcelAdvice/getSignature()
org/aspectj/weaver/bcel/BcelShadow/initializeArgVars()#org/aspectj/weaver/bcel/ShadowRange/insert(org.aspectj.apache.bcel.generic.Instruction,org.aspectj.weaver.bcel.Range$Where)
org/aspectj/weaver/bcel/BcelShadow/initializeArgVars()#org/aspectj/weaver/bcel/BcelShadow/hasTarget()
org/aspectj/weaver/bcel/BcelShadow/initializeArgVars()#org/aspectj/weaver/bcel/BcelShadow/getArgCount()
org/aspectj/weaver/bcel/BcelShadow/initializeArgVars()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelShadow/initializeArgVars()#org/aspectj/weaver/Shadow$Kind/argsOnStack()
org/aspectj/weaver/bcel/BcelShadow/initializeArgVars()#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelShadow/initializeArgVars()#org/aspectj/weaver/bcel/ShadowRange/insert(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.weaver.bcel.Range$Where)
org/aspectj/weaver/bcel/BcelShadow/initializeArgVars()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelShadow/initializeArgVars()#java/lang/StringBuilder/append(int)
org/aspectj/weaver/bcel/BcelShadow/initializeArgVars()#org/aspectj/weaver/bcel/BcelShadow/getArgType(int)
org/aspectj/weaver/bcel/BcelShadow/initializeArgVars()#org/aspectj/weaver/bcel/BcelShadow/getKind()
org/aspectj/weaver/bcel/BcelShadow/initializeArgVars()#org/aspectj/weaver/Shadow$Kind/isTargetSameAsThis()
org/aspectj/weaver/bcel/BcelShadow/initializeArgVars()#org/aspectj/weaver/bcel/BcelShadow/hasThis()
org/aspectj/weaver/bcel/BcelShadow/getAnnotations(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelShadow/getAnnotations(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelShadow/getAnnotations(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelShadow/getAnnotations(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelShadow/getAnnotations(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelShadow/getAnnotations(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelShadow/getAnnotations(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/bcel/BcelShadow/getAnnotations(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/weaver/bcel/BcelShadow/getAnnotations(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelShadow/getAnnotations(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/resolve(org.aspectj.weaver.World)
org/aspectj/weaver/bcel/BcelShadow/getAnnotations(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelShadow/getAnnotations(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/bcel/BcelShadow/getSignature()
org/aspectj/weaver/bcel/BcelShadow/getAnnotations(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelShadow/getAnnotations(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/getParameterSignature()
org/aspectj/weaver/bcel/BcelShadow/getAnnotations(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.Member,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/toString()
org/aspectj/weaver/loadtime/definition/SimpleAOPParser/startElement(java.lang.String,java.util.Map)#org/xml/sax/SAXException/SAXException(java.lang.String)
org/aspectj/weaver/loadtime/definition/SimpleAOPParser/startElement(java.lang.String,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/loadtime/definition/SimpleAOPParser/startElement(java.lang.String,java.util.Map)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/loadtime/definition/SimpleAOPParser/startElement(java.lang.String,java.util.Map)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/loadtime/definition/SimpleAOPParser/startElement(java.lang.String,java.util.Map)#java/lang/Exception/Exception(java.lang.String)
org/aspectj/weaver/loadtime/definition/SimpleAOPParser/startElement(java.lang.String,java.util.Map)#org/aspectj/weaver/loadtime/definition/Definition$ConcreteAspect/ConcreteAspect(java.lang.String,java.lang.String,java.lang.String,java.lang.String)
org/aspectj/weaver/loadtime/definition/SimpleAOPParser/startElement(java.lang.String,java.util.Map)#org/aspectj/weaver/loadtime/definition/Definition$Pointcut/Pointcut(java.lang.String,java.lang.String)
org/aspectj/weaver/loadtime/definition/SimpleAOPParser/startElement(java.lang.String,java.util.Map)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/loadtime/definition/SimpleAOPParser/startElement(java.lang.String,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/loadtime/definition/SimpleAOPParser/startElement(java.lang.String,java.util.Map)#org/aspectj/weaver/loadtime/definition/Definition$PointcutAndAdvice/PointcutAndAdvice(org.aspectj.weaver.loadtime.definition.Definition$AdviceKind,java.lang.String,java.lang.String,java.lang.String)
org/aspectj/weaver/loadtime/definition/SimpleAOPParser/startElement(java.lang.String,java.util.Map)#org/aspectj/weaver/loadtime/definition/Definition$DeclareAnnotation/DeclareAnnotation(org.aspectj.weaver.loadtime.definition.Definition$DeclareAnnotationKind,java.lang.String,java.lang.String)
org/aspectj/weaver/loadtime/definition/SimpleAOPParser/startElement(java.lang.String,java.util.Map)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/SimpleCache/generateKey(java.lang.String,byte[])#java/util/zip/CRC32/update(byte[])
org/aspectj/weaver/tools/cache/SimpleCache/generateKey(java.lang.String,byte[])#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/SimpleCache/generateKey(java.lang.String,byte[])#java/util/zip/CRC32/CRC32()
org/aspectj/weaver/tools/cache/SimpleCache/generateKey(java.lang.String,byte[])#java/lang/StringBuilder/append(long)
org/aspectj/weaver/tools/cache/SimpleCache/generateKey(java.lang.String,byte[])#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/SimpleCache/generateKey(java.lang.String,byte[])#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/aspectj/weaver/tools/cache/SimpleCache/generateKey(java.lang.String,byte[])#java/lang/String/String(java.lang.String)
org/aspectj/weaver/tools/cache/SimpleCache/generateKey(java.lang.String,byte[])#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/SimpleCache/generateKey(java.lang.String,byte[])#java/util/zip/CRC32/getValue()
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/Exception/printStackTrace()
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/Integer/valueOf(int)
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/Object/getClass()
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/reflect/InvocationTargetException/getTargetException()
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/Integer/Integer(int)
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/reflect/Method/setAccessible(boolean)
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[],java.security.ProtectionDomain)#java/lang/reflect/InvocationTargetException/printStackTrace()
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/Class/getDeclaredMethod(java.lang.String,java.lang.Class[])
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/Exception/printStackTrace()
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/reflect/InvocationTargetException/getTargetException()
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/Integer/Integer(int)
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/reflect/Method/setAccessible(boolean)
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/Object/getClass()
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/SimpleCache/defineClass(java.lang.ClassLoader,java.lang.String,byte[])#java/lang/reflect/InvocationTargetException/printStackTrace()
org/aspectj/weaver/loadtime/WeavingURLClassLoader/getURLs(java.lang.String)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/loadtime/WeavingURLClassLoader/getURLs(java.lang.String)#java/util/List/size()
org/aspectj/weaver/loadtime/WeavingURLClassLoader/getURLs(java.lang.String)#java/io/File/exists()
org/aspectj/weaver/loadtime/WeavingURLClassLoader/getURLs(java.lang.String)#java/io/File/File(java.lang.String)
org/aspectj/weaver/loadtime/WeavingURLClassLoader/getURLs(java.lang.String)#java/util/List/toArray(java.lang.Object[])
org/aspectj/weaver/loadtime/WeavingURLClassLoader/getURLs(java.lang.String)#java/util/StringTokenizer/nextToken()
org/aspectj/weaver/loadtime/WeavingURLClassLoader/getURLs(java.lang.String)#java/util/StringTokenizer/hasMoreTokens()
org/aspectj/weaver/loadtime/WeavingURLClassLoader/getURLs(java.lang.String)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/aspectj/weaver/loadtime/WeavingURLClassLoader/getURLs(java.lang.String)#java/lang/String/trim()
org/aspectj/weaver/loadtime/WeavingURLClassLoader/getURLs(java.lang.String)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/loadtime/WeavingURLClassLoader/getURLs(java.lang.String)#java/io/File/toURL()
org/aspectj/weaver/WeaverStateInfo/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/WeaverStateInfo/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)#java/lang/Object/toString()
org/aspectj/weaver/WeaverStateInfo/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)#java/lang/StringBuilder/append(int)
org/aspectj/weaver/WeaverStateInfo/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)#java/util/Collections/emptyList()
org/aspectj/weaver/WeaverStateInfo/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)#org/aspectj/weaver/VersionedDataInputStream/readShort()
org/aspectj/weaver/WeaverStateInfo/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/WeaverStateInfo/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/WeaverStateInfo/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/weaver/WeaverStateInfo/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)#org/aspectj/weaver/WeaverStateInfo$Entry/Entry(org.aspectj.weaver.UnresolvedType,org.aspectj.weaver.ResolvedTypeMunger)
org/aspectj/weaver/WeaverStateInfo/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)#org/aspectj/weaver/VersionedDataInputStream/readByte()
org/aspectj/weaver/WeaverStateInfo/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/WeaverStateInfo/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)#java/lang/String/charAt(int)
org/aspectj/weaver/WeaverStateInfo/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)#java/lang/StringBuilder/toString()
org/aspectj/weaver/WeaverStateInfo/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)#org/aspectj/weaver/VersionedDataInputStream/readBoolean()
org/aspectj/weaver/WeaverStateInfo/readAnyReweavableData(org.aspectj.weaver.WeaverStateInfo,org.aspectj.weaver.VersionedDataInputStream,boolean)#java/io/IOException/IOException(java.lang.String)
org/aspectj/weaver/WeaverStateInfo/readAnyReweavableData(org.aspectj.weaver.WeaverStateInfo,org.aspectj.weaver.VersionedDataInputStream,boolean)#org/aspectj/weaver/VersionedDataInputStream/readInt()
org/aspectj/weaver/WeaverStateInfo/readAnyReweavableData(org.aspectj.weaver.WeaverStateInfo,org.aspectj.weaver.VersionedDataInputStream,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/WeaverStateInfo/readAnyReweavableData(org.aspectj.weaver.WeaverStateInfo,org.aspectj.weaver.VersionedDataInputStream,boolean)#java/lang/StringBuilder/append(int)
org/aspectj/weaver/WeaverStateInfo/readAnyReweavableData(org.aspectj.weaver.WeaverStateInfo,org.aspectj.weaver.VersionedDataInputStream,boolean)#java/util/zip/ZipInputStream/closeEntry()
org/aspectj/weaver/WeaverStateInfo/readAnyReweavableData(org.aspectj.weaver.WeaverStateInfo,org.aspectj.weaver.VersionedDataInputStream,boolean)#org/aspectj/weaver/VersionedDataInputStream/readShort()
org/aspectj/weaver/WeaverStateInfo/readAnyReweavableData(org.aspectj.weaver.WeaverStateInfo,org.aspectj.weaver.VersionedDataInputStream,boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/WeaverStateInfo/readAnyReweavableData(org.aspectj.weaver.WeaverStateInfo,org.aspectj.weaver.VersionedDataInputStream,boolean)#org/aspectj/weaver/VersionedDataInputStream/read(byte[])
org/aspectj/weaver/WeaverStateInfo/readAnyReweavableData(org.aspectj.weaver.WeaverStateInfo,org.aspectj.weaver.VersionedDataInputStream,boolean)#java/lang/String/replace(char,char)
org/aspectj/weaver/WeaverStateInfo/readAnyReweavableData(org.aspectj.weaver.WeaverStateInfo,org.aspectj.weaver.VersionedDataInputStream,boolean)#java/util/zip/ZipInputStream/read(byte[],int,int)
org/aspectj/weaver/WeaverStateInfo/readAnyReweavableData(org.aspectj.weaver.WeaverStateInfo,org.aspectj.weaver.VersionedDataInputStream,boolean)#java/util/zip/ZipInputStream/getNextEntry()
org/aspectj/weaver/WeaverStateInfo/readAnyReweavableData(org.aspectj.weaver.WeaverStateInfo,org.aspectj.weaver.VersionedDataInputStream,boolean)#org/aspectj/weaver/VersionedDataInputStream/readUTF()
org/aspectj/weaver/WeaverStateInfo/readAnyReweavableData(org.aspectj.weaver.WeaverStateInfo,org.aspectj.weaver.VersionedDataInputStream,boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/WeaverStateInfo/readAnyReweavableData(org.aspectj.weaver.WeaverStateInfo,org.aspectj.weaver.VersionedDataInputStream,boolean)#java/util/zip/ZipInputStream/ZipInputStream(java.io.InputStream)
org/aspectj/weaver/WeaverStateInfo/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeShort(int)
org/aspectj/weaver/WeaverStateInfo/write(org.aspectj.weaver.CompressingDataOutputStream)#java/util/List/size()
org/aspectj/weaver/WeaverStateInfo/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/write(byte[])
org/aspectj/weaver/WeaverStateInfo/write(org.aspectj.weaver.CompressingDataOutputStream)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/weaver/WeaverStateInfo/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeBoolean(boolean)
org/aspectj/weaver/WeaverStateInfo/write(org.aspectj.weaver.CompressingDataOutputStream)#java/util/Iterator/hasNext()
org/aspectj/weaver/WeaverStateInfo/write(org.aspectj.weaver.CompressingDataOutputStream)#java/util/Iterator/next()
org/aspectj/weaver/WeaverStateInfo/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeByte(int)
org/aspectj/weaver/WeaverStateInfo/write(org.aspectj.weaver.CompressingDataOutputStream)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelMethod/unpackGenericSignature()#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/weaver/bcel/BcelMethod/unpackGenericSignature()#org/aspectj/weaver/bcel/BcelMethod/getReturnType()
org/aspectj/weaver/bcel/BcelMethod/unpackGenericSignature()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelMethod/unpackGenericSignature()#org/aspectj/weaver/bcel/BcelMethod/getParameterTypes()
org/aspectj/weaver/bcel/BcelMethod/unpackGenericSignature()#org/aspectj/apache/bcel/classfile/Method/getGenericSignature()
org/aspectj/weaver/bcel/BcelMethod/unpackGenericSignature()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelMethod/unpackGenericSignature()#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelMethod/unpackGenericSignature()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/aspectj/weaver/bcel/BcelMethod/unpackGenericSignature()#org/aspectj/weaver/bcel/BcelMethod/toString()
org/aspectj/weaver/bcel/BcelMethod/unpackGenericSignature()#org/aspectj/weaver/bcel/BcelGenericSignatureToTypeXConverter$GenericSignatureFormatException/getMessage()
org/aspectj/weaver/bcel/BcelMethod/unpackGenericSignature()#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelMethod/processAttributes(org.aspectj.weaver.World,java.util.List)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelMethod/processAttributes(org.aspectj.weaver.World,java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelMethod/processAttributes(org.aspectj.weaver.World,java.util.List)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelMethod/processAttributes(org.aspectj.weaver.World,java.util.List)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelMethod/processAttributes(org.aspectj.weaver.World,java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelMethod/processAttributes(org.aspectj.weaver.World,java.util.List)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelMethod/processAttributes(org.aspectj.weaver.World,java.util.List)#org/aspectj/weaver/bcel/BcelMethod/getDeclaringType()
org/aspectj/weaver/bcel/BcelMethod/processAttributes(org.aspectj.weaver.World,java.util.List)#org/aspectj/weaver/AjAttribute$AdviceAttribute/reify(org.aspectj.weaver.Member,org.aspectj.weaver.World,org.aspectj.weaver.ResolvedType)
org/aspectj/weaver/bcel/BcelMethod/processAttributes(org.aspectj.weaver.World,java.util.List)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelMethod/processAttributes(org.aspectj.weaver.World,java.util.List)#org/aspectj/weaver/AjAttribute$PointcutDeclarationAttribute/reify()
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/util/List/size()
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/lang/reflect/Modifier/isStatic(int)
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/util/StringTokenizer/hasMoreTokens()
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#org/aspectj/weaver/bcel/BcelMethod/setParameterNames(java.lang.String[])
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/lang/String/charAt(int)
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/lang/StringBuilder/append(int)
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#org/aspectj/weaver/bcel/BcelMethod/getParameterTypes()
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/util/List/toArray(java.lang.Object[])
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#org/aspectj/weaver/bcel/BcelMethod/getArity()
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/util/StringTokenizer/nextToken()
org/aspectj/weaver/bcel/BcelMethod/determineParameterNames()#java/lang/StringBuilder/toString()
org/aspectj/weaver/TypeFactory/createTypeParams(java.lang.String)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/TypeFactory/createTypeParams(java.lang.String)#java/lang/String/length()
org/aspectj/weaver/TypeFactory/createTypeParams(java.lang.String)#java/util/List/size()
org/aspectj/weaver/TypeFactory/createTypeParams(java.lang.String)#java/util/List/toArray(java.lang.Object[])
org/aspectj/weaver/TypeFactory/createTypeParams(java.lang.String)#java/lang/String/substring(int,int)
org/aspectj/weaver/TypeFactory/createTypeParams(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/TypeFactory/createTypeParams(java.lang.String)#java/lang/String/substring(int)
org/aspectj/weaver/TypeFactory/createTypeParams(java.lang.String)#java/lang/String/indexOf(int)
org/aspectj/weaver/TypeFactory/createTypeParams(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/weaver/TypeFactory/createTypeParams(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/TypeFactory/createTypeParams(java.lang.String)#java/lang/String/charAt(int)
org/aspectj/weaver/TypeFactory/createTypeParams(java.lang.String)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/StringBuffer/delete(int,int)
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/String/length()
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/String/indexOf(java.lang.String,int)
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/StringBuffer/toString()
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/String/substring(int,int)
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/String/indexOf(int)
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/StringBuffer/setCharAt(int,char)
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/String/charAt(int)
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/String/indexOf(java.lang.String)
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/String/substring(int)
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/StringBuilder/append(char)
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/String/String(java.lang.String)
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/weaver/TypeFactory/createTypeFromSignature(java.lang.String)#java/lang/String/endsWith(java.lang.String)
org/aspectj/weaver/SimpleAnnotationValue/stringify()#java/lang/Character/toString()
org/aspectj/weaver/SimpleAnnotationValue/stringify()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/SimpleAnnotationValue/stringify()#java/lang/StringBuilder/append(int)
org/aspectj/weaver/SimpleAnnotationValue/stringify()#java/lang/Long/toString(long)
org/aspectj/weaver/SimpleAnnotationValue/stringify()#java/lang/Integer/toString(int)
org/aspectj/weaver/SimpleAnnotationValue/stringify()#java/lang/Byte/toString(byte)
org/aspectj/weaver/SimpleAnnotationValue/stringify()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/SimpleAnnotationValue/stringify()#java/lang/StringBuilder/toString()
org/aspectj/weaver/SimpleAnnotationValue/stringify()#java/lang/Boolean/toString()
org/aspectj/weaver/SimpleAnnotationValue/stringify()#java/lang/Double/toString(double)
org/aspectj/weaver/SimpleAnnotationValue/stringify()#java/lang/Boolean/Boolean(boolean)
org/aspectj/weaver/SimpleAnnotationValue/stringify()#java/lang/Character/Character(char)
org/aspectj/weaver/SimpleAnnotationValue/stringify()#java/lang/Float/toString(float)
org/aspectj/weaver/SimpleAnnotationValue/stringify()#java/lang/Short/toString(short)
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#org/aspectj/weaver/Lint$Kind/isEnabled()
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/lang/Integer/Integer(int)
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/lang/Integer/equals(java.lang.Object)
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/util/List/size()
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#org/aspectj/weaver/AdviceKind/getKey()
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/util/Set/iterator()
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/lang/String/substring(int)
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/util/List/get(int)
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/util/HashSet/HashSet()
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/util/Iterator/hasNext()
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#org/aspectj/weaver/Lint$Kind/signal(java.lang.String[],org.aspectj.bridge.ISourceLocation,org.aspectj.bridge.ISourceLocation[])
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/util/Iterator/next()
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/lang/String/substring(int,int)
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/util/Set/contains(java.lang.Object)
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/lang/String/indexOf(java.lang.String)
org/aspectj/weaver/Shadow/possiblyReportUnorderedAdvice(java.util.List)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/1/run()#java/util/concurrent/BlockingQueue/take()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/1/run()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/1/run()#org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking$AsyncCommand/getCache()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/1/run()#java/lang/Class/getSimpleName()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/1/run()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/1/run()#java/lang/Thread/currentThread()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/1/run()#java/lang/Thread/interrupt()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/1/run()#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/1/run()#java/lang/Object/getClass()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/1/run()#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/AsynchronousFileCacheBacking/1/run()#java/lang/Exception/getMessage()
org/aspectj/weaver/JoinPointSignatureIterator/findSignaturesFromSupertypes()#java/util/ArrayList/ArrayList()
org/aspectj/weaver/JoinPointSignatureIterator/findSignaturesFromSupertypes()#org/aspectj/weaver/JoinPointSignatureIterator$SearchPair/SearchPair(org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedType)
org/aspectj/weaver/JoinPointSignatureIterator/findSignaturesFromSupertypes()#org/aspectj/weaver/ResolvedMemberImpl/getDeclaringType()
org/aspectj/weaver/JoinPointSignatureIterator/findSignaturesFromSupertypes()#java/util/Iterator/next()
org/aspectj/weaver/JoinPointSignatureIterator/findSignaturesFromSupertypes()#java/util/List/iterator()
org/aspectj/weaver/JoinPointSignatureIterator/findSignaturesFromSupertypes()#org/aspectj/weaver/ResolvedType/isParameterizedType()
org/aspectj/weaver/JoinPointSignatureIterator/findSignaturesFromSupertypes()#java/util/Iterator/hasNext()
org/aspectj/weaver/JoinPointSignatureIterator/findSignaturesFromSupertypes()#java/util/List/remove(int)
org/aspectj/weaver/JoinPointSignatureIterator/findSignaturesFromSupertypes()#java/util/List/isEmpty()
org/aspectj/weaver/JoinPointSignatureIterator/findSignaturesFromSupertypes()#java/util/Set/contains(java.lang.Object)
org/aspectj/weaver/JoinPointSignatureIterator/findSignaturesFromSupertypes()#java/util/List/add(java.lang.Object)
org/aspectj/weaver/JoinPointSignatureIterator/findSignaturesFromSupertypes()#org/aspectj/weaver/ResolvedType/isGenericType()
org/aspectj/weaver/JoinPointSignatureIterator/findSignaturesFromSupertypes()#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/patterns/WildTypePattern/innerMatchesExactly(java.lang.String,boolean,boolean)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/patterns/WildTypePattern/innerMatchesExactly(java.lang.String,boolean,boolean)#java/util/List/size()
org/aspectj/weaver/patterns/WildTypePattern/innerMatchesExactly(java.lang.String,boolean,boolean)#java/util/List/toArray(java.lang.Object[])
org/aspectj/weaver/patterns/WildTypePattern/innerMatchesExactly(java.lang.String,boolean,boolean)#java/lang/String/substring(int,int)
org/aspectj/weaver/patterns/WildTypePattern/innerMatchesExactly(java.lang.String,boolean,boolean)#java/lang/String/substring(int)
org/aspectj/weaver/patterns/WildTypePattern/innerMatchesExactly(java.lang.String,boolean,boolean)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/patterns/WildTypePattern/innerMatchesExactly(java.lang.String,boolean,boolean)#java/lang/String/indexOf(int,int)
org/aspectj/weaver/patterns/WildTypePattern/innerMatchesExactly(java.lang.String,boolean,boolean)#java/lang/String/toCharArray()
org/aspectj/weaver/patterns/WildTypePattern/innerMatchesExactly(java.lang.String,boolean,boolean)#java/util/List/get(int)
org/aspectj/weaver/patterns/WildTypePattern/parameterizeWith(java.util.Map,org.aspectj.weaver.World)#org/aspectj/weaver/patterns/WildTypePattern/copyLocationFrom(org.aspectj.weaver.patterns.PatternNode)
org/aspectj/weaver/patterns/WildTypePattern/parameterizeWith(java.util.Map,org.aspectj.weaver.World)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/aspectj/weaver/patterns/WildTypePattern/parameterizeWith(java.util.Map,org.aspectj.weaver.World)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/patterns/WildTypePattern/parameterizeWith(java.util.Map,org.aspectj.weaver.World)#org/aspectj/weaver/ReferenceType/getName()
org/aspectj/weaver/patterns/WildTypePattern/parameterizeWith(java.util.Map,org.aspectj.weaver.World)#java/lang/String/replace(char,char)
org/aspectj/weaver/patterns/WildTypePattern/parameterizeWith(java.util.Map,org.aspectj.weaver.World)#java/util/Map/containsKey(java.lang.Object)
org/aspectj/weaver/patterns/WildTypePattern/parameterizeWith(java.util.Map,org.aspectj.weaver.World)#java/util/StringTokenizer/nextToken()
org/aspectj/weaver/patterns/WildTypePattern/parameterizeWith(java.util.Map,org.aspectj.weaver.World)#java/util/StringTokenizer/countTokens()
org/aspectj/weaver/patterns/WildTypePattern/parameterizeWith(java.util.Map,org.aspectj.weaver.World)#java/util/StringTokenizer/hasMoreTokens()
org/aspectj/weaver/ResolvedTypeMunger/writeSourceLocation(org.aspectj.weaver.CompressingDataOutputStream)#java/lang/Integer/Integer(int)
org/aspectj/weaver/ResolvedTypeMunger/writeSourceLocation(org.aspectj.weaver.CompressingDataOutputStream)#java/io/ObjectOutputStream/flush()
org/aspectj/weaver/ResolvedTypeMunger/writeSourceLocation(org.aspectj.weaver.CompressingDataOutputStream)#java/io/ObjectOutputStream/writeObject(java.lang.Object)
org/aspectj/weaver/ResolvedTypeMunger/writeSourceLocation(org.aspectj.weaver.CompressingDataOutputStream)#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
org/aspectj/weaver/ResolvedTypeMunger/writeSourceLocation(org.aspectj.weaver.CompressingDataOutputStream)#java/lang/Boolean/Boolean(boolean)
org/aspectj/weaver/ResolvedTypeMunger/writeSourceLocation(org.aspectj.weaver.CompressingDataOutputStream)#java/io/File/getPath()
org/aspectj/weaver/ResolvedTypeMunger/writeSourceLocation(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeInt(int)
org/aspectj/weaver/ResolvedTypeMunger/writeSourceLocation(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeByte(int)
org/aspectj/weaver/ResolvedTypeMunger/writeSourceLocation(org.aspectj.weaver.CompressingDataOutputStream)#java/io/ObjectOutputStream/close()
org/aspectj/weaver/ResolvedTypeMunger/readSourceLocation(org.aspectj.weaver.VersionedDataInputStream)#java/lang/Integer/intValue()
org/aspectj/weaver/ResolvedTypeMunger/readSourceLocation(org.aspectj.weaver.VersionedDataInputStream)#java/io/IOException/printStackTrace()
org/aspectj/weaver/ResolvedTypeMunger/readSourceLocation(org.aspectj.weaver.VersionedDataInputStream)#org/aspectj/weaver/VersionedDataInputStream/readInt()
org/aspectj/weaver/ResolvedTypeMunger/readSourceLocation(org.aspectj.weaver.VersionedDataInputStream)#java/io/ObjectInputStream/readObject()
org/aspectj/weaver/ResolvedTypeMunger/readSourceLocation(org.aspectj.weaver.VersionedDataInputStream)#org/aspectj/weaver/VersionedDataInputStream/readShort()
org/aspectj/weaver/ResolvedTypeMunger/readSourceLocation(org.aspectj.weaver.VersionedDataInputStream)#java/io/ObjectInputStream/close()
org/aspectj/weaver/ResolvedTypeMunger/readSourceLocation(org.aspectj.weaver.VersionedDataInputStream)#java/io/ObjectInputStream/ObjectInputStream(java.io.InputStream)
org/aspectj/weaver/ResolvedTypeMunger/readSourceLocation(org.aspectj.weaver.VersionedDataInputStream)#java/lang/Boolean/booleanValue()
org/aspectj/weaver/ResolvedTypeMunger/readSourceLocation(org.aspectj.weaver.VersionedDataInputStream)#org/aspectj/weaver/VersionedDataInputStream/readByte()
org/aspectj/weaver/ResolvedTypeMunger/readSourceLocation(org.aspectj.weaver.VersionedDataInputStream)#java/io/File/File(java.lang.String)
org/aspectj/weaver/loadtime/definition/LightXMLParser/mapEntity(java.lang.StringBuffer)#java/lang/StringBuffer/append(char)
org/aspectj/weaver/loadtime/definition/LightXMLParser/mapEntity(java.lang.StringBuffer)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/loadtime/definition/LightXMLParser/mapEntity(java.lang.StringBuffer)#java/lang/StringBuffer/toString()
org/aspectj/weaver/loadtime/definition/LightXMLParser/mapEntity(java.lang.StringBuffer)#java/lang/Integer/parseInt(java.lang.String,int)
org/aspectj/weaver/loadtime/definition/LightXMLParser/mapEntity(java.lang.StringBuffer)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/loadtime/definition/LightXMLParser/mapEntity(java.lang.StringBuffer)#java/lang/String/substring(int)
org/aspectj/weaver/loadtime/definition/LightXMLParser/mapEntity(java.lang.StringBuffer)#java/lang/Exception/Exception(java.lang.String)
org/aspectj/weaver/loadtime/definition/LightXMLParser/mapEntity(java.lang.StringBuffer)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/loadtime/definition/LightXMLParser/mapEntity(java.lang.StringBuffer)#java/lang/StringBuilder/toString()
org/aspectj/weaver/loadtime/definition/LightXMLParser/mapEntity(java.lang.StringBuffer)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/loadtime/definition/LightXMLParser/mapEntity(java.lang.StringBuffer)#java/lang/String/charAt(int)
org/aspectj/weaver/loadtime/definition/LightXMLParser/mapEntity(java.lang.StringBuffer)#java/lang/StringBuffer/append(char[])
org/aspectj/weaver/World/AspectPrecedenceCalculator/compareByPrecedence(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/lang/Integer/intValue()
org/aspectj/weaver/World/AspectPrecedenceCalculator/compareByPrecedence(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/World/AspectPrecedenceCalculator/compareByPrecedence(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/util/Iterator/hasNext()
org/aspectj/weaver/World/AspectPrecedenceCalculator/compareByPrecedence(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/World/AspectPrecedenceCalculator/compareByPrecedence(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/lang/Integer/Integer(int)
org/aspectj/weaver/World/AspectPrecedenceCalculator/compareByPrecedence(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/World/AspectPrecedenceCalculator/compareByPrecedence(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/util/Iterator/next()
org/aspectj/weaver/World/AspectPrecedenceCalculator/compareByPrecedence(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/patterns/DeclarePrecedence/getSourceLocation()
org/aspectj/weaver/World/AspectPrecedenceCalculator/compareByPrecedence(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/World/AspectPrecedenceCalculator/compareByPrecedence(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/util/Map/containsKey(java.lang.Object)
org/aspectj/weaver/World/AspectPrecedenceCalculator/compareByPrecedence(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/util/List/iterator()
org/aspectj/weaver/World/AspectPrecedenceCalculator/compareByPrecedence(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/World$AspectPrecedenceCalculator$PrecedenceCacheKey/PrecedenceCacheKey(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)
org/aspectj/weaver/World/AspectPrecedenceCalculator/compareByPrecedence(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/World/AspectPrecedenceCalculator/compareByPrecedence(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/toString()
org/aspectj/runtime/internal/cflowstack/ThreadStackImpl11/getThreadStack()#java/util/Stack/Stack()
org/aspectj/runtime/internal/cflowstack/ThreadStackImpl11/getThreadStack()#java/util/Stack/push(java.lang.Object)
org/aspectj/runtime/internal/cflowstack/ThreadStackImpl11/getThreadStack()#java/lang/Math/max(int,int)
org/aspectj/runtime/internal/cflowstack/ThreadStackImpl11/getThreadStack()#java/util/Hashtable/size()
org/aspectj/runtime/internal/cflowstack/ThreadStackImpl11/getThreadStack()#java/util/Hashtable/get(java.lang.Object)
org/aspectj/runtime/internal/cflowstack/ThreadStackImpl11/getThreadStack()#java/util/Hashtable/put(java.lang.Object,java.lang.Object)
org/aspectj/runtime/internal/cflowstack/ThreadStackImpl11/getThreadStack()#java/util/Vector/elements()
org/aspectj/runtime/internal/cflowstack/ThreadStackImpl11/getThreadStack()#java/lang/Thread/isAlive()
org/aspectj/runtime/internal/cflowstack/ThreadStackImpl11/getThreadStack()#java/lang/Thread/currentThread()
org/aspectj/runtime/internal/cflowstack/ThreadStackImpl11/getThreadStack()#java/util/Hashtable/remove(java.lang.Object)
org/aspectj/runtime/internal/cflowstack/ThreadStackImpl11/getThreadStack()#java/util/Enumeration/hasMoreElements()
org/aspectj/runtime/internal/cflowstack/ThreadStackImpl11/getThreadStack()#java/util/Enumeration/nextElement()
org/aspectj/runtime/internal/cflowstack/ThreadStackImpl11/getThreadStack()#java/util/Hashtable/keys()
org/aspectj/weaver/patterns/BasicTokenSource/makeTokenSource(java.lang.String,org.aspectj.weaver.ISourceContext)#java/lang/String/String(char[],int,int)
org/aspectj/weaver/patterns/BasicTokenSource/makeTokenSource(java.lang.String,org.aspectj.weaver.ISourceContext)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/patterns/BasicTokenSource/makeTokenSource(java.lang.String,org.aspectj.weaver.ISourceContext)#java/lang/Character/isJavaIdentifierPart(char)
org/aspectj/weaver/patterns/BasicTokenSource/makeTokenSource(java.lang.String,org.aspectj.weaver.ISourceContext)#java/util/List/size()
org/aspectj/weaver/patterns/BasicTokenSource/makeTokenSource(java.lang.String,org.aspectj.weaver.ISourceContext)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/patterns/BasicTokenSource/makeTokenSource(java.lang.String,org.aspectj.weaver.ISourceContext)#java/lang/String/toCharArray()
org/aspectj/weaver/patterns/BasicTokenSource/makeTokenSource(java.lang.String,org.aspectj.weaver.ISourceContext)#java/lang/StringBuilder/toString()
org/aspectj/weaver/patterns/BasicTokenSource/makeTokenSource(java.lang.String,org.aspectj.weaver.ISourceContext)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/patterns/BasicTokenSource/makeTokenSource(java.lang.String,org.aspectj.weaver.ISourceContext)#java/util/List/toArray(java.lang.Object[])
org/aspectj/weaver/patterns/BasicTokenSource/makeTokenSource(java.lang.String,org.aspectj.weaver.ISourceContext)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/patterns/BasicTokenSource/makeTokenSource(java.lang.String,org.aspectj.weaver.ISourceContext)#java/lang/StringBuilder/append(char)
org/aspectj/weaver/patterns/BasicTokenSource/makeTokenSource(java.lang.String,org.aspectj.weaver.ISourceContext)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/weaver/NewConstructorTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getTypeVariables()
org/aspectj/weaver/NewConstructorTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/NewConstructorTypeMunger/getSourceLocation()
org/aspectj/weaver/NewConstructorTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/isRawType()
org/aspectj/weaver/NewConstructorTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/NewConstructorTypeMunger/getSignature()
org/aspectj/weaver/NewConstructorTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/isGenericType()
org/aspectj/weaver/NewConstructorTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/NewConstructorTypeMunger/setSourceLocation(org.aspectj.bridge.ISourceLocation)
org/aspectj/weaver/NewConstructorTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/isParameterizedType()
org/aspectj/weaver/NewConstructorTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getTypeParameters()
org/aspectj/weaver/NewConstructorTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/NewConstructorTypeMunger/getSuperMethodsCalled()
org/aspectj/weaver/loadtime/Options/parse(java.lang.String,java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/aspectj/weaver/loadtime/Options/parse(java.lang.String,java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler)#java/lang/String/length()
org/aspectj/weaver/loadtime/Options/parse(java.lang.String,java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler)#java/util/Iterator/next()
org/aspectj/weaver/loadtime/Options/parse(java.lang.String,java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/loadtime/Options/parse(java.lang.String,java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler)#java/lang/String/substring(int)
org/aspectj/weaver/loadtime/Options/parse(java.lang.String,java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler)#java/lang/Class/forName(java.lang.String,boolean,java.lang.ClassLoader)
org/aspectj/weaver/loadtime/Options/parse(java.lang.String,java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler)#org/aspectj/weaver/loadtime/Options$WeaverOption/WeaverOption(org.aspectj.bridge.IMessageHandler)
org/aspectj/weaver/loadtime/Options/parse(java.lang.String,java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler)#java/util/List/iterator()
org/aspectj/weaver/loadtime/Options/parse(java.lang.String,java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler)#java/lang/StringBuilder/toString()
org/aspectj/weaver/loadtime/Options/parse(java.lang.String,java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler)#java/util/Iterator/hasNext()
org/aspectj/weaver/loadtime/Options/parse(java.lang.String,java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler)#java/lang/Class/newInstance()
org/aspectj/weaver/loadtime/Options/parse(java.lang.String,java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler)#java/util/Collections/reverse(java.util.List)
org/aspectj/weaver/loadtime/Options/parse(java.lang.String,java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/loadtime/Options/parse(java.lang.String,java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler)#java/lang/String/trim()
org/aspectj/weaver/loadtime/Options/parse(java.lang.String,java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/loadtime/Options/parse(java.lang.String,java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/World/ensureAdvancedConfigurationProcessed()#java/lang/System/getProperty(java.lang.String,java.lang.String)
org/aspectj/weaver/World/ensureAdvancedConfigurationProcessed()#java/lang/Throwable/printStackTrace()
org/aspectj/weaver/World/ensureAdvancedConfigurationProcessed()#java/util/Properties/getProperty(java.lang.String)
org/aspectj/weaver/World/ensureAdvancedConfigurationProcessed()#org/aspectj/weaver/World$TypeMap/access$000(org.aspectj.weaver.World$TypeMap)
org/aspectj/weaver/World/ensureAdvancedConfigurationProcessed()#org/aspectj/weaver/World$TypeMap/access$002(org.aspectj.weaver.World$TypeMap,boolean)
org/aspectj/weaver/World/ensureAdvancedConfigurationProcessed()#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/World/ensureAdvancedConfigurationProcessed()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/World/ensureAdvancedConfigurationProcessed()#java/lang/Integer/parseInt(java.lang.String)
org/aspectj/weaver/World/ensureAdvancedConfigurationProcessed()#java/lang/String/equalsIgnoreCase(java.lang.String)
org/aspectj/weaver/World/ensureAdvancedConfigurationProcessed()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/World/ensureAdvancedConfigurationProcessed()#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/World/ensureAdvancedConfigurationProcessed()#java/util/Properties/getProperty(java.lang.String,java.lang.String)
org/aspectj/weaver/World/ensureAdvancedConfigurationProcessed()#org/aspectj/weaver/World$TypeMap/access$102(org.aspectj.weaver.World$TypeMap,boolean)
org/aspectj/weaver/World/ensureAdvancedConfigurationProcessed()#java/lang/StringBuilder/toString()
org/aspectj/weaver/NewFieldTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getTypeVariables()
org/aspectj/weaver/NewFieldTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/NewFieldTypeMunger/getSourceLocation()
org/aspectj/weaver/NewFieldTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/isRawType()
org/aspectj/weaver/NewFieldTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/NewFieldTypeMunger/getSignature()
org/aspectj/weaver/NewFieldTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/isGenericType()
org/aspectj/weaver/NewFieldTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/NewFieldTypeMunger/setSourceLocation(org.aspectj.bridge.ISourceLocation)
org/aspectj/weaver/NewFieldTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/isParameterizedType()
org/aspectj/weaver/NewFieldTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/NewFieldTypeMunger/setDeclaredSignature(org.aspectj.weaver.ResolvedMember)
org/aspectj/weaver/NewFieldTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getTypeParameters()
org/aspectj/weaver/NewFieldTypeMunger/parameterizedFor(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/NewFieldTypeMunger/getSuperMethodsCalled()
org/aspectj/runtime/reflect/Factory/makeEncSJP(java.lang.reflect.Member)#java/lang/reflect/Constructor/getExceptionTypes()
org/aspectj/runtime/reflect/Factory/makeEncSJP(java.lang.reflect.Member)#java/lang/reflect/Constructor/getParameterTypes()
org/aspectj/runtime/reflect/Factory/makeEncSJP(java.lang.reflect.Member)#java/lang/reflect/Constructor/getDeclaringClass()
org/aspectj/runtime/reflect/Factory/makeEncSJP(java.lang.reflect.Member)#java/lang/reflect/Method/getModifiers()
org/aspectj/runtime/reflect/Factory/makeEncSJP(java.lang.reflect.Member)#java/lang/reflect/Method/getName()
org/aspectj/runtime/reflect/Factory/makeEncSJP(java.lang.reflect.Member)#java/lang/reflect/Method/getParameterTypes()
org/aspectj/runtime/reflect/Factory/makeEncSJP(java.lang.reflect.Member)#java/lang/reflect/Constructor/getModifiers()
org/aspectj/runtime/reflect/Factory/makeEncSJP(java.lang.reflect.Member)#org/aspectj/runtime/reflect/JoinPointImpl$EnclosingStaticPartImpl/EnclosingStaticPartImpl(int,java.lang.String,org.aspectj.lang.Signature,org.aspectj.lang.reflect.SourceLocation)
org/aspectj/runtime/reflect/Factory/makeEncSJP(java.lang.reflect.Member)#java/lang/reflect/Method/getReturnType()
org/aspectj/runtime/reflect/Factory/makeEncSJP(java.lang.reflect.Member)#java/lang/reflect/Method/getExceptionTypes()
org/aspectj/runtime/reflect/Factory/makeEncSJP(java.lang.reflect.Member)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
org/aspectj/runtime/reflect/Factory/makeEncSJP(java.lang.reflect.Member)#java/lang/reflect/Method/getDeclaringClass()
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#org/aspectj/apache/bcel/generic/InvokeInstruction/getClassName(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#java/lang/String/charAt(int)
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#java/lang/String/length()
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#org/aspectj/weaver/bcel/BcelWorld/resolve(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#org/aspectj/apache/bcel/generic/InvokeInstruction/getSignature(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#org/aspectj/weaver/ResolvedMember/getSignature()
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#java/lang/reflect/Modifier/isStatic(int)
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#java/lang/Exception/printStackTrace()
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#java/lang/String/substring(int)
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#java/lang/String/replace(char,char)
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#java/lang/reflect/Modifier/isPrivate(int)
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#org/aspectj/apache/bcel/generic/InvokeInstruction/getName(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/makeJoinPointSignatureForMethodInvocation(org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.InvokeInstruction)#java/lang/String/lastIndexOf(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/bcel/BcelWorld/getMessageHandler()
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#java/lang/String/substring(int,int)
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#java/util/Map/containsKey(java.lang.Object)
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#java/util/StringTokenizer/StringTokenizer(java.lang.String,java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#java/lang/String/length()
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#java/util/HashMap/HashMap()
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/bcel/BcelWorld/resolve(org.aspectj.weaver.UnresolvedType)
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#java/util/List/contains(java.lang.Object)
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#java/util/StringTokenizer/hasMoreElements()
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#java/util/StringTokenizer/nextToken()
org/aspectj/weaver/bcel/BcelWorld/hasUnsatisfiedDependency(org.aspectj.weaver.ResolvedType)#java/util/Map/remove(java.lang.Object)
org/aspectj/weaver/bcel/BcelWorld/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/io/File/getName()
org/aspectj/weaver/bcel/BcelWorld/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/StringBuffer/toString()
org/aspectj/weaver/bcel/BcelWorld/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/String/substring(int)
org/aspectj/weaver/bcel/BcelWorld/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/StringBuffer/append(int)
org/aspectj/weaver/bcel/BcelWorld/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelWorld/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/String/substring(int,int)
org/aspectj/weaver/bcel/BcelWorld/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelWorld/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/String/indexOf(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/String/lastIndexOf(int)
org/aspectj/weaver/bcel/BcelWorld/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/io/File/getPath()
org/aspectj/weaver/bcel/BcelWorld/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/bcel/BcelWorld/setXmlFiles(java.util.List)#java/net/MalformedURLException/getMessage()
org/aspectj/weaver/bcel/BcelWorld/setXmlFiles(java.util.List)#java/io/File/getName()
org/aspectj/weaver/bcel/BcelWorld/setXmlFiles(java.util.List)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/setXmlFiles(java.util.List)#org/aspectj/weaver/bcel/BcelWorld$WeavingXmlConfig/add(org.aspectj.weaver.loadtime.definition.Definition)
org/aspectj/weaver/bcel/BcelWorld/setXmlFiles(java.util.List)#org/aspectj/weaver/bcel/BcelWorld$WeavingXmlConfig/WeavingXmlConfig(org.aspectj.weaver.bcel.BcelWorld,int)
org/aspectj/weaver/bcel/BcelWorld/setXmlFiles(java.util.List)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelWorld/setXmlFiles(java.util.List)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelWorld/setXmlFiles(java.util.List)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelWorld/setXmlFiles(java.util.List)#java/util/List/isEmpty()
org/aspectj/weaver/bcel/BcelWorld/setXmlFiles(java.util.List)#java/net/URI/toURL()
org/aspectj/weaver/bcel/BcelWorld/setXmlFiles(java.util.List)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelWorld/setXmlFiles(java.util.List)#java/io/File/toURI()
org/aspectj/weaver/bcel/BcelWorld/setXmlFiles(java.util.List)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelWorld/setXmlFiles(java.util.List)#java/lang/Exception/getMessage()
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,org.aspectj.apache.bcel.classfile.JavaClass,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,org.aspectj.apache.bcel.classfile.JavaClass,boolean)#org/aspectj/weaver/World$TypeMap/put(java.lang.String,org.aspectj.weaver.ResolvedType)
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,org.aspectj.apache.bcel.classfile.JavaClass,boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,org.aspectj.apache.bcel.classfile.JavaClass,boolean)#org/aspectj/weaver/World$TypeMap/get(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,org.aspectj.apache.bcel.classfile.JavaClass,boolean)#org/aspectj/weaver/bcel/BcelWorld/isInJava5Mode()
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,org.aspectj.apache.bcel.classfile.JavaClass,boolean)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,org.aspectj.apache.bcel.classfile.JavaClass,boolean)#java/lang/StringBuffer/toString()
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,org.aspectj.apache.bcel.classfile.JavaClass,boolean)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,org.aspectj.apache.bcel.classfile.JavaClass,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,org.aspectj.apache.bcel.classfile.JavaClass,boolean)#java/lang/Object/getClass()
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,org.aspectj.apache.bcel.classfile.JavaClass,boolean)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,org.aspectj.apache.bcel.classfile.JavaClass,boolean)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,org.aspectj.apache.bcel.classfile.JavaClass,boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,byte[],boolean)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,byte[],boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,byte[],boolean)#org/aspectj/weaver/World$TypeMap/put(java.lang.String,org.aspectj.weaver.ResolvedType)
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,byte[],boolean)#org/aspectj/weaver/World$TypeMap/get(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,byte[],boolean)#org/aspectj/weaver/bcel/BcelObjectType/isExposedToWeaver()
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,byte[],boolean)#org/aspectj/weaver/bcel/BcelWorld/isInJava5Mode()
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,byte[],boolean)#java/lang/StringBuffer/toString()
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,byte[],boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,byte[],boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,byte[],boolean)#java/lang/Object/getClass()
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,byte[],boolean)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,byte[],boolean)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/bcel/BcelWorld/addSourceObjectType(java.lang.String,byte[],boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$AjSynthetic/AjSynthetic()
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#java/lang/StringBuilder/append(int)
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$PrivilegedAttribute/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$AdviceAttribute/getPointcut()
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$EffectiveSignatureAttribute/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$Aspect/Aspect(org.aspectj.weaver.patterns.PerClause)
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$SourceContextAttribute/read(org.aspectj.weaver.VersionedDataInputStream)
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$AdviceAttribute/read(org.aspectj.weaver.VersionedDataInputStream,org.aspectj.weaver.ISourceContext)
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#java/io/ByteArrayInputStream/ByteArrayInputStream(byte[])
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$PointcutDeclarationAttribute/access$000(org.aspectj.weaver.AjAttribute$PointcutDeclarationAttribute)
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$WeaverVersionInfo/read(org.aspectj.weaver.VersionedDataInputStream)
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$TypeMunger/TypeMunger(org.aspectj.weaver.ResolvedTypeMunger)
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$MethodDeclarationLineNumberAttribute/read(org.aspectj.weaver.VersionedDataInputStream)
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$DeclareAttribute/DeclareAttribute(org.aspectj.weaver.patterns.Declare)
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$WeaverState/WeaverState(org.aspectj.weaver.WeaverStateInfo)
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$PointcutDeclarationAttribute/PointcutDeclarationAttribute(org.aspectj.weaver.ResolvedPointcutDefinition)
org/aspectj/weaver/AjAttribute/read(org.aspectj.weaver.AjAttribute$WeaverVersionInfo,java.lang.String,byte[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.ConstantPoolReader)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/util/ClassPath/Dir/getClassFile(java.lang.String,java.lang.String)#java/lang/String/valueOf(java.lang.Object)
org/aspectj/apache/bcel/util/ClassPath/Dir/getClassFile(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/util/ClassPath/Dir/getClassFile(java.lang.String,java.lang.String)#java/io/File/File(java.lang.String)
org/aspectj/apache/bcel/util/ClassPath/Dir/getClassFile(java.lang.String,java.lang.String)#java/lang/String/replace(char,char)
org/aspectj/apache/bcel/util/ClassPath/Dir/getClassFile(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(char)
org/aspectj/apache/bcel/util/ClassPath/Dir/getClassFile(java.lang.String,java.lang.String)#java/io/File/exists()
org/aspectj/apache/bcel/util/ClassPath/Dir/getClassFile(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/util/ClassPath/Dir/getClassFile(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/util/ClassPath/Dir/getClassFile(java.lang.String,java.lang.String)#org/aspectj/apache/bcel/util/ClassPath$Dir$1/1(org.aspectj.apache.bcel.util.ClassPath$Dir,java.io.File)
org/aspectj/weaver/bcel/LazyClassGen/getChildClasses(org.aspectj.weaver.bcel.BcelWorld)#org/aspectj/weaver/bcel/UnwovenClassFile$ChildClass/ChildClass(java.lang.String,byte[])
org/aspectj/weaver/bcel/LazyClassGen/getChildClasses(org.aspectj.weaver.bcel.BcelWorld)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/LazyClassGen/getChildClasses(org.aspectj.weaver.bcel.BcelWorld)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/LazyClassGen/getChildClasses(org.aspectj.weaver.bcel.BcelWorld)#java/util/List/isEmpty()
org/aspectj/weaver/bcel/LazyClassGen/getChildClasses(org.aspectj.weaver.bcel.BcelWorld)#java/util/Collections/emptyList()
org/aspectj/weaver/bcel/LazyClassGen/getChildClasses(org.aspectj.weaver.bcel.BcelWorld)#java/util/Iterator/next()
org/aspectj/weaver/bcel/LazyClassGen/getChildClasses(org.aspectj.weaver.bcel.BcelWorld)#java/lang/String/lastIndexOf(int)
org/aspectj/weaver/bcel/LazyClassGen/getChildClasses(org.aspectj.weaver.bcel.BcelWorld)#java/lang/String/substring(int)
org/aspectj/weaver/bcel/LazyClassGen/getChildClasses(org.aspectj.weaver.bcel.BcelWorld)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/LazyClassGen/getChildClasses(org.aspectj.weaver.bcel.BcelWorld)#java/util/List/iterator()
org/aspectj/weaver/bcel/LazyClassGen/getTjpField(org.aspectj.weaver.bcel.BcelShadow,boolean)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/bcel/LazyClassGen/getTjpField(org.aspectj.weaver.bcel.BcelShadow,boolean)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/LazyClassGen/getTjpField(org.aspectj.weaver.bcel.BcelShadow,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/LazyClassGen/getTjpField(org.aspectj.weaver.bcel.BcelShadow,boolean)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/bcel/LazyClassGen/getTjpField(org.aspectj.weaver.bcel.BcelShadow,boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/LazyClassGen/getTjpField(org.aspectj.weaver.bcel.BcelShadow,boolean)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/bcel/LazyClassGen/getTjpField(org.aspectj.weaver.bcel.BcelShadow,boolean)#java/util/List/iterator()
org/aspectj/weaver/bcel/LazyClassGen/getTjpField(org.aspectj.weaver.bcel.BcelShadow,boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/LazyClassGen/getTjpField(org.aspectj.weaver.bcel.BcelShadow,boolean)#java/lang/StringBuilder/append(int)
org/aspectj/weaver/bcel/LazyClassGen/getTjpField(org.aspectj.weaver.bcel.BcelShadow,boolean)#java/util/Iterator/next()
org/aspectj/weaver/bcel/LazyClassGen/getTjpField(org.aspectj.weaver.bcel.BcelShadow,boolean)#org/aspectj/weaver/bcel/BcelField/getName()
org/aspectj/weaver/bcel/LazyClassGen/getTjpField(org.aspectj.weaver.bcel.BcelShadow,boolean)#java/lang/String/substring(int)
org/aspectj/weaver/bcel/LazyClassGen/getTjpField(org.aspectj.weaver.bcel.BcelShadow,boolean)#java/lang/Integer/parseInt(java.lang.String)
org/aspectj/weaver/bcel/LazyClassGen/printOne(java.io.PrintStream)#java/io/PrintStream/println()
org/aspectj/weaver/bcel/LazyClassGen/printOne(java.io.PrintStream)#java/util/Iterator/next()
org/aspectj/weaver/bcel/LazyClassGen/printOne(java.io.PrintStream)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/LazyClassGen/printOne(java.io.PrintStream)#java/io/PrintStream/println(java.lang.Object)
org/aspectj/weaver/bcel/LazyClassGen/printOne(java.io.PrintStream)#java/util/List/iterator()
org/aspectj/weaver/bcel/LazyClassGen/printOne(java.io.PrintStream)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/LazyClassGen/printOne(java.io.PrintStream)#java/io/PrintStream/print(java.lang.String)
org/aspectj/weaver/bcel/LazyClassGen/printOne(java.io.PrintStream)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/LazyClassGen/printOne(java.io.PrintStream)#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/bcel/LazyClassGen/printOne(java.io.PrintStream)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/LazyClassGen/initializeAllTjps()#java/util/ArrayList/ArrayList(java.util.Collection)
org/aspectj/weaver/bcel/LazyClassGen/initializeAllTjps()#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/LazyClassGen/initializeAllTjps()#java/util/Map$Entry/getKey()
org/aspectj/weaver/bcel/LazyClassGen/initializeAllTjps()#java/util/Vector/add(java.lang.Object)
org/aspectj/weaver/bcel/LazyClassGen/initializeAllTjps()#java/util/Map/entrySet()
org/aspectj/weaver/bcel/LazyClassGen/initializeAllTjps()#java/util/Iterator/next()
org/aspectj/weaver/bcel/LazyClassGen/initializeAllTjps()#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/aspectj/weaver/bcel/LazyClassGen/initializeAllTjps()#org/aspectj/weaver/bcel/LazyClassGen$1/1(org.aspectj.weaver.bcel.LazyClassGen)
org/aspectj/weaver/bcel/LazyClassGen/initializeAllTjps()#java/util/Vector/Vector()
org/aspectj/weaver/bcel/LazyClassGen/initializeAllTjps()#java/util/Vector/toArray(java.lang.Object[])
org/aspectj/weaver/bcel/LazyClassGen/initializeAllTjps()#java/util/Map$Entry/getValue()
org/aspectj/weaver/bcel/LazyClassGen/initializeAllTjps()#org/aspectj/apache/bcel/classfile/Field/getSignature()
org/aspectj/weaver/bcel/LazyClassGen/initializeAllTjps()#java/util/List/iterator()
org/aspectj/weaver/bcel/LazyClassGen/initializeAllTjps()#java/lang/String/getBytes()
org/aspectj/weaver/bcel/LazyClassGen/writeBack(org.aspectj.weaver.bcel.BcelWorld)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/LazyClassGen/writeBack(org.aspectj.weaver.bcel.BcelWorld)#java/util/List/size()
org/aspectj/weaver/bcel/LazyClassGen/writeBack(org.aspectj.weaver.bcel.BcelWorld)#java/util/Iterator/next()
org/aspectj/weaver/bcel/LazyClassGen/writeBack(org.aspectj.weaver.bcel.BcelWorld)#org/aspectj/weaver/AjAttribute$WeaverState/WeaverState(org.aspectj.weaver.WeaverStateInfo)
org/aspectj/weaver/bcel/LazyClassGen/writeBack(org.aspectj.weaver.bcel.BcelWorld)#java/util/List/get(int)
org/aspectj/weaver/bcel/LazyClassGen/writeBack(org.aspectj.weaver.bcel.BcelWorld)#java/util/List/iterator()
org/aspectj/weaver/bcel/LazyClassGen/writeBack(org.aspectj.weaver.bcel.BcelWorld)#org/aspectj/weaver/bcel/BcelWorld/isOverWeaving()
org/aspectj/weaver/bcel/LazyClassGen/writeBack(org.aspectj.weaver.bcel.BcelWorld)#java/util/SortedMap/size()
org/aspectj/weaver/bcel/LazyClassGen/writeBack(org.aspectj.weaver.bcel.BcelWorld)#org/aspectj/weaver/AjAttribute$WeaverVersionInfo/WeaverVersionInfo()
org/aspectj/weaver/bcel/LazyClassGen/writeBack(org.aspectj.weaver.bcel.BcelWorld)#org/aspectj/weaver/bcel/BcelWorld/showMessage(org.aspectj.bridge.IMessage$Kind,java.lang.String,org.aspectj.bridge.ISourceLocation,org.aspectj.bridge.ISourceLocation)
org/aspectj/weaver/bcel/LazyClassGen/allocateField(java.lang.String)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/LazyClassGen/allocateField(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/LazyClassGen/allocateField(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/LazyClassGen/allocateField(java.lang.String)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/bcel/LazyClassGen/allocateField(java.lang.String)#java/util/List/iterator()
org/aspectj/weaver/bcel/LazyClassGen/allocateField(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/LazyClassGen/allocateField(java.lang.String)#java/lang/Integer/toString(int)
org/aspectj/weaver/bcel/LazyClassGen/allocateField(java.lang.String)#java/lang/String/length()
org/aspectj/weaver/bcel/LazyClassGen/allocateField(java.lang.String)#java/util/Iterator/next()
org/aspectj/weaver/bcel/LazyClassGen/allocateField(java.lang.String)#org/aspectj/weaver/bcel/BcelField/getName()
org/aspectj/weaver/bcel/LazyClassGen/allocateField(java.lang.String)#java/lang/String/substring(int)
org/aspectj/weaver/bcel/LazyClassGen/allocateField(java.lang.String)#java/lang/Integer/parseInt(java.lang.String)
org/aspectj/apache/bcel/generic/FieldGen/toString()#java/lang/String/valueOf(java.lang.Object)
org/aspectj/apache/bcel/generic/FieldGen/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/generic/FieldGen/toString()#java/lang/StringBuffer/StringBuffer(java.lang.String)
org/aspectj/apache/bcel/generic/FieldGen/toString()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/generic/FieldGen/toString()#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/generic/FieldGen/toString()#org/aspectj/apache/bcel/generic/FieldGen/getName()
org/aspectj/apache/bcel/generic/FieldGen/toString()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/generic/FieldGen/toString()#java/lang/String/equals(java.lang.Object)
org/aspectj/apache/bcel/generic/FieldGen/toString()#java/lang/StringBuffer/toString()
org/aspectj/weaver/patterns/SignaturePattern/TypePatternVisitor/visit(org.aspectj.weaver.patterns.ExactAnnotationTypePattern,java.lang.Object)#java/util/List/isEmpty()
org/aspectj/weaver/patterns/SignaturePattern/TypePatternVisitor/visit(org.aspectj.weaver.patterns.ExactAnnotationTypePattern,java.lang.Object)#java/util/List/size()
org/aspectj/weaver/patterns/SignaturePattern/TypePatternVisitor/visit(org.aspectj.weaver.patterns.ExactAnnotationTypePattern,java.lang.Object)#org/aspectj/weaver/MemberKind/getName()
org/aspectj/weaver/patterns/SignaturePattern/TypePatternVisitor/visit(org.aspectj.weaver.patterns.ExactAnnotationTypePattern,java.lang.Object)#org/aspectj/weaver/patterns/ExactAnnotationTypePattern/isForParameterAnnotationMatch()
org/aspectj/weaver/patterns/SignaturePattern/TypePatternVisitor/visit(org.aspectj.weaver.patterns.ExactAnnotationTypePattern,java.lang.Object)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/patterns/SignaturePattern/TypePatternVisitor/visit(org.aspectj.weaver.patterns.ExactAnnotationTypePattern,java.lang.Object)#org/aspectj/weaver/AnnotationTargetKind/getName()
org/aspectj/weaver/patterns/SignaturePattern/TypePatternVisitor/visit(org.aspectj.weaver.patterns.ExactAnnotationTypePattern,java.lang.Object)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/patterns/SignaturePattern/TypePatternVisitor/visit(org.aspectj.weaver.patterns.ExactAnnotationTypePattern,java.lang.Object)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/patterns/SignaturePattern/TypePatternVisitor/visit(org.aspectj.weaver.patterns.ExactAnnotationTypePattern,java.lang.Object)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/patterns/SignaturePattern/TypePatternVisitor/visit(org.aspectj.weaver.patterns.ExactAnnotationTypePattern,java.lang.Object)#java/util/List/toArray(java.lang.Object[])
org/aspectj/weaver/patterns/PatternParser/parseDottedNamePattern()#java/util/ArrayList/ArrayList()
org/aspectj/weaver/patterns/PatternParser/parseDottedNamePattern()#org/aspectj/weaver/patterns/NamePattern/setLocation(org.aspectj.weaver.ISourceContext,int,int)
org/aspectj/weaver/patterns/PatternParser/parseDottedNamePattern()#org/aspectj/weaver/patterns/IToken/getEnd()
org/aspectj/weaver/patterns/PatternParser/parseDottedNamePattern()#java/lang/String/substring(int)
org/aspectj/weaver/patterns/PatternParser/parseDottedNamePattern()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/patterns/PatternParser/parseDottedNamePattern()#java/util/List/isEmpty()
org/aspectj/weaver/patterns/PatternParser/parseDottedNamePattern()#java/lang/StringBuffer/length()
org/aspectj/weaver/patterns/PatternParser/parseDottedNamePattern()#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/patterns/PatternParser/parseDottedNamePattern()#org/aspectj/weaver/patterns/IToken/getStart()
org/aspectj/weaver/patterns/PatternParser/parseDottedNamePattern()#java/lang/StringBuffer/toString()
org/aspectj/weaver/patterns/PatternParser/parseDottedNamePattern()#java/lang/String/substring(int,int)
org/aspectj/weaver/patterns/PatternParser/parseDottedNamePattern()#java/util/List/add(java.lang.Object)
org/aspectj/weaver/patterns/PatternParser/parseDottedNamePattern()#java/lang/String/indexOf(int)
org/aspectj/weaver/patterns/PatternParser/parseDottedNamePattern()#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/patterns/PatternParser/parseDottedNamePattern()#java/lang/StringBuffer/setLength(int)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncClassBytesEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Iterator/hasNext()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncClassBytesEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncClassBytesEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Iterator/next()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncClassBytesEntries(java.io.File,java.util.Map,java.util.Map)#java/lang/StringBuilder/append(long)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncClassBytesEntries(java.io.File,java.util.Map,java.util.Map)#org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/crc(byte[])
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncClassBytesEntries(java.io.File,java.util.Map,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncClassBytesEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Set/iterator()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncClassBytesEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Map/entrySet()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncClassBytesEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Map/remove(java.lang.Object)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncClassBytesEntries(java.io.File,java.util.Map,java.util.Map)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncClassBytesEntries(java.io.File,java.util.Map,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncClassBytesEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Map$Entry/getKey()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncClassBytesEntries(java.io.File,java.util.Map,java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncClassBytesEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Map$Entry/getValue()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/removeClassBytes(java.lang.String)#java/lang/Class/getSimpleName()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/removeClassBytes(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/removeClassBytes(java.lang.String)#java/util/Map/isEmpty()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/removeClassBytes(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/removeClassBytes(java.lang.String)#java/util/Map/remove(java.lang.Object)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/removeClassBytes(java.lang.String)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/removeClassBytes(java.lang.String)#java/lang/Object/getClass()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/removeClassBytes(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/removeClassBytes(java.lang.String)#java/lang/Exception/getMessage()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/util/Collections/emptyMap()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/io/InputStream/read(byte[])
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/util/zip/ZipEntry/getName()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/util/zip/ZipFile/entries()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/io/StreamCorruptedException/StreamCorruptedException(java.lang.String)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/io/InputStream/close()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/io/ByteArrayOutputStream/toByteArray()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/util/Enumeration/hasMoreElements()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/util/Enumeration/nextElement()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/util/zip/ZipFile/ZipFile(java.io.File)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/io/ByteArrayOutputStream/ByteArrayOutputStream(int)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/io/File/canRead()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/util/TreeMap/TreeMap()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/util/zip/ZipFile/getInputStream(java.util.zip.ZipEntry)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/io/ByteArrayOutputStream/write(byte[],int,int)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/io/ByteArrayOutputStream/reset()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readZipClassBytes(java.io.File)#java/util/zip/ZipFile/close()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readClassBytes(java.util.Map,java.io.File)#java/lang/Class/getSimpleName()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readClassBytes(java.util.Map,java.io.File)#java/io/File/File(java.io.File,java.lang.String)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readClassBytes(java.util.Map,java.io.File)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readClassBytes(java.util.Map,java.io.File)#java/util/Map/isEmpty()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readClassBytes(java.util.Map,java.io.File)#java/util/TreeMap/TreeMap()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readClassBytes(java.util.Map,java.io.File)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readClassBytes(java.util.Map,java.io.File)#java/util/Map/clear()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readClassBytes(java.util.Map,java.io.File)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readClassBytes(java.util.Map,java.io.File)#java/lang/Object/getClass()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readClassBytes(java.util.Map,java.io.File)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/readClassBytes(java.util.Map,java.io.File)#java/lang/Exception/getMessage()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncIndexEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Iterator/hasNext()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncIndexEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Collections/emptySet()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncIndexEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Iterator/next()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncIndexEntries(java.io.File,java.util.Map,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncIndexEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Set/iterator()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncIndexEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Map/containsKey(java.lang.Object)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncIndexEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Collection/iterator()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncIndexEntries(java.io.File,java.util.Map,java.util.Map)#java/util/TreeSet/TreeSet()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncIndexEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Map/entrySet()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncIndexEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Map/remove(java.lang.Object)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncIndexEntries(java.io.File,java.util.Map,java.util.Map)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncIndexEntries(java.io.File,java.util.Map,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncIndexEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Map$Entry/getKey()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncIndexEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Collection/add(java.lang.Object)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncIndexEntries(java.io.File,java.util.Map,java.util.Map)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/syncIndexEntries(java.io.File,java.util.Map,java.util.Map)#java/util/Map$Entry/getValue()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/io/IOException/IOException(java.lang.String)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/util/Iterator/hasNext()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/util/zip/ZipOutputStream/putNextEntry(java.util.zip.ZipEntry)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/util/Map/isEmpty()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/util/zip/ZipOutputStream/ZipOutputStream(java.io.OutputStream)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/util/Iterator/next()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/io/File/mkdirs()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/util/zip/ZipOutputStream/close()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/util/Map$Entry/getValue()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/util/Map/entrySet()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/util/Map$Entry/getKey()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/io/File/exists()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/util/zip/ZipOutputStream/closeEntry()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/io/File/getAbsolutePath()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/util/Set/iterator()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/util/zip/ZipOutputStream/write(byte[])
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/io/BufferedOutputStream/BufferedOutputStream(java.io.OutputStream,int)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/io/File/getParentFile()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeZipClassBytes(java.io.File,java.util.Map)#java/util/zip/ZipEntry/ZipEntry(java.lang.String)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeClassBytes(java.lang.String,byte[])#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeClassBytes(java.lang.String,byte[])#java/lang/Class/getSimpleName()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeClassBytes(java.lang.String,byte[])#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeClassBytes(java.lang.String,byte[])#java/util/Map/isEmpty()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeClassBytes(java.lang.String,byte[])#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeClassBytes(java.lang.String,byte[])#java/util/Collections/singletonMap(java.lang.Object,java.lang.Object)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeClassBytes(java.lang.String,byte[])#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeClassBytes(java.lang.String,byte[])#java/lang/Object/getClass()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeClassBytes(java.lang.String,byte[])#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/ZippedFileCacheBacking/writeClassBytes(java.lang.String,byte[])#java/lang/Exception/getMessage()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/matches(org.aspectj.weaver.AnnotatedElement,org.aspectj.weaver.ResolvedType[])#org/aspectj/weaver/ResolvedType/hasAnnotation(org.aspectj.weaver.UnresolvedType)
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/matches(org.aspectj.weaver.AnnotatedElement,org.aspectj.weaver.ResolvedType[])#java/util/Iterator/hasNext()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/matches(org.aspectj.weaver.AnnotatedElement,org.aspectj.weaver.ResolvedType[])#org/aspectj/weaver/patterns/ExactAnnotationTypePattern/getSourceLocation()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/matches(org.aspectj.weaver.AnnotatedElement,org.aspectj.weaver.ResolvedType[])#org/aspectj/weaver/patterns/ExactAnnotationTypePattern/isForParameterAnnotationMatch()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/matches(org.aspectj.weaver.AnnotatedElement,org.aspectj.weaver.ResolvedType[])#java/lang/String/length()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/matches(org.aspectj.weaver.AnnotatedElement,org.aspectj.weaver.ResolvedType[])#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/matches(org.aspectj.weaver.AnnotatedElement,org.aspectj.weaver.ResolvedType[])#java/util/Iterator/next()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/matches(org.aspectj.weaver.AnnotatedElement,org.aspectj.weaver.ResolvedType[])#java/util/Map/keySet()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/matches(org.aspectj.weaver.AnnotatedElement,org.aspectj.weaver.ResolvedType[])#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/matches(org.aspectj.weaver.AnnotatedElement,org.aspectj.weaver.ResolvedType[])#java/lang/String/substring(int,int)
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/matches(org.aspectj.weaver.AnnotatedElement,org.aspectj.weaver.ResolvedType[])#java/util/Set/iterator()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/matches(org.aspectj.weaver.AnnotatedElement,org.aspectj.weaver.ResolvedType[])#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/matches(org.aspectj.weaver.AnnotatedElement,org.aspectj.weaver.ResolvedType[])#org/aspectj/weaver/ReferenceType/getWorld()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/matches(org.aspectj.weaver.AnnotatedElement,org.aspectj.weaver.ResolvedType[])#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/matches(org.aspectj.weaver.AnnotatedElement,org.aspectj.weaver.ResolvedType[])#java/lang/String/endsWith(java.lang.String)
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#java/util/Iterator/hasNext()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#java/util/Map/size()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeByte(int)
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/patterns/ExactAnnotationTypePattern/isForParameterAnnotationMatch()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeUTF(java.lang.String)
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeBoolean(boolean)
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#java/util/Iterator/next()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/CompressingDataOutputStream/writeInt(int)
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#java/util/Map/keySet()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#org/aspectj/weaver/patterns/ExactAnnotationTypePattern/writeLocation(java.io.DataOutputStream)
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/write(org.aspectj.weaver.CompressingDataOutputStream)#java/util/Set/iterator()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#java/lang/String/substring(int)
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#org/aspectj/weaver/patterns/BindingAnnotationTypePattern/setForParameterAnnotationMatch()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#java/lang/String/substring(int,int)
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#org/aspectj/weaver/patterns/ExactAnnotationTypePattern/isForParameterAnnotationMatch()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#java/lang/String/lastIndexOf(int)
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/patterns/ExactAnnotationTypePattern/resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean)#org/aspectj/weaver/patterns/BindingAnnotationTypePattern/copyLocationFrom(org.aspectj.weaver.patterns.PatternNode)
org/aspectj/weaver/Checker/format(java.lang.String,org.aspectj.weaver.Shadow)#java/lang/StringBuffer/append(char)
org/aspectj/weaver/Checker/format(java.lang.String,org.aspectj.weaver.Shadow)#java/lang/String/length()
org/aspectj/weaver/Checker/format(java.lang.String,org.aspectj.weaver.Shadow)#java/lang/StringBuffer/toString()
org/aspectj/weaver/Checker/format(java.lang.String,org.aspectj.weaver.Shadow)#java/lang/String/substring(int,int)
org/aspectj/weaver/Checker/format(java.lang.String,org.aspectj.weaver.Shadow)#java/lang/String/replace(java.lang.CharSequence,java.lang.CharSequence)
org/aspectj/weaver/Checker/format(java.lang.String,org.aspectj.weaver.Shadow)#java/lang/String/indexOf(int,int)
org/aspectj/weaver/Checker/format(java.lang.String,org.aspectj.weaver.Shadow)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/Checker/format(java.lang.String,org.aspectj.weaver.Shadow)#java/lang/String/indexOf(int)
org/aspectj/weaver/Checker/format(java.lang.String,org.aspectj.weaver.Shadow)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/Checker/getValue(java.lang.String,org.aspectj.weaver.Shadow)#java/lang/Object/toString()
org/aspectj/weaver/Checker/getValue(java.lang.String,org.aspectj.weaver.Shadow)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/Checker/getValue(java.lang.String,org.aspectj.weaver.Shadow)#java/lang/Integer/toString(int)
org/aspectj/weaver/Checker/getValue(java.lang.String,org.aspectj.weaver.Shadow)#org/aspectj/weaver/Shadow$Kind/getName()
org/aspectj/weaver/Checker/getValue(java.lang.String,org.aspectj.weaver.Shadow)#org/aspectj/weaver/Checker/getSourceLocation()
org/aspectj/weaver/Checker/getValue(java.lang.String,org.aspectj.weaver.Shadow)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/Checker/getValue(java.lang.String,org.aspectj.weaver.Shadow)#org/aspectj/weaver/Checker/getDeclaringType()
org/aspectj/weaver/Checker/getValue(java.lang.String,org.aspectj.weaver.Shadow)#java/lang/String/equalsIgnoreCase(java.lang.String)
org/aspectj/weaver/Checker/getValue(java.lang.String,org.aspectj.weaver.Shadow)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/Checker/getValue(java.lang.String,org.aspectj.weaver.Shadow)#java/lang/StringBuilder/toString()
org/aspectj/weaver/Checker/getValue(java.lang.String,org.aspectj.weaver.Shadow)#java/io/File/toString()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#org/aspectj/apache/bcel/generic/ClassGen/isPublic()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/util/ArrayList/ArrayList()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/util/Iterator/hasNext()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#org/aspectj/apache/bcel/generic/ClassGen/isFinal()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#org/aspectj/apache/bcel/generic/ClassGen/isInterface()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/util/List/iterator()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/io/DataOutputStream/writeInt(int)
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#org/aspectj/apache/bcel/classfile/Method/getSignature()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#org/aspectj/apache/bcel/generic/ClassGen$ConstructorComparator/ConstructorComparator(org.aspectj.apache.bcel.generic.ClassGen$ConstructorComparator)
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#org/aspectj/apache/bcel/generic/ClassGen$FieldComparator/FieldComparator(org.aspectj.apache.bcel.generic.ClassGen$FieldComparator)
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#org/aspectj/apache/bcel/classfile/Method/getModifiers()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/io/DataOutputStream/writeUTF(java.lang.String)
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/lang/String/charAt(int)
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#org/aspectj/apache/bcel/generic/ClassGen$MethodComparator/MethodComparator(org.aspectj.apache.bcel.generic.ClassGen$MethodComparator)
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/io/DataOutputStream/close()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/util/List/size()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#org/aspectj/apache/bcel/classfile/Method/isPrivate()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/util/Iterator/next()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/util/Collections/sort(java.util.List,java.util.Comparator)
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#org/aspectj/apache/bcel/classfile/Field/isStatic()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/lang/String/equals(java.lang.Object)
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/lang/Exception/printStackTrace()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/io/DataOutputStream/flush()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/lang/String/replace(char,char)
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#org/aspectj/apache/bcel/classfile/Method/getName()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#org/aspectj/apache/bcel/classfile/Field/isPrivate()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/util/List/add(java.lang.Object)
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#org/aspectj/apache/bcel/generic/ClassGen/isAbstract()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/io/DataOutputStream/DataOutputStream(java.io.OutputStream)
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/io/ByteArrayOutputStream/toByteArray()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/security/MessageDigest/digest(byte[])
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/lang/Exception/toString()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/util/Arrays/sort(java.lang.Object[])
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/security/MessageDigest/getInstance(java.lang.String)
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#org/aspectj/apache/bcel/classfile/Field/getModifiers()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#org/aspectj/apache/bcel/classfile/Field/isTransient()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/generic/ClassGen/getSUID()#org/aspectj/apache/bcel/classfile/Field/getName()
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/read(java.io.File,long)#java/lang/Class/getSimpleName()
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/read(java.io.File,long)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/read(java.io.File,long)#org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/close(java.io.InputStream,java.io.File)
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/read(java.io.File,long)#org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/crc(byte[])
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/read(java.io.File,long)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/read(java.io.File,long)#java/io/File/getAbsolutePath()
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/read(java.io.File,long)#java/lang/Object/getClass()
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/read(java.io.File,long)#java/io/FileInputStream/FileInputStream(java.io.File)
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/read(java.io.File,long)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/read(java.io.File,long)#java/lang/Exception/getMessage()
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/write(java.io.File,byte[])#java/lang/Class/getSimpleName()
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/write(java.io.File,byte[])#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/write(java.io.File,byte[])#java/io/File/exists()
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/write(java.io.File,byte[])#org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/crc(byte[])
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/write(java.io.File,byte[])#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/write(java.io.File,byte[])#java/io/File/getAbsolutePath()
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/write(java.io.File,byte[])#java/lang/Object/getClass()
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/write(java.io.File,byte[])#java/io/OutputStream/write(byte[])
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/write(java.io.File,byte[])#org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/close(java.io.OutputStream,java.io.File)
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/write(java.io.File,byte[])#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/write(java.io.File,byte[])#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/DefaultFileCacheBacking/write(java.io.File,byte[])#java/lang/Exception/getMessage()
org/aspectj/weaver/bcel/Utility/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/io/File/getName()
org/aspectj/weaver/bcel/Utility/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/StringBuffer/toString()
org/aspectj/weaver/bcel/Utility/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/String/substring(int)
org/aspectj/weaver/bcel/Utility/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/StringBuffer/append(int)
org/aspectj/weaver/bcel/Utility/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/bcel/Utility/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/String/indexOf(java.lang.String)
org/aspectj/weaver/bcel/Utility/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/String/lastIndexOf(int)
org/aspectj/weaver/bcel/Utility/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/io/File/getPath()
org/aspectj/weaver/bcel/Utility/beautifyLocation(org.aspectj.bridge.ISourceLocation)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/bcel/Utility/readAjAttributes(java.lang.String,org.aspectj.apache.bcel.classfile.Attribute[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.AjAttribute$WeaverVersionInfo,org.aspectj.weaver.ConstantPoolReader)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/Utility/readAjAttributes(java.lang.String,org.aspectj.apache.bcel.classfile.Attribute[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.AjAttribute$WeaverVersionInfo,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$WeaverVersionInfo/toString()
org/aspectj/weaver/bcel/Utility/readAjAttributes(java.lang.String,org.aspectj.apache.bcel.classfile.Attribute[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.AjAttribute$WeaverVersionInfo,org.aspectj.weaver.ConstantPoolReader)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/Utility/readAjAttributes(java.lang.String,org.aspectj.apache.bcel.classfile.Attribute[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.AjAttribute$WeaverVersionInfo,org.aspectj.weaver.ConstantPoolReader)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/Utility/readAjAttributes(java.lang.String,org.aspectj.apache.bcel.classfile.Attribute[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.AjAttribute$WeaverVersionInfo,org.aspectj.weaver.ConstantPoolReader)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/Utility/readAjAttributes(java.lang.String,org.aspectj.apache.bcel.classfile.Attribute[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.AjAttribute$WeaverVersionInfo,org.aspectj.weaver.ConstantPoolReader)#java/lang/String/charAt(int)
org/aspectj/weaver/bcel/Utility/readAjAttributes(java.lang.String,org.aspectj.apache.bcel.classfile.Attribute[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.AjAttribute$WeaverVersionInfo,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$WeaverVersionInfo/toCurrentVersionString()
org/aspectj/weaver/bcel/Utility/readAjAttributes(java.lang.String,org.aspectj.apache.bcel.classfile.Attribute[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.AjAttribute$WeaverVersionInfo,org.aspectj.weaver.ConstantPoolReader)#java/util/List/size()
org/aspectj/weaver/bcel/Utility/readAjAttributes(java.lang.String,org.aspectj.apache.bcel.classfile.Attribute[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.AjAttribute$WeaverVersionInfo,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$WeaverVersionInfo/getMajorVersion()
org/aspectj/weaver/bcel/Utility/readAjAttributes(java.lang.String,org.aspectj.apache.bcel.classfile.Attribute[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.AjAttribute$WeaverVersionInfo,org.aspectj.weaver.ConstantPoolReader)#org/aspectj/weaver/AjAttribute$WeaverVersionInfo/getCurrentWeaverMajorVersion()
org/aspectj/weaver/bcel/Utility/readAjAttributes(java.lang.String,org.aspectj.apache.bcel.classfile.Attribute[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.AjAttribute$WeaverVersionInfo,org.aspectj.weaver.ConstantPoolReader)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/bcel/Utility/readAjAttributes(java.lang.String,org.aspectj.apache.bcel.classfile.Attribute[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.AjAttribute$WeaverVersionInfo,org.aspectj.weaver.ConstantPoolReader)#java/util/List/get(int)
org/aspectj/weaver/bcel/Utility/readAjAttributes(java.lang.String,org.aspectj.apache.bcel.classfile.Attribute[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.AjAttribute$WeaverVersionInfo,org.aspectj.weaver.ConstantPoolReader)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/Utility/readAjAttributes(java.lang.String,org.aspectj.apache.bcel.classfile.Attribute[],org.aspectj.weaver.ISourceContext,org.aspectj.weaver.World,org.aspectj.weaver.AjAttribute$WeaverVersionInfo,org.aspectj.weaver.ConstantPoolReader)#java/lang/String/endsWith(java.lang.String)
org/aspectj/weaver/bcel/Utility/appendConversion(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getSignature()
org/aspectj/weaver/bcel/Utility/appendConversion(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/lang/IllegalStateException/IllegalStateException(java.lang.String)
org/aspectj/weaver/bcel/Utility/appendConversion(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/util/Hashtable/get(java.lang.Object)
org/aspectj/weaver/bcel/Utility/appendConversion(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/Utility/appendConversion(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/Utility/appendConversion(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/Utility/appendConversion(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/Utility/appendConversion(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/Utility/appendConversion(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/toString()
org/aspectj/weaver/bcel/Utility/appendConversion(org.aspectj.apache.bcel.generic.InstructionList,org.aspectj.apache.bcel.generic.InstructionFactory,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/isPrimitiveType()
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/util/ArrayList/iterator()
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/util/ArrayList/ArrayList()
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/lang/String/valueOf(java.lang.Object)
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/util/Iterator/hasNext()
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#org/aspectj/apache/bcel/util/ClassPath$1/1()
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/util/Iterator/next()
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/io/File/File(java.lang.String)
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/lang/System/getProperty(java.lang.String)
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/io/File/list(java.io.FilenameFilter)
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/lang/StringBuilder/append(char)
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/lang/String/intern()
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/lang/StringBuffer/StringBuffer()
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/lang/StringBuffer/append(char)
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/util/ArrayList/add(java.lang.Object)
org/aspectj/apache/bcel/util/ClassPath/getClassPath()#java/lang/StringBuffer/toString()
org/aspectj/apache/bcel/util/ClassPath/getBytes(java.lang.String,java.lang.String)#java/io/InputStream/available()
org/aspectj/apache/bcel/util/ClassPath/getBytes(java.lang.String,java.lang.String)#java/io/IOException/IOException(java.lang.String)
org/aspectj/apache/bcel/util/ClassPath/getBytes(java.lang.String,java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/util/ClassPath/getBytes(java.lang.String,java.lang.String)#java/io/DataInputStream/close()
org/aspectj/apache/bcel/util/ClassPath/getBytes(java.lang.String,java.lang.String)#java/io/DataInputStream/DataInputStream(java.io.InputStream)
org/aspectj/apache/bcel/util/ClassPath/getBytes(java.lang.String,java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/util/ClassPath/getBytes(java.lang.String,java.lang.String)#java/io/InputStream/close()
org/aspectj/apache/bcel/util/ClassPath/getBytes(java.lang.String,java.lang.String)#java/io/DataInputStream/readFully(byte[])
org/aspectj/apache/bcel/util/ClassPath/getBytes(java.lang.String,java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule1_abstractMethodsImplemented(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.bridge.ISourceLocation,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule1_abstractMethodsImplemented(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.bridge.ISourceLocation,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule1_abstractMethodsImplemented(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.bridge.ISourceLocation,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule1_abstractMethodsImplemented(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.bridge.ISourceLocation,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule1_abstractMethodsImplemented(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.bridge.ISourceLocation,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/lang/reflect/Modifier/isAbstract(int)
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule1_abstractMethodsImplemented(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.bridge.ISourceLocation,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule1_abstractMethodsImplemented(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.bridge.ISourceLocation,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule1_abstractMethodsImplemented(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.bridge.ISourceLocation,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/bcel/BcelTypeMunger/getWorld()
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule1_abstractMethodsImplemented(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.bridge.ISourceLocation,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule1_abstractMethodsImplemented(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.bridge.ISourceLocation,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule1_abstractMethodsImplemented(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.bridge.ISourceLocation,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule1_abstractMethodsImplemented(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.bridge.ISourceLocation,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/lang/String/startsWith(java.lang.String)
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule1_abstractMethodsImplemented(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.bridge.ISourceLocation,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule1_abstractMethodsImplemented(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.bridge.ISourceLocation,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/getParameterSignature()
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#org/aspectj/weaver/bcel/BcelWorld/getMessageHandler()
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#org/aspectj/weaver/ResolvedType/getClassName()
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#org/aspectj/weaver/ResolvedTypeMunger$Kind/toString()
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#java/util/ArrayList/ArrayList()
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#java/io/File/getName()
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#java/lang/Object/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#java/lang/String/toLowerCase()
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#org/aspectj/weaver/bcel/BcelTypeMunger/getWorld()
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#org/aspectj/weaver/bcel/BcelWorld/isOverWeaving()
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#java/util/HashMap/HashMap()
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#org/aspectj/weaver/bcel/BcelTypeMunger/getAspectType()
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#java/lang/String/indexOf(java.lang.String)
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#org/aspectj/weaver/ResolvedType/getPackageName()
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#java/io/File/getPath()
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelTypeMunger/munge(org.aspectj.weaver.bcel.BcelClassWeaver)#org/aspectj/weaver/ResolvedType/isParameterizedOrGenericType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#org/aspectj/weaver/ResolvedMember/getArity()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#org/aspectj/weaver/bcel/BcelTypeMunger/getSignature()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#org/aspectj/weaver/bcel/BcelWorld/getMessageHandler()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#org/aspectj/weaver/ResolvedMember/getSignature()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#java/lang/Object/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#org/aspectj/weaver/MethodDelegateTypeMunger/getSignature()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#org/aspectj/weaver/bcel/BcelWorld/isInJava5Mode()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#org/aspectj/weaver/ResolvedType/isRawType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#org/aspectj/weaver/bcel/BcelWorld/lookupOrCreateName(org.aspectj.weaver.UnresolvedType)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#java/lang/reflect/Modifier/isStatic(int)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#org/aspectj/weaver/MethodDelegateTypeMunger/getSourceLocation()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#org/aspectj/weaver/ResolvedMember/getParameterSignature()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeMethodDelegate(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.MethodDelegateTypeMunger)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelTypeMunger/createAnyBridgeMethodsForCovariance(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.Type[])#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelTypeMunger/createAnyBridgeMethodsForCovariance(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.Type[])#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/createAnyBridgeMethodsForCovariance(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.Type[])#java/lang/String/substring(int,int)
org/aspectj/weaver/bcel/BcelTypeMunger/createAnyBridgeMethodsForCovariance(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.Type[])#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelTypeMunger/createAnyBridgeMethodsForCovariance(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.Type[])#org/aspectj/weaver/ResolvedMember/getParameterSignature()
org/aspectj/weaver/bcel/BcelTypeMunger/createAnyBridgeMethodsForCovariance(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.Type[])#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelTypeMunger/createAnyBridgeMethodsForCovariance(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.Type[])#java/lang/String/lastIndexOf(int)
org/aspectj/weaver/bcel/BcelTypeMunger/createAnyBridgeMethodsForCovariance(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.Type[])#java/lang/reflect/Modifier/isPrivate(int)
org/aspectj/weaver/bcel/BcelTypeMunger/createAnyBridgeMethodsForCovariance(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.ResolvedType,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.apache.bcel.generic.Type[])#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/bcel/BcelTypeMunger/stringifyMember(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getKind()
org/aspectj/weaver/bcel/BcelTypeMunger/stringifyMember(org.aspectj.weaver.ResolvedMember)#java/lang/StringBuffer/append(char)
org/aspectj/weaver/bcel/BcelTypeMunger/stringifyMember(org.aspectj.weaver.ResolvedMember)#java/lang/StringBuffer/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/stringifyMember(org.aspectj.weaver.ResolvedMember)#java/lang/StringBuffer/toString()
org/aspectj/weaver/bcel/BcelTypeMunger/stringifyMember(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/bcel/BcelTypeMunger/stringifyMember(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelTypeMunger/stringifyMember(org.aspectj.weaver.ResolvedMember)#java/lang/StringBuffer/append(java.lang.String)
org/aspectj/weaver/bcel/BcelTypeMunger/stringifyMember(org.aspectj.weaver.ResolvedMember)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/bcel/BcelTypeMunger/stringifyMember(org.aspectj.weaver.ResolvedMember)#java/lang/StringBuffer/StringBuffer()
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule4_compatibleReturnTypes(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/bcel/BcelWorld/getMessageHandler()
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule4_compatibleReturnTypes(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule4_compatibleReturnTypes(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/bcel/BcelWorld/resolve(org.aspectj.weaver.UnresolvedType)
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule4_compatibleReturnTypes(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule4_compatibleReturnTypes(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule4_compatibleReturnTypes(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule4_compatibleReturnTypes(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule4_compatibleReturnTypes(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/ResolvedMember/getParameterSignature()
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule4_compatibleReturnTypes(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule4_compatibleReturnTypes(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.bcel.LazyMethodGen)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule4_compatibleReturnTypes(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/String/replace(char,char)
org/aspectj/weaver/bcel/BcelTypeMunger/enforceDecpRule4_compatibleReturnTypes(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.ResolvedMember,org.aspectj.weaver.bcel.LazyMethodGen)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelTypeMunger/attemptToModifySuperCalls(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedMember/getSignature()
org/aspectj/weaver/bcel/BcelTypeMunger/attemptToModifySuperCalls(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelTypeMunger/attemptToModifySuperCalls(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelTypeMunger/attemptToModifySuperCalls(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelTypeMunger/attemptToModifySuperCalls(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/bcel/BcelWorld/getMessageHandler()
org/aspectj/weaver/bcel/BcelTypeMunger/attemptToModifySuperCalls(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#org/aspectj/apache/bcel/generic/InvokeInstruction/getClassName(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelTypeMunger/attemptToModifySuperCalls(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelTypeMunger/attemptToModifySuperCalls(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#org/aspectj/apache/bcel/generic/InvokeInstruction/setIndex(int)
org/aspectj/weaver/bcel/BcelTypeMunger/attemptToModifySuperCalls(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelTypeMunger/attemptToModifySuperCalls(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/bcel/BcelTypeMunger/getSourceLocation()
org/aspectj/weaver/bcel/BcelTypeMunger/attemptToModifySuperCalls(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/attemptToModifySuperCalls(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#org/aspectj/apache/bcel/generic/InvokeInstruction/getSignature(org.aspectj.apache.bcel.classfile.ConstantPool)
org/aspectj/weaver/bcel/BcelTypeMunger/attemptToModifySuperCalls(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/BcelTypeMunger/attemptToModifySuperCalls(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.bcel.LazyClassGen,org.aspectj.weaver.ResolvedType)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelTypeMunger/getRealMemberForITDFromAspect(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,boolean)#java/lang/StringBuilder/append(int)
org/aspectj/weaver/bcel/BcelTypeMunger/getRealMemberForITDFromAspect(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,boolean)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/getRealMemberForITDFromAspect(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,boolean)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelTypeMunger/getRealMemberForITDFromAspect(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,boolean)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelTypeMunger/getRealMemberForITDFromAspect(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,boolean)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/getRealMemberForITDFromAspect(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,boolean)#org/aspectj/weaver/ResolvedType/isGenericType()
org/aspectj/weaver/bcel/BcelTypeMunger/getRealMemberForITDFromAspect(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,boolean)#org/aspectj/weaver/ResolvedType/isTypeVariableReference()
org/aspectj/weaver/bcel/BcelTypeMunger/getRealMemberForITDFromAspect(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,boolean)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelTypeMunger/getRealMemberForITDFromAspect(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,boolean)#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/bcel/BcelTypeMunger/getRealMemberForITDFromAspect(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,boolean)#org/aspectj/weaver/ResolvedType/resolve(org.aspectj.weaver.World)
org/aspectj/weaver/bcel/BcelTypeMunger/getRealMemberForITDFromAspect(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,boolean)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/bcel/BcelTypeMunger/getRealMemberForITDFromAspect(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,boolean)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelTypeMunger/getRealMemberForITDFromAspect(org.aspectj.weaver.ResolvedType,org.aspectj.weaver.ResolvedMember,boolean)#org/aspectj/weaver/ResolvedType/isParameterizedType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#org/aspectj/weaver/bcel/BcelWorld/getMessageHandler()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#org/aspectj/weaver/ResolvedMember/getSignature()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#org/aspectj/weaver/NewMethodTypeMunger/getSourceLocation()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#java/lang/Object/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#org/aspectj/weaver/NewMethodTypeMunger/getSuperMethodsCalled()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#org/aspectj/weaver/ResolvedMember/resolve(org.aspectj.weaver.World)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#org/aspectj/weaver/bcel/BcelTypeMunger/getSignature()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#org/aspectj/weaver/bcel/BcelWorld/isInJava5Mode()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#org/aspectj/weaver/ResolvedType/isRawType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#java/lang/reflect/Modifier/isStatic(int)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#org/aspectj/weaver/bcel/BcelTypeMunger/getAspectType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#java/util/Set/contains(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#org/aspectj/weaver/ResolvedType/getName()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#org/aspectj/weaver/NewMethodTypeMunger/getSignature()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#java/util/HashSet/HashSet()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#java/util/Set/add(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#java/lang/reflect/Modifier/isAbstract(int)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewMethod(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewMethodTypeMunger)#java/lang/StringBuilder/toString()
org/aspectj/weaver/bcel/BcelTypeMunger/mungePrivilegedAccess(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.PrivilegedAccessMunger)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelTypeMunger/mungePrivilegedAccess(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.PrivilegedAccessMunger)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungePrivilegedAccess(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.PrivilegedAccessMunger)#org/aspectj/weaver/PrivilegedAccessMunger/getSourceLocation()
org/aspectj/weaver/bcel/BcelTypeMunger/mungePrivilegedAccess(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.PrivilegedAccessMunger)#org/aspectj/weaver/ResolvedMember/getKind()
org/aspectj/weaver/bcel/BcelTypeMunger/mungePrivilegedAccess(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.PrivilegedAccessMunger)#org/aspectj/weaver/ResolvedType/isRawType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungePrivilegedAccess(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.PrivilegedAccessMunger)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelTypeMunger/mungePrivilegedAccess(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.PrivilegedAccessMunger)#org/aspectj/weaver/bcel/BcelWorld/resolve(org.aspectj.weaver.UnresolvedType,org.aspectj.bridge.ISourceLocation)
org/aspectj/weaver/bcel/BcelTypeMunger/mungePrivilegedAccess(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.PrivilegedAccessMunger)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/weaver/bcel/BcelTypeMunger/mungePrivilegedAccess(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.PrivilegedAccessMunger)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewConstructor(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewConstructorTypeMunger)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewConstructor(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewConstructorTypeMunger)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewConstructor(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewConstructorTypeMunger)#org/aspectj/weaver/bcel/BcelWorld/isInJava5Mode()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewConstructor(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewConstructorTypeMunger)#org/aspectj/weaver/ResolvedType/isRawType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewConstructor(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewConstructorTypeMunger)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewConstructor(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewConstructorTypeMunger)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewConstructor(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewConstructorTypeMunger)#org/aspectj/weaver/NewConstructorTypeMunger/getSignature()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewConstructor(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewConstructorTypeMunger)#org/aspectj/weaver/bcel/BcelWorld/getDeclareAnnotationOnMethods()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewConstructor(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewConstructorTypeMunger)#java/util/List/iterator()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewConstructor(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewConstructorTypeMunger)#org/aspectj/weaver/ResolvedMember/getParameterTypes()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/apache/bcel/generic/FieldGen/addAnnotation(org.aspectj.apache.bcel.classfile.annotation.AnnotationGen)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/weaver/NewFieldTypeMunger/getTypeVariableAliases()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/weaver/ResolvedMember/getSignature()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#java/util/Iterator/hasNext()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/apache/bcel/generic/FieldGen/addAttribute(org.aspectj.apache.bcel.classfile.Attribute)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/weaver/ResolvedMember/getType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/weaver/bcel/BcelTypeMunger/getWorld()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/weaver/ResolvedMember/getDeclaringType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/weaver/NewFieldTypeMunger/getSourceLocation()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/weaver/bcel/BcelWorld/isInJava5Mode()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/weaver/ResolvedType/isRawType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#java/util/Iterator/next()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/weaver/bcel/BcelWorld/resolve(org.aspectj.weaver.UnresolvedType,org.aspectj.bridge.ISourceLocation)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/weaver/bcel/BcelField/getName()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/weaver/bcel/BcelTypeMunger/getSourceLocation()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#java/lang/reflect/Modifier/isStatic(int)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#java/lang/String/equals(java.lang.Object)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/weaver/NewFieldTypeMunger/getSignature()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/weaver/ResolvedMember/getReturnType()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/weaver/ResolvedMember/getName()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#org/aspectj/weaver/NewFieldTypeMunger/getDeclaredSignature()
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/weaver/bcel/BcelTypeMunger/mungeNewField(org.aspectj.weaver.bcel.BcelClassWeaver,org.aspectj.weaver.NewFieldTypeMunger)#java/util/List/iterator()
org/aspectj/weaver/reflect/JavaLangTypeToResolvedTypeConverter/fromType(java.lang.reflect.Type)#java/util/Map/put(java.lang.Object,java.lang.Object)
org/aspectj/weaver/reflect/JavaLangTypeToResolvedTypeConverter/fromType(java.lang.reflect.Type)#java/lang/reflect/GenericArrayType/getGenericComponentType()
org/aspectj/weaver/reflect/JavaLangTypeToResolvedTypeConverter/fromType(java.lang.reflect.Type)#java/util/Map/get(java.lang.Object)
org/aspectj/weaver/reflect/JavaLangTypeToResolvedTypeConverter/fromType(java.lang.reflect.Type)#java/lang/String/replace(char,char)
org/aspectj/weaver/reflect/JavaLangTypeToResolvedTypeConverter/fromType(java.lang.reflect.Type)#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
org/aspectj/weaver/reflect/JavaLangTypeToResolvedTypeConverter/fromType(java.lang.reflect.Type)#java/lang/Class/isArray()
org/aspectj/weaver/reflect/JavaLangTypeToResolvedTypeConverter/fromType(java.lang.reflect.Type)#java/lang/reflect/TypeVariable/getName()
org/aspectj/weaver/reflect/JavaLangTypeToResolvedTypeConverter/fromType(java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getRawType()
org/aspectj/weaver/reflect/JavaLangTypeToResolvedTypeConverter/fromType(java.lang.reflect.Type)#java/lang/reflect/WildcardType/getLowerBounds()
org/aspectj/weaver/reflect/JavaLangTypeToResolvedTypeConverter/fromType(java.lang.reflect.Type)#java/lang/reflect/WildcardType/getUpperBounds()
org/aspectj/weaver/reflect/JavaLangTypeToResolvedTypeConverter/fromType(java.lang.reflect.Type)#java/lang/reflect/TypeVariable/getBounds()
org/aspectj/weaver/reflect/JavaLangTypeToResolvedTypeConverter/fromType(java.lang.reflect.Type)#java/lang/Class/getName()
org/aspectj/weaver/reflect/JavaLangTypeToResolvedTypeConverter/fromType(java.lang.reflect.Type)#java/lang/reflect/ParameterizedType/getActualTypeArguments()
org/aspectj/weaver/reflect/JavaLangTypeToResolvedTypeConverter/fromType(java.lang.reflect.Type)#java/util/Map/remove(java.lang.Object)
org/aspectj/apache/bcel/generic/Type/getTypeInternal(java.lang.String)#org/aspectj/apache/bcel/generic/Type$TypeHolder/TypeHolder(org.aspectj.apache.bcel.generic.Type,int)
org/aspectj/apache/bcel/generic/Type/getTypeInternal(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/generic/Type/getTypeInternal(java.lang.String)#org/aspectj/apache/bcel/generic/Type$TypeHolder/getConsumed()
org/aspectj/apache/bcel/generic/Type/getTypeInternal(java.lang.String)#java/lang/String/indexOf(int)
org/aspectj/apache/bcel/generic/Type/getTypeInternal(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/generic/Type/getTypeInternal(java.lang.String)#org/aspectj/apache/bcel/generic/Type$TypeHolder/getType()
org/aspectj/apache/bcel/generic/Type/getTypeInternal(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/generic/Type/getTypeInternal(java.lang.String)#java/lang/String/charAt(int)
org/aspectj/apache/bcel/generic/Type/getTypeInternal(java.lang.String)#java/lang/String/substring(int,int)
org/aspectj/apache/bcel/generic/Type/getTypeInternal(java.lang.String)#java/lang/String/substring(int)
org/aspectj/apache/bcel/generic/Type/getTypeInternal(java.lang.String)#java/lang/String/replace(char,char)
org/aspectj/apache/bcel/generic/Type/getArgumentTypes(java.lang.String)#java/util/ArrayList/ArrayList()
org/aspectj/apache/bcel/generic/Type/getArgumentTypes(java.lang.String)#org/aspectj/apache/bcel/generic/Type$TypeHolder/getType()
org/aspectj/apache/bcel/generic/Type/getArgumentTypes(java.lang.String)#java/util/List/size()
org/aspectj/apache/bcel/generic/Type/getArgumentTypes(java.lang.String)#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/generic/Type/getArgumentTypes(java.lang.String)#java/util/List/toArray(java.lang.Object[])
org/aspectj/apache/bcel/generic/Type/getArgumentTypes(java.lang.String)#org/aspectj/apache/bcel/generic/Type$TypeHolder/getConsumed()
org/aspectj/apache/bcel/generic/Type/getArgumentTypes(java.lang.String)#java/lang/String/substring(int)
org/aspectj/apache/bcel/generic/Type/getArgumentTypes(java.lang.String)#java/util/List/add(java.lang.Object)
org/aspectj/apache/bcel/generic/Type/getArgumentTypes(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/generic/Type/getArgumentTypes(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/generic/Type/getArgumentTypes(java.lang.String)#java/lang/String/charAt(int)
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/stringifyValue()#java/lang/Character/toString()
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/stringifyValue()#java/lang/Integer/intValue()
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/stringifyValue()#java/lang/StringBuilder/append(int)
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/stringifyValue()#java/lang/Long/toString(long)
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/stringifyValue()#java/lang/Integer/toString(int)
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/stringifyValue()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/stringifyValue()#java/lang/Long/longValue()
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/stringifyValue()#java/lang/Double/toString()
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/stringifyValue()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/stringifyValue()#java/lang/Character/Character(char)
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/stringifyValue()#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/stringifyValue()#java/lang/Float/floatValue()
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/stringifyValue()#java/lang/Float/toString(float)
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/toString()#java/lang/Character/toString()
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/toString()#java/lang/Integer/intValue()
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/toString()#java/lang/StringBuilder/append(int)
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/toString()#java/lang/Long/toString(long)
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/toString()#java/lang/Integer/toString(int)
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/toString()#java/lang/StringBuilder/StringBuilder(java.lang.String)
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/toString()#java/lang/Long/longValue()
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/toString()#java/lang/Double/toString()
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/toString()#java/lang/StringBuilder/StringBuilder()
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/toString()#java/lang/RuntimeException/RuntimeException(java.lang.String)
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/toString()#java/lang/Character/Character(char)
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/toString()#java/lang/StringBuilder/toString()
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/toString()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/toString()#java/lang/Float/floatValue()
org/aspectj/apache/bcel/classfile/annotation/SimpleElementValue/toString()#java/lang/Float/toString(float)
org/aspectj/weaver/bcel/ClassPathManager/addPath(java.lang.String,org.aspectj.bridge.IMessageHandler)#java/io/IOException/getMessage()
org/aspectj/weaver/bcel/ClassPathManager/addPath(java.lang.String,org.aspectj.bridge.IMessageHandler)#java/io/File/File(java.lang.String)
org/aspectj/weaver/bcel/ClassPathManager/addPath(java.lang.String,org.aspectj.bridge.IMessageHandler)#java/util/List/add(java.lang.Object)
org/aspectj/weaver/bcel/ClassPathManager/addPath(java.lang.String,org.aspectj.bridge.IMessageHandler)#java/io/File/isFile()
org/aspectj/weaver/bcel/ClassPathManager/addPath(java.lang.String,org.aspectj.bridge.IMessageHandler)#org/aspectj/weaver/bcel/ClassPathManager$DirEntry/DirEntry(org.aspectj.weaver.bcel.ClassPathManager,java.io.File)
org/aspectj/weaver/bcel/ClassPathManager/addPath(java.lang.String,org.aspectj.bridge.IMessageHandler)#org/aspectj/weaver/bcel/ClassPathManager$ZipFileEntry/ZipFileEntry(org.aspectj.weaver.bcel.ClassPathManager,java.io.File)
org/aspectj/weaver/bcel/ClassPathManager/addPath(java.lang.String,org.aspectj.bridge.IMessageHandler)#java/io/File/isDirectory()
org/aspectj/weaver/bcel/ClassPathManager/addPath(java.lang.String,org.aspectj.bridge.IMessageHandler)#java/lang/String/toLowerCase()
org/aspectj/weaver/bcel/ClassPathManager/addPath(java.lang.String,org.aspectj.bridge.IMessageHandler)#java/lang/String/endsWith(java.lang.String)
org/aspectj/bridge/ReflectionFactory/make(java.lang.Class,java.lang.String,java.lang.Object[],org.aspectj.bridge.IMessageHandler)#java/lang/reflect/Constructor/newInstance(java.lang.Object[])
org/aspectj/bridge/ReflectionFactory/make(java.lang.Class,java.lang.String,java.lang.Object[],org.aspectj.bridge.IMessageHandler)#java/lang/Class/newInstance()
org/aspectj/bridge/ReflectionFactory/make(java.lang.Class,java.lang.String,java.lang.Object[],org.aspectj.bridge.IMessageHandler)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/bridge/ReflectionFactory/make(java.lang.Class,java.lang.String,java.lang.Object[],org.aspectj.bridge.IMessageHandler)#java/util/Arrays/asList(java.lang.Object[])
org/aspectj/bridge/ReflectionFactory/make(java.lang.Class,java.lang.String,java.lang.Object[],org.aspectj.bridge.IMessageHandler)#java/lang/Class/getName()
org/aspectj/bridge/ReflectionFactory/make(java.lang.Class,java.lang.String,java.lang.Object[],org.aspectj.bridge.IMessageHandler)#java/lang/StringBuilder/StringBuilder()
org/aspectj/bridge/ReflectionFactory/make(java.lang.Class,java.lang.String,java.lang.Object[],org.aspectj.bridge.IMessageHandler)#java/lang/Class/getConstructor(java.lang.Class[])
org/aspectj/bridge/ReflectionFactory/make(java.lang.Class,java.lang.String,java.lang.Object[],org.aspectj.bridge.IMessageHandler)#java/lang/StringBuilder/toString()
org/aspectj/bridge/ReflectionFactory/make(java.lang.Class,java.lang.String,java.lang.Object[],org.aspectj.bridge.IMessageHandler)#java/lang/Class/forName(java.lang.String)
org/aspectj/bridge/ReflectionFactory/make(java.lang.Class,java.lang.String,java.lang.Object[],org.aspectj.bridge.IMessageHandler)#java/lang/Class/isAssignableFrom(java.lang.Class)
org/aspectj/bridge/ReflectionFactory/make(java.lang.Class,java.lang.String,java.lang.Object[],org.aspectj.bridge.IMessageHandler)#java/lang/StringBuilder/append(java.lang.Object)
org/aspectj/bridge/ReflectionFactory/make(java.lang.Class,java.lang.String,java.lang.Object[],org.aspectj.bridge.IMessageHandler)#java/lang/Object/getClass()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/storeMap()#java/io/File/File(java.lang.String)
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/storeMap()#java/io/ObjectOutputStream/writeObject(java.lang.Object)
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/storeMap()#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/storeMap()#java/io/File/getAbsolutePath()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/storeMap()#java/io/ObjectOutputStream/ObjectOutputStream(java.io.OutputStream)
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/storeMap()#java/lang/System/currentTimeMillis()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/storeMap()#java/io/FileOutputStream/FileOutputStream(java.io.File)
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/storeMap()#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/storeMap()#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/storeMap()#java/io/ObjectOutputStream/close()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/init(java.lang.String,int)#org/aspectj/weaver/tools/cache/SimpleCache$StoreableCachingMap/initTrace()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/init(java.lang.String,int)#org/aspectj/weaver/tools/cache/SimpleCache$StoreableCachingMap/StoreableCachingMap(java.lang.String,int)
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/init(java.lang.String,int)#java/io/File/File(java.lang.String)
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/init(java.lang.String,int)#java/io/FileInputStream/FileInputStream(java.io.File)
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/init(java.lang.String,int)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/init(java.lang.String,int)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/init(java.lang.String,int)#java/io/File/exists()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/init(java.lang.String,int)#java/io/ObjectInputStream/readObject()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/init(java.lang.String,int)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/init(java.lang.String,int)#java/io/ObjectInputStream/close()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/init(java.lang.String,int)#java/io/ObjectInputStream/ObjectInputStream(java.io.InputStream)
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/readFromPath(java.lang.String)#java/io/ByteArrayOutputStream/flush()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/readFromPath(java.lang.String)#java/io/FileInputStream/FileInputStream(java.lang.String)
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/readFromPath(java.lang.String)#java/io/ByteArrayOutputStream/write(byte[],int,int)
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/readFromPath(java.lang.String)#java/lang/StringBuilder/StringBuilder()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/readFromPath(java.lang.String)#java/io/FileInputStream/close()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/readFromPath(java.lang.String)#java/io/ByteArrayOutputStream/toByteArray()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/readFromPath(java.lang.String)#java/io/ByteArrayOutputStream/ByteArrayOutputStream()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/readFromPath(java.lang.String)#java/io/FileInputStream/read(byte[],int,int)
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/readFromPath(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/readFromPath(java.lang.String)#java/io/PrintStream/println(java.lang.String)
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/readFromPath(java.lang.String)#java/lang/StringBuilder/toString()
org/aspectj/weaver/tools/cache/SimpleCache/StoreableCachingMap/readFromPath(java.lang.String)#java/io/FileNotFoundException/printStackTrace()
