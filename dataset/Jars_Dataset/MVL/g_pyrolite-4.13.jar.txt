net/razorvine/pickle/Unpickler/load_int()#java/lang/Long/valueOf(long)
net/razorvine/pickle/Unpickler/load_int()#java/lang/String/length()
net/razorvine/pickle/Unpickler/load_int()#java/lang/Boolean/valueOf(boolean)
net/razorvine/pickle/Unpickler/load_int()#java/lang/String/substring(int)
net/razorvine/pickle/Unpickler/load_int()#java/lang/Integer/valueOf(int)
net/razorvine/pickle/Unpickler/load_int()#java/lang/Long/parseLong(java.lang.String,int)
net/razorvine/pickle/Unpickler/load_int()#java/lang/String/equals(java.lang.Object)
net/razorvine/pickle/Unpickler/load_int()#java/lang/Integer/parseInt(java.lang.String,int)
net/razorvine/pickle/Unpickler/load_int()#java/lang/String/substring(int,int)
net/razorvine/pyro/Message/get_annotations_bytes()#java/util/ArrayList/iterator()
net/razorvine/pyro/Message/get_annotations_bytes()#java/util/ArrayList/ArrayList()
net/razorvine/pyro/Message/get_annotations_bytes()#java/util/Iterator/hasNext()
net/razorvine/pyro/Message/get_annotations_bytes()#java/util/Map$Entry/getKey()
net/razorvine/pyro/Message/get_annotations_bytes()#java/lang/String/length()
net/razorvine/pyro/Message/get_annotations_bytes()#java/util/Iterator/next()
net/razorvine/pyro/Message/get_annotations_bytes()#java/util/ArrayList/add(java.lang.Object)
net/razorvine/pyro/Message/get_annotations_bytes()#java/util/Set/iterator()
net/razorvine/pyro/Message/get_annotations_bytes()#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
net/razorvine/pyro/Message/get_annotations_bytes()#java/util/Map$Entry/getValue()
net/razorvine/pyro/Message/get_annotations_bytes()#java/util/SortedMap/entrySet()
net/razorvine/pyro/Message/get_annotations_bytes()#java/lang/String/getBytes()
net/razorvine/pyro/Message/get_annotations_bytes()#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
net/razorvine/pyro/Message/hmac(byte[])#javax/crypto/spec/SecretKeySpec/SecretKeySpec(byte[],java.lang.String)
net/razorvine/pyro/Message/hmac(byte[])#java/util/Iterator/hasNext()
net/razorvine/pyro/Message/hmac(byte[])#javax/crypto/Mac/getInstance(java.lang.String)
net/razorvine/pyro/Message/hmac(byte[])#java/lang/String/equals(java.lang.Object)
net/razorvine/pyro/Message/hmac(byte[])#java/util/Set/iterator()
net/razorvine/pyro/Message/hmac(byte[])#java/util/Map$Entry/getKey()
net/razorvine/pyro/Message/hmac(byte[])#javax/crypto/Mac/init(java.security.Key)
net/razorvine/pyro/Message/hmac(byte[])#java/util/Iterator/next()
net/razorvine/pyro/Message/hmac(byte[])#javax/crypto/Mac/doFinal()
net/razorvine/pyro/Message/hmac(byte[])#javax/crypto/Mac/update(byte[])
net/razorvine/pyro/Message/hmac(byte[])#java/util/Map$Entry/getValue()
net/razorvine/pyro/Message/hmac(byte[])#java/util/SortedMap/entrySet()
net/razorvine/pyro/Message/recv(java.io.InputStream,int[],byte[])#java/lang/String/format(java.lang.String,java.lang.Object[])
net/razorvine/pyro/Message/recv(java.io.InputStream,int[],byte[])#java/util/SortedMap/get(java.lang.Object)
net/razorvine/pyro/Message/recv(java.io.InputStream,int[],byte[])#java/util/TreeMap/TreeMap()
net/razorvine/pyro/Message/recv(java.io.InputStream,int[],byte[])#java/lang/Integer/valueOf(int)
net/razorvine/pyro/Message/recv(java.io.InputStream,int[],byte[])#java/util/SortedMap/containsKey(java.lang.Object)
net/razorvine/pyro/Message/recv(java.io.InputStream,int[],byte[])#java/lang/System/arraycopy(java.lang.Object,int,java.lang.Object,int,int)
net/razorvine/pyro/Message/recv(java.io.InputStream,int[],byte[])#java/util/Arrays/equals(byte[],byte[])
net/razorvine/pyro/Message/recv(java.io.InputStream,int[],byte[])#java/lang/String/String(byte[],int,int)
net/razorvine/pyro/Message/recv(java.io.InputStream,int[],byte[])#java/util/SortedMap/put(java.lang.Object,java.lang.Object)
net/razorvine/pyro/PyroProxy/_decompressMessageData(net.razorvine.pyro.Message)#java/util/zip/Inflater/inflate(byte[])
net/razorvine/pyro/PyroProxy/_decompressMessageData(net.razorvine.pyro.Message)#java/io/ByteArrayOutputStream/ByteArrayOutputStream(int)
net/razorvine/pyro/PyroProxy/_decompressMessageData(net.razorvine.pyro.Message)#java/util/zip/Inflater/setInput(byte[])
net/razorvine/pyro/PyroProxy/_decompressMessageData(net.razorvine.pyro.Message)#java/io/ByteArrayOutputStream/write(byte[],int,int)
net/razorvine/pyro/PyroProxy/_decompressMessageData(net.razorvine.pyro.Message)#java/util/zip/Inflater/Inflater()
net/razorvine/pyro/PyroProxy/_decompressMessageData(net.razorvine.pyro.Message)#java/util/zip/Inflater/finished()
net/razorvine/pyro/PyroProxy/_decompressMessageData(net.razorvine.pyro.Message)#java/lang/IllegalArgumentException/IllegalArgumentException(java.lang.String)
net/razorvine/pyro/PyroProxy/_decompressMessageData(net.razorvine.pyro.Message)#java/io/ByteArrayOutputStream/toByteArray()
net/razorvine/pyro/PyroProxy/_decompressMessageData(net.razorvine.pyro.Message)#java/util/zip/Inflater/end()
net/razorvine/pyro/PyroException/__setstate__(java.util.HashMap)#java/util/Iterator/next()
net/razorvine/pyro/PyroException/__setstate__(java.util.HashMap)#java/lang/StringBuilder/StringBuilder()
net/razorvine/pyro/PyroException/__setstate__(java.util.HashMap)#java/util/List/iterator()
net/razorvine/pyro/PyroException/__setstate__(java.util.HashMap)#java/util/HashMap/get(java.lang.Object)
net/razorvine/pyro/PyroException/__setstate__(java.util.HashMap)#java/lang/StringBuilder/toString()
net/razorvine/pyro/PyroException/__setstate__(java.util.HashMap)#java/util/Iterator/hasNext()
net/razorvine/pyro/PyroException/__setstate__(java.util.HashMap)#java/lang/Class/getComponentType()
net/razorvine/pyro/PyroException/__setstate__(java.util.HashMap)#java/lang/StringBuilder/append(java.lang.Object)
net/razorvine/pyro/PyroException/__setstate__(java.util.HashMap)#java/lang/Object/getClass()
net/razorvine/pickle/objects/ArrayConstructor/construct(java.lang.Object[])#java/util/ArrayList/iterator()
net/razorvine/pickle/objects/ArrayConstructor/construct(java.lang.Object[])#java/lang/Integer/intValue()
net/razorvine/pickle/objects/ArrayConstructor/construct(java.lang.Object[])#java/util/Iterator/hasNext()
net/razorvine/pickle/objects/ArrayConstructor/construct(java.lang.Object[])#java/lang/StringBuilder/append(int)
net/razorvine/pickle/objects/ArrayConstructor/construct(java.lang.Object[])#java/lang/Number/byteValue()
net/razorvine/pickle/objects/ArrayConstructor/construct(java.lang.Object[])#java/util/ArrayList/size()
net/razorvine/pickle/objects/ArrayConstructor/construct(java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
net/razorvine/pickle/objects/ArrayConstructor/construct(java.lang.Object[])#java/lang/StringBuilder/toString()
net/razorvine/pickle/objects/ArrayConstructor/construct(java.lang.Object[])#java/lang/Number/floatValue()
net/razorvine/pickle/objects/ArrayConstructor/construct(java.lang.Object[])#java/lang/Number/shortValue()
net/razorvine/pickle/objects/ArrayConstructor/construct(java.lang.Object[])#java/lang/Number/doubleValue()
net/razorvine/pickle/objects/ArrayConstructor/construct(java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
net/razorvine/pickle/objects/ArrayConstructor/construct(java.lang.Object[])#java/lang/String/charAt(int)
net/razorvine/pickle/objects/ArrayConstructor/construct(java.lang.Object[])#java/util/Iterator/next()
net/razorvine/pickle/objects/ArrayConstructor/construct(java.lang.Object[])#java/lang/Number/intValue()
net/razorvine/pickle/objects/ArrayConstructor/construct(java.lang.Object[])#java/lang/Number/longValue()
net/razorvine/pickle/PickleUtils/decode_unicode_escaped(java.lang.String)#java/lang/String/length()
net/razorvine/pickle/PickleUtils/decode_unicode_escaped(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
net/razorvine/pickle/PickleUtils/decode_unicode_escaped(java.lang.String)#java/lang/Integer/parseInt(java.lang.String,int)
net/razorvine/pickle/PickleUtils/decode_unicode_escaped(java.lang.String)#java/lang/StringBuilder/StringBuilder()
net/razorvine/pickle/PickleUtils/decode_unicode_escaped(java.lang.String)#java/lang/StringBuilder/append(char)
net/razorvine/pickle/PickleUtils/decode_unicode_escaped(java.lang.String)#java/lang/String/indexOf(int)
net/razorvine/pickle/PickleUtils/decode_unicode_escaped(java.lang.String)#java/lang/StringBuilder/toString()
net/razorvine/pickle/PickleUtils/decode_unicode_escaped(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
net/razorvine/pickle/PickleUtils/decode_unicode_escaped(java.lang.String)#java/lang/String/charAt(int)
net/razorvine/pickle/PickleUtils/decode_escaped(java.lang.String)#java/lang/String/length()
net/razorvine/pickle/PickleUtils/decode_escaped(java.lang.String)#java/lang/StringBuilder/StringBuilder(int)
net/razorvine/pickle/PickleUtils/decode_escaped(java.lang.String)#java/lang/Integer/parseInt(java.lang.String,int)
net/razorvine/pickle/PickleUtils/decode_escaped(java.lang.String)#java/lang/StringBuilder/StringBuilder()
net/razorvine/pickle/PickleUtils/decode_escaped(java.lang.String)#java/lang/StringBuilder/append(char)
net/razorvine/pickle/PickleUtils/decode_escaped(java.lang.String)#java/lang/String/indexOf(int)
net/razorvine/pickle/PickleUtils/decode_escaped(java.lang.String)#java/lang/StringBuilder/toString()
net/razorvine/pickle/PickleUtils/decode_escaped(java.lang.String)#java/lang/StringBuilder/append(java.lang.String)
net/razorvine/pickle/PickleUtils/decode_escaped(java.lang.String)#java/lang/String/charAt(int)
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/ArrayList/ArrayList(int)
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Arrays/toString(char[])
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Arrays/toString(byte[])
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Set/iterator()
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/text/DateFormat/getDateTimeInstance(int,int,java.util.Locale)
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/lang/Object/toString()
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/lang/Object/equals(java.lang.Object)
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Iterator/hasNext()
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/lang/Class/getComponentType()
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Set/size()
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/lang/StringBuilder/append(java.lang.String)
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/lang/StringBuilder/append(int)
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Arrays/toString(double[])
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Arrays/toString(float[])
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Arrays/toString(short[])
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Calendar/getTime()
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Map/get(java.lang.Object)
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/lang/Class/isPrimitive()
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Map/size()
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Iterator/next()
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Map/keySet()
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/ArrayList/add(java.lang.Object)
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/lang/Class/getName()
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/lang/StringBuilder/StringBuilder()
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Arrays/deepToString(java.lang.Object[])
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Collections/sort(java.util.List)
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/io/Writer/write(java.lang.String)
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Calendar/get(int)
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Arrays/toString(int[])
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/lang/StringBuilder/append(java.lang.Object)
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/lang/Object/getClass()
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/text/DateFormat/format(java.util.Date)
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/ArrayList/toString()
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/io/Writer/flush()
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/lang/StringBuilder/toString()
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Arrays/toString(long[])
net/razorvine/pickle/PrettyPrint/print(java.lang.Object,java.io.Writer,boolean)#java/util/Arrays/toString(boolean[])
net/razorvine/pickle/Pickler/put_arrayOfPrimitives(java.lang.Class,java.lang.Object)#java/lang/Object/equals(java.lang.Object)
net/razorvine/pickle/Pickler/put_arrayOfPrimitives(java.lang.Class,java.lang.Object)#java/lang/String/String(char[])
net/razorvine/pickle/Pickler/put_arrayOfPrimitives(java.lang.Class,java.lang.Object)#java/io/OutputStream/write(int)
net/razorvine/pickle/Pickler/put_arrayOfPrimitives(java.lang.Class,java.lang.Object)#java/lang/Boolean/valueOf(boolean)
net/razorvine/pickle/Pickler/put_arrayOfPrimitives(java.lang.Class,java.lang.Object)#java/lang/Integer/valueOf(int)
net/razorvine/pickle/Pickler/put_arrayOfPrimitives(java.lang.Class,java.lang.Object)#java/lang/Double/valueOf(double)
net/razorvine/pickle/Pickler/put_arrayOfPrimitives(java.lang.Class,java.lang.Object)#java/lang/Long/valueOf(long)
net/razorvine/pickle/Pickler/put_arrayOfPrimitives(java.lang.Class,java.lang.Object)#java/lang/Short/valueOf(short)
net/razorvine/pickle/Pickler/put_arrayOfPrimitives(java.lang.Class,java.lang.Object)#java/lang/Float/valueOf(float)
net/razorvine/pickle/Pickler/put_arrayOfPrimitives(java.lang.Class,java.lang.Object)#java/lang/String/getBytes()
net/razorvine/pickle/Pickler/put_arrayOfPrimitives(java.lang.Class,java.lang.Object)#java/io/OutputStream/write(byte[])
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/Class/getMethods()
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/String/toLowerCase()
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/reflect/Method/getModifiers()
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/String/length()
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/util/HashMap/HashMap()
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/reflect/Method/getName()
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/String/substring(int)
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/StringBuilder/append(char)
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/String/startsWith(java.lang.String)
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/reflect/Method/invoke(java.lang.Object,java.lang.Object[])
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/StringBuilder/toString()
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/Character/toLowerCase(char)
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/util/Map/put(java.lang.Object,java.lang.Object)
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/String/charAt(int)
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/String/equals(java.lang.Object)
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/Class/getName()
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/Character/isUpperCase(char)
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
net/razorvine/pickle/Pickler/put_javabean(java.lang.Object)#java/lang/Object/getClass()
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/sql/Time/getTime()
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/lang/Integer/longValue()
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/lang/StringBuilder/StringBuilder()
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/lang/Float/doubleValue()
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/lang/StringBuilder/append(java.lang.Object)
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/lang/StringBuilder/toString()
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/lang/Object/toString()
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/lang/Object/equals(java.lang.Object)
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/lang/Class/getComponentType()
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/util/Calendar/setTime(java.util.Date)
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/lang/Short/longValue()
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/lang/Class/isPrimitive()
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/lang/Long/longValue()
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/lang/Double/doubleValue()
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/util/GregorianCalendar/getInstance()
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/lang/Byte/longValue()
net/razorvine/pickle/Pickler/dispatch(java.lang.Class,java.lang.Object)#java/lang/Boolean/booleanValue()
net/razorvine/pyro/serializer/PyroProxySerpent/convert(java.lang.Object)#java/util/Map/put(java.lang.Object,java.lang.Object)
net/razorvine/pyro/serializer/PyroProxySerpent/convert(java.lang.Object)#java/lang/Double/valueOf(double)
net/razorvine/pyro/serializer/PyroProxySerpent/convert(java.lang.Object)#java/lang/StringBuilder/append(java.lang.String)
net/razorvine/pyro/serializer/PyroProxySerpent/convert(java.lang.Object)#java/lang/String/format(java.lang.String,java.lang.Object[])
net/razorvine/pyro/serializer/PyroProxySerpent/convert(java.lang.Object)#java/util/HashMap/HashMap()
net/razorvine/pyro/serializer/PyroProxySerpent/convert(java.lang.Object)#java/lang/StringBuilder/StringBuilder()
net/razorvine/pyro/serializer/PyroProxySerpent/convert(java.lang.Object)#java/lang/Integer/valueOf(int)
net/razorvine/pyro/serializer/PyroProxySerpent/convert(java.lang.Object)#javax/xml/bind/DatatypeConverter/printBase64Binary(byte[])
net/razorvine/pyro/serializer/PyroProxySerpent/convert(java.lang.Object)#java/lang/StringBuilder/toString()
net/razorvine/pickle/objects/ByteArrayConstructor/construct(java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
net/razorvine/pickle/objects/ByteArrayConstructor/construct(java.lang.Object[])#java/lang/StringBuilder/append(int)
net/razorvine/pickle/objects/ByteArrayConstructor/construct(java.lang.Object[])#java/lang/Number/byteValue()
net/razorvine/pickle/objects/ByteArrayConstructor/construct(java.lang.Object[])#java/util/ArrayList/size()
net/razorvine/pickle/objects/ByteArrayConstructor/construct(java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
net/razorvine/pickle/objects/ByteArrayConstructor/construct(java.lang.Object[])#java/lang/String/startsWith(java.lang.String)
net/razorvine/pickle/objects/ByteArrayConstructor/construct(java.lang.Object[])#java/lang/StringBuilder/append(java.lang.Object)
net/razorvine/pickle/objects/ByteArrayConstructor/construct(java.lang.Object[])#java/util/ArrayList/get(int)
net/razorvine/pickle/objects/ByteArrayConstructor/construct(java.lang.Object[])#java/lang/StringBuilder/toString()
net/razorvine/pickle/objects/ByteArrayConstructor/construct(java.lang.Object[])#java/lang/String/getBytes(java.lang.String)
net/razorvine/pickle/objects/ByteArrayConstructor/construct(java.lang.Object[])#java/lang/String/substring(int)
net/razorvine/pickle/objects/DateTimeConstructor/createDateTime(java.lang.Object[])#java/lang/Integer/intValue()
net/razorvine/pickle/objects/DateTimeConstructor/createDateTime(java.lang.Object[])#java/util/Calendar/set(int,int)
net/razorvine/pickle/objects/DateTimeConstructor/createDateTime(java.lang.Object[])#java/lang/StringBuilder/append(int)
net/razorvine/pickle/objects/DateTimeConstructor/createDateTime(java.lang.Object[])#java/lang/String/length()
net/razorvine/pickle/objects/DateTimeConstructor/createDateTime(java.lang.Object[])#java/lang/StringBuilder/StringBuilder()
net/razorvine/pickle/objects/DateTimeConstructor/createDateTime(java.lang.Object[])#java/util/GregorianCalendar/GregorianCalendar(int,int,int,int,int,int)
net/razorvine/pickle/objects/DateTimeConstructor/createDateTime(java.lang.Object[])#java/lang/StringBuilder/toString()
net/razorvine/pickle/objects/DateTimeConstructor/createDateTime(java.lang.Object[])#java/lang/StringBuilder/append(java.lang.String)
net/razorvine/pickle/objects/DateTimeConstructor/createDateTime(java.lang.Object[])#java/lang/String/charAt(int)
net/razorvine/pickle/objects/DateTimeConstructor/createDateTime(java.lang.Object[])#java/util/Calendar/setTimeZone(java.util.TimeZone)
net/razorvine/pyro/NameServerProxy/locateNS(java.lang.String,int,byte[])#java/net/DatagramSocket/send(java.net.DatagramPacket)
net/razorvine/pyro/NameServerProxy/locateNS(java.lang.String,int,byte[])#java/net/DatagramPacket/DatagramPacket(byte[],int)
net/razorvine/pyro/NameServerProxy/locateNS(java.lang.String,int,byte[])#java/net/DatagramSocket/setBroadcast(boolean)
net/razorvine/pyro/NameServerProxy/locateNS(java.lang.String,int,byte[])#java/lang/String/String(byte[],int,int)
net/razorvine/pyro/NameServerProxy/locateNS(java.lang.String,int,byte[])#java/lang/String/equals(java.lang.Object)
net/razorvine/pyro/NameServerProxy/locateNS(java.lang.String,int,byte[])#java/net/DatagramPacket/getData()
net/razorvine/pyro/NameServerProxy/locateNS(java.lang.String,int,byte[])#java/lang/String/getBytes()
net/razorvine/pyro/NameServerProxy/locateNS(java.lang.String,int,byte[])#java/net/InetAddress/getByName(java.lang.String)
net/razorvine/pyro/NameServerProxy/locateNS(java.lang.String,int,byte[])#java/net/DatagramSocket/DatagramSocket()
net/razorvine/pyro/NameServerProxy/locateNS(java.lang.String,int,byte[])#java/net/DatagramPacket/getLength()
net/razorvine/pyro/NameServerProxy/locateNS(java.lang.String,int,byte[])#java/net/DatagramSocket/close()
net/razorvine/pyro/NameServerProxy/locateNS(java.lang.String,int,byte[])#java/lang/String/startsWith(java.lang.String)
net/razorvine/pyro/NameServerProxy/locateNS(java.lang.String,int,byte[])#java/net/DatagramSocket/receive(java.net.DatagramPacket)
net/razorvine/pyro/NameServerProxy/locateNS(java.lang.String,int,byte[])#java/net/DatagramPacket/DatagramPacket(byte[],int,java.net.InetAddress,int)
net/razorvine/pyro/NameServerProxy/locateNS(java.lang.String,int,byte[])#java/net/DatagramSocket/setSoTimeout(int)
